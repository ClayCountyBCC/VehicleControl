{"version":3,"sources":["Store.tsx","nav.tsx","Utilities.ts","AVL/AVLData.ts","ErrorInformation.tsx","UnitOptions.tsx","UnitHistory.ts","UnitHistoryList.tsx","DeviceDetails.tsx","AVL/AVL.tsx","useFetchData.ts","ListHeaderView.tsx","AVL/AVLList.tsx","ListHeaders.ts","FleetComplete/FleetCompleteData.ts","FleetComplete/FC.tsx","FleetComplete/FCList.tsx","Cad/CADData.ts","Cad/CAD.tsx","Cad/CADList.tsx","Unit/UnitData.ts","Unit/UnitControls.tsx","Unit/Unit.tsx","Unit/AddUnit.tsx","Unit/UnitList.tsx","Map/LocationLayer.tsx","Map/WebMapView.tsx","SimpleValue.ts","App.tsx","useInterval.tsx","index.tsx"],"names":["initialState","map","map_view","unit_groups","current_view","avl_view","e","data_filter","sort_field","sort_ascending","special_filter","fc_view","cad_view","unit_view","avl_data","Array","fc_data","cad_data","unit_data","filtered_avl_data","filtered_fc_data","filtered_cad_data","filtered_unit_data","Store","React","createContext","reducer","state","action","type","payload","tmp_avl_view","process_avl","tmp_fc_view","process_fc","tmp_cad_view","process_cad","process_unit","v","view","option","new_view","filter_data","split","ve","id","unitcode","device_id","options","errors","history","details","console","log","array","specialFilter","length","filter","d","error_information","has_asset_tag_error","has_date_error","has_location_error","has_unit_error","has_cad_error","has_avl_error","has_fc_error","sort","indexOf","field","ascending","a","b","Date","sort_dates","arrayToFilter","filterUsing","toLowerCase","j","check","s","trim","filter_avl","asset_tag","filter_fc","filter_cad","f","group_label","using_unit","filter_unit","Nav","useContext","dispatch","closeBaseMapDropdown","document","getElementById","classList","remove","className","role","aria-label","onClick","event","style","paddingRight","isActive","contains","querySelectorAll","forEach","removeEventListener","addEventListener","toggle","Get","url","async","fetch","method","headers","cache","credentials","response","ok","Error","statusText","json","Post_Empty","data","body","JSON","stringify","Format_DateTime","date","toLocaleString","AVLData","device_type","direction","location_timestamp","satellite_count","velocity","latitude","longitude","updated_on","show_unit_options","show_errors","device_history","ErrorInformation","props","colSpan","colspan","errorText","index","key","UnitOptions","useState","currentUnit","setCurrentUnit","onChange","target","value","placeholder","preventDefault","update_data","UnitHistory","changed_from","changed_to","changed_on","changed_by","error_message","UnitHistoryList","title","h","DeviceDetails","show_details","valid_keys","date_keys","keys","Object","toString","AVL","update_view","get_property","property","get_history","color","point","center","zoom","viewOnMap","GetByUnit","Delete","fetchData","alert","new_unitcode","current_unit","Update","useFetchData","baseFetchData","dispatch_type","initial_load","isLoading","setIsLoading","isError","setIsError","result","useEffect","ListHeaderView","title_description","loading","view_name","header_filters","currentSearch","setCurrentSearch","padding","marginBottom","onKeyDown","stopPropagation","marginLeft","label","AVLList","Header","AVLHeader","sort_view","sort_by","href","avl","FleetCompleteData","vin","make","model","vehicle_year","FC","replace","GetByDeviceId","FCList","FCHeader","width","fc","CADData","inci_id","status","avstatus","speed","heading","CAD","CADList","CADHeader","cad","UnitData","show_in_minicad","avl_device_id","avl_longitude","avl_latitude","avl_location_timestamp","has_avl_device","fc_device_id","fc_longitude","fc_latitude","fc_location_timestamp","has_fc_device","cad_longitude","cad_latitude","cad_location_timestamp","should_have_cad_location","group","has_avl","has_fc","should_have_cad","UnitControls","g","getGroupValue","setGroup","hasAVL","setHasAVL","hasFC","setHasFC","hasCAD","setHasCAD","checked","refresh_data","Unit","update_app_view","update_other_view","getFullYear","undefined","AddUnit","fetchUnitData","show_add_unit","Add","cancel","UnitList","showAddUnit","setShowAddUnit","UnitHeader","display","currentOption","selectedIndex","innerText","u","LocationLayer","state_array","r","view_type","graphicsLayer","setGraphicsLayer","CalculateTimeDifference","timestamp","now","diff","valueOf","loadModules","then","GraphicsLayer","Graphic","layer","graphics","removeAll","symbolGraphic","geometry","symbol","setAttribute","textGraphic","haloColor","haloSize","xoffset","yoffset","text","horizontalAlignment","font","size","add","catch","err","error","WebMapView","mapRef","useRef","css","Map","MapView","BasemapGallery","LayerList","Home","MapImageLayer","basemap","container","current","logo","source","portal","useVectorBasemaps","fireServiceLayer","siteAddressLayer","homeWidget","ui","position","on","hitTest","mylayers","results","graphic","attributes","when","ref","SimpleValue","App","fetchAVLData","fetchFCData","fetchCADData","fetchUnitGroups","callback","delay","savedCallback","setInterval","clearInterval","useInterval","GetUnitGroups","paddingLeft","ReactDOM","render","useReducer","Provider","children"],"mappings":"qNAOMA,EACN,CACEC,IAAK,KACLC,SAAU,KAEVC,YAAa,GACbC,aAAc,OAEdC,SACA,CACEC,EAAG,GACHC,YAAa,GACbC,WAAY,YACZC,gBAAgB,EAChBC,eAAgB,IAElBC,QACA,CACEL,EAAG,GACHC,YAAa,GACbC,WAAY,YACZC,gBAAgB,EAChBC,eAAgB,IAGlBE,SACA,CACEN,EAAG,GACHC,YAAa,GACbC,WAAY,WACZC,gBAAgB,EAChBC,eAAgB,IAElBG,UACA,CACEP,EAAG,GACHC,YAAa,GACbC,WAAY,WACZC,gBAAgB,EAChBC,eAAgB,IAGlBI,SAAU,IAAIC,MACdC,QAAS,IAAID,MACbE,SAAU,IAAIF,MACdG,UAAW,IAAIH,MAEfI,kBAAmB,IAAIJ,MACvBK,iBAAkB,IAAIL,MACtBM,kBAAmB,IAAIN,MACvBO,mBAAoB,IAAIP,OAGbQ,EAAQC,IAAMC,cAA4BzB,GAEvD,SAAS0B,EAAQC,EAAeC,GAE9B,OAAQA,EAAOC,MAGb,IAAK,WACH,OAAO,eACFF,EADL,CAEE1B,IAAK2B,EAAOE,UAGhB,IAAK,gBACH,OAAO,eACFH,EADL,CAEEzB,SAAU0B,EAAOE,UAGrB,IAAK,uBACH,OAAO,eACFH,EADL,CAEExB,YAAayB,EAAOE,UAGxB,IAAK,mBACH,OAAO,eACFH,EADL,CAEEvB,aAAcwB,EAAOE,UAGzB,IAAK,iBAGL,IAAK,mBACH,IAAIC,EAAY,eACXJ,EAAMtB,SADK,CAEdE,YAAaqB,EAAOE,QACpBpB,eAAgB,KAGlB,OAAO,eACFiB,EADL,CAEEvB,aAAc,MAEde,kBACEa,EACEL,EAAMb,SACNiB,GACJ1B,SAAU0B,IAGd,IAAK,kBACH,IAAIE,EAAW,eACVN,EAAMhB,QADI,CAEbJ,YAAaqB,EAAOE,QACpBpB,eAAgB,KAGlB,OAAO,eACFiB,EADL,CAEEvB,aAAc,KACdgB,iBACEc,EACEP,EAAMX,QACNiB,GACJtB,QAASsB,IAGb,IAAK,mBACH,IAAIE,EAAY,eACXR,EAAMf,SADK,CAEdL,YAAaqB,EAAOE,QACpBpB,eAAgB,KAGlB,OAAO,eACFiB,EADL,CAEEvB,aAAc,MACdiB,kBACEe,EACET,EAAMV,SAAUkB,GACpBvB,SAAUuB,IAGd,IAAK,eACH,OAAO,eACFR,EADL,CAEEb,SAAUc,EAAOE,QACjBX,kBACEa,EACEJ,EAAOE,QACPH,EAAMtB,YAGd,IAAK,cACH,OAAO,eACFsB,EADL,CAEEX,QAASY,EAAOE,QAChBV,iBACEc,EACEN,EAAOE,QACPH,EAAMhB,WAGd,IAAK,eACH,OAAO,eACFgB,EADL,CAEEV,SAAUW,EAAOE,QACjBT,kBACEe,EACER,EAAOE,QACPH,EAAMf,YAGd,IAAK,gBACH,OAAO,eACFe,EADL,CAEET,UAAWU,EAAOE,QAClBR,mBACEe,EACET,EAAOE,QACPH,EAAMd,aAGd,IAAK,cACH,IAAIyB,EAAIX,EAAMC,EAAOE,QAAQS,MAK7B,OAJAD,EAAC,eACIX,EAAMC,EAAOE,QAAQS,MADzB,GAEIX,EAAOE,QAAQU,QAEb,eACFb,EADL,eAEGC,EAAOE,QAAQS,KAAOD,GA8Y/B,SAAqBC,EAAcE,EAAqBd,GAEtD,OAAQY,GAEN,IAAK,YACH,MAAO,CAAEjB,mBAAoBe,EAAaV,EAAMT,UAAWuB,IAE7D,IAAK,WACH,MAAO,CAAEpB,kBAAmBe,EAAYT,EAAMV,SAAUwB,IAE1D,IAAK,WACH,MAAO,CAAEtB,kBAAmBa,EAAYL,EAAMb,SAAU2B,IAE1D,IAAK,UACH,MAAO,CAAErB,iBAAkBc,EAAWP,EAAMX,QAASyB,IAEvD,QACE,MAAO,IA9ZFC,CAAYd,EAAOE,QAAQS,KAAMD,EAAGX,IAG3C,IAAK,qBACH,IAAIc,EAAWb,EAAOE,QAAQS,KAAKI,MAAM,KAAK,GAC1CC,EAAKjB,EAAMC,EAAOE,QAAQS,MAAMjC,EAChCuC,EAAKjB,EAAOE,QAAQgB,SAAWlB,EAAOE,QAAQgB,SAAWlB,EAAOE,QAAQiB,UAS5E,OARKH,EAAGC,KAEND,EAAGC,GAikBF,CACLG,SAAS,EACTC,QAAQ,EACRC,QAAS,GACTC,SAAS,IAnkBPP,EAAGC,GAAH,eACKD,EAAGC,GADR,GAEKjB,EAAOE,QAAQU,QAEb,eACFb,EADL,aAEEvB,aAAcqC,GACbb,EAAOE,QAAQS,KAHlB,eAIOZ,EAAMC,EAAOE,QAAQS,MAJ5B,CAKIjC,EAAGsC,MAmXT,QAEE,OADAQ,QAAQC,IAAI,iDAAkDzB,EAAOC,MAC9DF,GAkGb,SAASjB,EAAe4C,EAAmBC,GAEzC,GAA6B,IAAzBA,EAAcC,OAAc,OAAOF,EACvC,OAAQC,GAEN,IAAK,QAEH,OADeD,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBH,OAAS,KAGhE,IAAK,YACH,OAAOF,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEE,uBAE7B,IAAK,OACH,OAAON,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEG,kBAE7B,IAAK,WACH,OAAOP,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEI,sBAE7B,IAAK,OACH,OAAOR,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEK,kBAE7B,IAAK,MACH,OAAOT,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEM,iBAE7B,IAAK,MACH,OAAOV,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEO,iBAE7B,IAAK,KACH,OAAOX,EAAMG,QAAO,SAAAC,GAAC,OAAIA,EAAEQ,gBAE7B,QACE,OAAOZ,GAIb,SAASa,EAAKb,EAAmBf,GAG/B,MADoB,CAAC,aAAc,sBACnB6B,QAAQ7B,EAAK/B,aAAe,EAU9C,SAAoB8C,EAAmBe,EAAeC,GAQpD,OANahB,EAAMa,MAAK,SAACI,EAAGC,GAE1B,OAAI,IAAIC,KAAKF,EAAEF,IAAU,IAAII,KAAKD,EAAEH,IAAgBC,EAAY,GAAK,EACjE,IAAIG,KAAKD,EAAEH,IAAU,IAAII,KAAKF,EAAEF,IAAgBC,GAAa,EAAI,EAC9D,KAhB6CI,CAAWpB,EAAOf,EAAK/B,WAAY+B,EAAK9B,gBACjF6C,EAAMa,MAAK,SAACI,EAAGC,GAE1B,OAAID,EAAEhC,EAAK/B,YAAcgE,EAAEjC,EAAK/B,YAAoB+B,EAAK9B,eAAiB,GAAK,EAC3E+D,EAAEjC,EAAK/B,YAAc+D,EAAEhC,EAAK/B,YAAoB+B,EAAK9B,gBAAkB,EAAI,EACxE,KAgBX,SAASuB,EAAYsB,EAAmBf,GAItC,OAAO4B,EADgBzD,EAvIzB,SAAoBiE,EAA8BC,GAEhD,GAA2B,IAAvBA,EAAYpB,OAAc,OAAOmB,EACrC,IAAIhC,EAAQiC,EAAYC,cAAclC,MAAM,KAY5C,OAXegC,EAAclB,QAAO,SAAAqB,GAElC,IAAIC,GAAQ,EADd,uBAEE,YAAcpC,EAAd,+CACA,CAAC,IADQqC,EACT,QAGE,GAFAA,EAAIA,EAAEC,OACNF,EAASD,EAAEhC,SAAS+B,cAAcT,QAAQY,IAAM,GAAKF,EAAE/B,UAAU8B,cAAcT,QAAQY,IAAM,EAClF,OANf,kFAQE,OAAOD,KAyHMG,CAAW5B,EAAOf,EAAKhC,aACUgC,EAAK7B,gBACvB6B,GAGhC,SAASL,EAAWoB,EAAmBf,GAIrC,OAAO4B,EADgBzD,EA5HzB,SAAmBiE,EAAyCC,GAE1D,GAA2B,IAAvBA,EAAYpB,OAAc,OAAOmB,EACrC,IAAIhC,EAAQiC,EAAYC,cAAclC,MAAM,KAY5C,OAXegC,EAAclB,QAAO,SAAAqB,GAElC,IAAIC,GAAQ,EADd,uBAEE,YAAcpC,EAAd,+CACA,CAAC,IADQqC,EACT,QAGE,GAFAA,EAAIA,EAAEC,OACNF,EAASD,EAAEhC,SAAS+B,cAAcT,QAAQY,IAAM,GAAKF,EAAE/B,UAAU8B,cAAcT,QAAQY,IAAM,GAAKF,EAAEK,UAAUN,cAAcT,QAAQY,IAAM,EAC/H,OANf,kFAQE,OAAOD,KA8GMK,CAAU9B,EAAOf,EAAKhC,aACWgC,EAAK7B,gBACvB6B,GAGhC,SAASH,EAAYkB,EAAmBf,GAItC,OAAO4B,EADgBzD,EAjHzB,SAAoBiE,EAA+BC,GAEjD,GAA2B,IAAvBA,EAAYpB,OAAc,OAAOmB,EACrC,IAAIhC,EAAQiC,EAAYC,cAAclC,MAAM,KAY5C,OAXegC,EAAclB,QAAO,SAAAqB,GAElC,IAAIC,GAAQ,EADd,uBAEE,YAAcpC,EAAd,+CACA,CAAC,IADQqC,EACT,QAGE,GAFAA,EAAIA,EAAEC,OACNF,EAASD,EAAEhC,SAAS+B,cAAcT,QAAQY,IAAM,EACrC,OANf,kFAQE,OAAOD,KAmGMM,CAAW/B,EAAOf,EAAKhC,aACUgC,EAAK7B,gBACvB6B,GAGhC,SAASF,EAAaiB,EAAmBf,GAIvC,OAAO4B,EADgBzD,EAtGzB,SAAqBiE,EAAgCC,GAEnD,GAA2B,IAAvBA,EAAYpB,OAAc,OAAOmB,EACrC,IAAIhC,EAAQiC,EAAYC,cAAclC,MAAM,KACxC2C,EAAIV,EAAYC,cAYpB,OAXeF,EAAclB,QAAO,SAAAqB,GAElC,IAAIC,GAAQ,EADd,uBAEE,YAAcpC,EAAd,+CACA,CAAC,IADQqC,EACT,QAGE,GAFAA,EAAIA,EAAEC,OACNF,EAASD,EAAEhC,SAAS+B,cAAcT,QAAQY,IAAM,GAAKF,EAAES,YAAYV,cAAcT,QAAQY,IAAM,GAAKF,EAAEU,WAAWX,cAAcT,QAAQkB,IAAM,EAClI,OANf,kFAQE,OAAOP,KAuFMU,CAAYnC,EAAOf,EAAKhC,aACSgC,EAAK7B,gBACvB6B,G,oBC/nBjBmD,EA/HH,WACX,IAAD,EAC8BlE,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAETC,EAAuB,WAE3B,IAAIvF,EAAIwF,SAASC,eAAe,wBACtB,OAANzF,GACJA,EAAE0F,UAAUC,OAAO,cAGrB,OACE,yBAAKC,UAAU,oBAAoBC,KAAK,aAAaC,aAAW,mBAC9D,yBAAKF,UAAU,gBACb,wBAAIA,UAAU,8CAAd,oBAEF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBACb,uBACEG,QAAS,SAAAC,GAEPV,EAAS,CAAE/D,KAAM,mBAAoBC,QAAS,UAEhDoE,UAAS,4CAA8D,SAAvBvE,EAAMvB,aAA0B,YAAc,GAArF,MALX,SAQA,uBACEiG,QAAS,SAAAC,GAEPV,EAAS,CAAE/D,KAAM,mBAAoBC,QAAS,SAEhDoE,UAAS,4CAA8D,QAAvBvE,EAAMvB,aAAyB,YAAc,GAApF,MALX,OAQA,uBACEiG,QAAS,SAAAC,GAEPV,EAAS,CAAE/D,KAAM,mBAAoBC,QAAS,QAEhDoE,UAAS,4CAA8D,OAAvBvE,EAAMvB,aAAwB,YAAc,GAAnF,MALX,kBAQA,uBACEiG,QAAS,SAAAC,GAEPV,EAAS,CAAE/D,KAAM,mBAAoBC,QAAS,SAEhDoE,UAAS,4CAA8D,QAAvBvE,EAAMvB,aAAyB,YAAc,GAApF,MALX,OAQA,uBACEiG,QAAS,SAAAC,GAEPV,EAAS,CAAE/D,KAAM,mBAAoBC,QAAS,SAEhDoE,UAAS,4CAA8D,QAAvBvE,EAAMvB,aAAyB,YAAc,GAApF,MALX,QAUF,yBACEmG,MAAO,CAACC,aAAc,OACtBN,UAAU,cACV,yBACErD,GAAG,uBACHqD,UAAU,4BACV,uBAAGA,UAAU,cACXG,QAAS,SAAAC,GAEP,IAAIhG,EAAIwF,SAASC,eAAe,wBAChC,GAAU,OAANzF,EAAJ,CACA,IAAImG,EAAWnG,EAAE0F,UAAUU,SAAS,aACrBZ,SAASa,iBAAiB,+BAChCC,SAAQ,SAAApC,GAEViC,EAMHjC,EAAEqC,oBAAoB,QAAShB,GAJ/BrB,EAAEsC,iBAAiB,QAASjB,MAOhCvF,EAAE0F,UAAUe,OAAO,gBAlBvB,mBAuBA,yBAAKlE,GAAG,0BACNqD,UAAU,mBACV,yBACEA,UAAU,eACV,yBAAKrD,GAAG,kCAKd,yBAAKA,GAAG,yBACNqD,UAAU,4BACV,uBAAGA,UAAU,cACXG,QAAS,SAAAC,GAEP,IAAIhG,EAAIwF,SAASC,eAAe,0BACtB,OAANzF,GAEJA,EAAE0F,UAAUe,OAAO,eANvB,eAWA,yBAAKb,UAAU,mBACb,yBACEA,UAAU,eACV,yBAAKrD,GAAG,oCAMd,uBAAGqD,UAAU,oB,cCqMd,SAAec,EAAOC,GAAtB,eAAA1C,EAAA2C,OAAA,kEAAA3C,EAAA,MAEkB4C,MAAMF,EAC3B,CACEG,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,MAAO,WACPC,YAAa,aATZ,WAECC,EAFD,QAYSC,GAZT,sBAcG,IAAIC,MAAMF,EAASG,YAdtB,yBAAApD,EAAA,MAgBQiD,EAASI,QAhBjB,6EAwCA,SAAeC,EAAWZ,EAAaa,GAAvC,eAAAvD,EAAA2C,OAAA,kEAAA3C,EAAA,MAEkB4C,MAAMF,EAC3B,CACEG,OAAQ,OACRW,KAAe,OAATD,EAAgBE,KAAKC,UAAUH,GAAQ,GAC7CR,MAAO,WACPD,QAAS,CACP,eAAgB,oBAElBE,YAAa,aAVZ,cAECC,EAFD,yBAaEA,GAbF,qCAmCA,SAASU,EAAgBC,GAE9B,OAAIA,aAAgB1D,KAEX0D,EAAKC,eAAe,SAEtB,IAAI3D,KAAK0D,GAAMC,eAAe,SC1XlC,IAwCQC,EAxCf,iDAEStF,UAAoB,GAF7B,KAGSuF,YAAsB,GAH/B,KAISxF,SAAmB,GAJ5B,KAKSyF,UAAoB,EAL7B,KAMSC,mBAA2B,IAAI/D,KANxC,KAOSgE,gBAA0B,EAPnC,KAQSC,SAAmB,EAR5B,KASSC,SAAmB,EAT5B,KAUSC,UAAoB,EAV7B,KAWSC,WAAmB,IAAIpE,KAXhC,KAYSd,kBAAmC,GAZ5C,KAaSmF,mBAA6B,EAbtC,KAcSC,aAAuB,EAdhC,KAeSlF,gBAA0B,EAfnC,KAgBSC,oBAA8B,EAhBvC,KAiBSC,gBAA0B,EAjBnC,KAkBSiF,eAA6B,GAlBtC,yJAsBuBhC,EAAoB,gBAtB3C,cAsBUc,EAtBV,yBAuBWA,GAvBX,oEA0B6B/E,GA1B7B,kGA4B2B8E,EAAW,4BAA8B9E,EAAW,KA5B/E,cA4BUyE,EA5BV,yBA6BWA,GA7BX,oEAgC6BzE,EAAmBuF,EAAqBxF,GAhCrE,kGAkC2B+E,EAAW,4BAAD,OAA6B9E,EAA7B,wBAAsDuF,EAAtD,qBAA8ExF,GAAY,KAlC/H,cAkCU0E,EAlCV,yBAmCWA,GAnCX,8CCKeyB,EAzBU,SAACC,GAExB,OAAKA,EAAMH,YAGT,4BACE,6BAEA,wBAAII,QAASD,EAAME,QAAU,GAC3B,4BACGF,EAAMvF,kBAAkB1D,KACvB,SAACoJ,EAAWC,GAEV,OACE,wBAAIC,IAAKD,GACND,SAbc,MCwDlBG,EAxDK,SAACN,GACpB,IAAD,EACwCO,mBAAS,IADjD,mBACSC,EADT,KACsBC,EADtB,KAGE,OAAKT,EAAMJ,kBAGT,4BACE,6BAEA,wBAAIK,QAAS,EACXjD,UAAU,kBADZ,iBAIA,4BAC6B,IAA1BgD,EAAMpG,SAASU,OAAe,OAAS0F,EAAMpG,UAEhD,wBAAIoD,UAAU,kBAAd,cAGA,wBAAIiD,QAAS,GACX,yBAAKjD,UAAU,oBACb,yBAAKA,UAAU,WACb,2BACEA,UAAU,iBACVrE,KAAK,OACL+H,SAAU,SAAAtD,GAAK,OAAIqD,EAAerD,EAAMuD,OAAOC,QAC/CA,MAAOJ,EACPK,YAAY,cAEhB,yBAAK7D,UAAU,WACb,4BACErE,KAAK,SACLwE,QAAS,SAAMC,GAAN,SAAA/B,EAAA2C,OAAA,gDAEPZ,EAAM0D,iBACN5G,QAAQC,IAAI,kBAAmB6F,EAAM/D,WACjC+D,EAAM/D,UAER+D,EAAMe,YAAYf,EAAM/D,UAAWuE,EAAYzE,QAI/CiE,EAAMe,YAAYf,EAAMnG,UAAWmG,EAAMZ,YAAaoB,EAAYzE,QAV7D,sCAaTiB,UAAU,8BAfZ,YA3B2B,MC8BxBgE,EAzBf,iDAESrH,IAAc,EAFvB,KAGSC,SAAmB,GAH5B,KAISuB,MAAgB,GAJzB,KAKS8F,aAAuB,GALhC,KAMSC,WAAqB,GAN9B,KAOSC,WAAmB,IAAI5F,KAPhC,KAQS6F,WAAqB,GAR9B,KASSC,cAAwB,GATjC,2DAWgCzH,GAXhC,kGAauBkE,EAAwB,yBAA2BlE,IAb1E,cAaUgF,EAbV,yBAcWA,GAdX,2EAiBoC/E,GAjBpC,kGAmBuBiE,EAAwB,iCAAmCjE,IAnBlF,cAmBU+E,EAnBV,yBAoBWA,GApBX,8CC8Ee0C,EAvFS,SAACtB,GAEvB,OAAKA,EAAMhG,SAAoC,IAAzBgG,EAAMhG,QAAQM,OAGlC,4BACE,6BAGA,wBAAI2F,QAASD,EAAME,QAAU,GAC3B,2BAAOlD,UAAU,sBACf,+BACE,4BACE,wBACEA,UAAU,oBACViD,QAASD,EAAME,SACdF,EAAMuB,QAGX,4BACE,wCAGA,qCAGA,4CAGA,0CAGA,0CAGA,4CAKJ,+BACGvB,EAAMhG,QAAQjD,KACb,SAACyK,GAEC,OAAIA,EAAEH,cAAc/G,OAAS,EAGzB,wBAAI+F,IAAKmB,EAAE7H,IACT,wBAAIsG,QAAS,GAAIuB,EAAEH,gBAOrB,wBAAIhB,IAAKmB,EAAE7H,IACT,4BACG6H,EAAE5H,UAEL,4BACG4H,EAAErG,OAEL,4BACGqG,EAAEP,cAEL,4BACGO,EAAEN,YAEL,4BACGlC,EAAgBwC,EAAEL,aAErB,4BACGK,EAAEJ,oBAtEgC,MCkD5CK,EArDO,SAACzB,GAGrB,IAAKA,EAAM0B,aAAc,OAAO,KAEhC,IAAMC,EAAa,CACjB,YACA,cACA,aACA,qBACA,YACA,WACA,YACA,kBACA,WACA,WACA,YACA,MACA,OACA,QACA,eACA,UACA,SACA,YAEIC,EAAY,CAAC,qBAAsB,cAErCC,EAAOC,OAAOD,KAAK7B,GAGvB,OACE,oCACG6B,EAAK9K,KAAI,SAAAsJ,GAER,GAAIsB,EAAWzG,QAAQmF,IAAQ,EAE7B,OACE,wBAAIA,IAAKA,GACP,6BACA,wBAAIJ,QAAS,GACVI,GAEH,wBAAIJ,QAASD,EAAME,QAAU,GACzB0B,EAAU1G,QAAQmF,IAAQ,EAAIrB,EAAgBgB,EAAMK,IAAQL,EAAMK,GAAOL,EAAMK,GAAK0B,WAAa,UCwKpGC,EA5MH,SAAChC,GACZ,IAAD,EAC8B1H,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAiBXrD,EAAOZ,EAAK,SAEVwJ,EAAc,SAAC3I,GAEnBoD,EACE,CACE/D,KAAM,qBACNC,QACA,CACES,KAXQ,WAYRQ,UAAWmG,EAAMnG,UACjBP,OAAQA,MAiBV4I,EAAe,SAACC,GAEpB,IAAM3H,EAAInB,EAAKjC,EAAE4I,EAAMnG,WACvB,QAAKW,GACEA,EAAE2H,IAGLC,EAAc,WAElB,OAAI/I,EAAKjC,EAAE4I,EAAMnG,YAAcR,EAAKjC,EAAE4I,EAAMnG,WAAWG,QAE9CX,EAAKjC,EAAE4I,EAAMnG,WAAWG,QAIxB,IAIX,OACE,oCACE,wBAAIL,GAAI,MAAQqG,EAAMnG,WACpB,4BACGmG,EAAMI,MAAQ,GAEjB,4BACE,0BACEmB,MAAM,sBACNvE,UAAU,+BACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAEhI,SAAUiI,EAAa,eAEtClC,EAAMnG,WAGW,IAAnBmG,EAAMP,SACL,0BACE8B,MAAM,uBACNlE,MAAO,CAAEgF,MAAO,gBAChBrF,UAAU,sBACVG,QAAS,SAAAC,IArDH,SAACsC,EAAWD,GAE5B,GAAKhH,EAAMzB,SAAX,CACA,IAAIsL,EAAQ,CACV3J,KAAM,QACJ+G,UAAWA,EACXD,SAAUA,GAEdhH,EAAMzB,SAASuL,OAASD,EACpB7J,EAAMzB,SAASwL,KAAO,KAAI/J,EAAMzB,SAASwL,KAAO,KA8CxCC,CAAUzC,EAAMN,UAAWM,EAAMP,YAEnC,uBAAGzC,UAAU,gBAEb,IAEN,4BACE,0BAAMA,UAAU,QACd,uBAAGA,UAAS,cAA+B,iBAAtBgD,EAAMZ,YAAiC,WAAa,mBAI7E,4BACE,0BACEmC,MAAM,4BACNvE,UAAU,+BACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAEnI,SAAUoI,EAAa,eAEZ,IAA1BlC,EAAMpG,SAASU,OAAe,MAAQ0F,EAAMpG,WAGjD,4BACGoF,EAAgBgB,EAAML,aAEzB,4BACGX,EAAgBgB,EAAMV,qBAEzB,wBAAItC,UAAU,+BAIXgD,EAAMvF,kBAAkBH,OAAS,EAChC,0BACEiH,MAAM,cACNvE,UAAU,uCACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAElI,QAASmI,EAAa,cAGtC,uBAAGlF,UAAU,+BAEb,GAEJ,0BACEuE,MAAM,eACNvE,UAAU,oCACVG,QAAS,SAAMC,GAAN,eAAA/B,EAAA2C,OAAA,mDAEPZ,EAAM0D,iBAEiB,KADnB9G,EAAUoI,KACF9H,OAJL,kCAAAe,EAAA,MAMW2F,EAAY0B,UAAU1C,EAAMpG,WANvC,OAMLI,EANK,6BAULA,EAAU,GAVL,OAYPiI,EAAY,CAAEjI,QAASA,IAZhB,wCAcT,uBAAGgD,UAAU,oBAGf,0BACEuE,MAAM,qBACNvE,UAAU,sCACVG,QAAS,SAAMC,GAAN,SAAA/B,EAAA2C,OAAA,uDAEPZ,EAAM0D,iBAFC,WAAAzF,EAAA,MAGgB8D,EAAQwD,OAAO3C,EAAMnG,YAHrC,cAIM0E,GAEXyB,EAAM4C,YAINC,MAAM,uGAVD,uCAcT,uBAAG7F,UAAU,wBAMnB,kBAAC,EAAD,eACEkD,QAAS,EACTwB,aAAcQ,EAAa,YACvBlC,IAEN,kBAAC,EAAD,eACEE,QAAS,EACT4C,aAAa,GACb/B,YAvLgB,SAAOlH,EAAkBuF,EAAqB2D,GAA9C,SAAA1H,EAAA2C,OAAA,kEAAA3C,EAAA,MAEG8D,EAAQ6D,OAAOnJ,EAAWuF,EAAa2D,IAF1C,cAGPxE,GAEXyB,EAAM4C,YAINC,MAAM,uGATY,sCAwLhBjD,kBAAmBsC,EAAa,YAC5BlC,IACN,kBAAC,EAAD,CACEE,QAAS,EACTzF,kBAAmBuF,EAAMvF,kBACzBoF,YAAaqC,EAAa,YAC5B,kBAAC,EAAD,CACEhC,QAAS,EACTqB,MAAM,uBACNvH,QAASoI,QC5MJa,EAAe,SAACC,EAAyBC,EAAuBC,GAC5E,IACS1G,EAAapE,IAAMmE,WAAWpE,GAA9BqE,SADV,EAEoC6D,oBAAS,GAF7C,mBAES8C,EAFT,KAEoBC,EAFpB,OAGgC/C,oBAAS,GAHzC,mBAGSgD,EAHT,KAGkBC,EAHlB,KAKQZ,EAAY,0BAAAvH,EAAA2C,OAAA,uDAEhBwF,GAAW,GACXF,GAAa,GAHG,oBAAAjI,EAAA,MAOO6H,KAPP,OAORO,EAPQ,OAQd/G,EAAS,CAAE/D,KAAMwK,EAAevK,QAAS6K,IAR3B,gDAYdD,GAAW,GACXtJ,QAAQC,IAAI,wBAAZ,MAbc,QAehBmJ,GAAa,GAfG,yDAuBlB,OALAI,qBAAU,WAERN,GAAgBR,MACf,IAEI,CAAES,YAAWE,UAASX,cC7BlBe,EAAiB,SAAC,GAQ9B,IANGpC,EAMJ,EANIA,MACAqC,EAKJ,EALIA,kBACAC,EAIJ,EAJIA,QACAjB,EAGJ,EAHIA,UACAkB,EAEJ,EAFIA,UACAC,EACJ,EADIA,eACJ,EAC8BzL,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SADjB,EAG4C6D,mBAAS9H,EAAMqL,GAAWzM,aAAe,IAHrF,mBAGS2M,EAHT,KAGwBC,EAHxB,KAKQhC,EAAc,SAAC3I,GAEnBoD,EACE,CACE/D,KAAM,cACNC,QACA,CACES,KAAMyK,EACNxK,OAAQA,MAUhB,OALAoK,qBAAU,cAGP,CAACG,EAASpL,EAAMqL,KAGjB,yBACEzG,MAAO,CAAE6G,QAAS,MAAOC,aAAc,GACvCnH,UAAU,SACV,yBAAKA,UAAU,cACb,yBAAKA,UAAU,6CACZuE,GAEH,yBAAKvE,UAAU,cACb,yBAAKA,UAAU,SACb,yBACEA,UAAS,kBAAa6G,EAAU,aAAe,KAC/C,2BACE7G,UAAU,iBACVuE,MAAOqC,EACPjL,KAAK,OACLkI,YAAY,SACZH,SAAU,SAAAtD,GAAK,OAAI6G,EAAiB7G,EAAMuD,OAAOC,QACjDA,MAAOoD,EACPI,UAAW,SAAAhH,GAES,UAAdA,EAAMiD,MAERjD,EAAM0D,iBACN1D,EAAMiH,kBACNpC,EAAY,CAAE5K,YAAa2M,WAOvC,6BACE,4BACE7G,QAAS,SAAAC,GAEPA,EAAM0D,iBACN8B,KAEFrB,MAAM,eACN5I,KAAK,SACLqE,UAAS,qCAAgC6G,EAAU,aAAe,KAClE,0BAAM7G,UAAU,iBACd,uBAAGA,UAAU,sBAGjB,4BACEK,MAAO,CAAEiH,WAAY,QACrBnH,QAAS,SAAAC,GAEPA,EAAM0D,iBACN1D,EAAMiH,kBACNJ,EAAiB,IACjBhC,EAAY,CAAE5K,YAAa,MAG7BkK,MAAM,mBACN5I,KAAK,SACLqE,UAAU,8BACV,0BAAMA,UAAU,iBACd,uBAAGA,UAAU,wBAKrB,yBAAKA,UAAU,eACb,uBAAGA,UAAU,mCAAb,WACA,yBAAKA,UAAU,mBACb,4BAEI+G,EAAehN,KAAI,SAAAqF,GAEjB,OACE,wBACEY,UAAS,UAAKvE,EAAMqL,GAAWtM,iBAAmB4E,EAAEwE,MAAQ,YAAc,IAC1EP,IAAKjE,EAAEzC,IACP,uBACEwD,QAAS,SAAAC,GAEP6E,EAAY,CAAEzK,eAAgB4E,EAAEwE,UAEjCxE,EAAEmI,gBAaVZ,ICEAa,EA1HW,WACzB,IAAD,EAC8BlM,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SADjB,EAG4CuG,EAAa9D,EAAQrB,IAAK,gBAAgB,GAA5EuF,EAHV,EAGUA,UAAWE,EAHrB,EAGqBA,QAASX,EAH9B,EAG8BA,UAEtB6B,ECfiB,SAACpB,EAAoBT,GAE5C,MAAO,CACLiB,QAASR,EACT9B,MAAO,MACPqC,kBAAmB,6HAEnBhB,UAAWA,EACXkB,UAAW,WAGXC,eAAgB,CACd,CACEpK,GAAI,EACJ4K,MAAO,WACP3D,MAAO,IAET,CACEjH,GAAI,EACJ4K,MAAO,aACP3D,MAAO,SAET,CACEjH,GAAI,EACJ4K,MAAO,OACP3D,MAAO,QAET,CACEjH,GAAI,EACJ4K,MAAO,OACP3D,MAAO,QAET,CACEjH,GAAI,EACJ4K,MAAO,WACP3D,MAAO,cDpBE8D,CAAUrB,EAAWT,GAIhCvJ,EAAOZ,EAAK,SAEZkM,EAAY,SAACC,GAEflI,EAAS,CACP/D,KAAM,cACNC,QAAS,CACPS,KATU,WAUVC,OAAQ,CACNhC,WAAYsN,EACZrN,gBAAiB8B,EAAK9B,oBAe9B,OATAmM,qBAAU,cAGP,CACDL,EACAE,EACA9K,EAAMR,kBACNoB,IAGA,iCAEE,kBAAC,EAAD,eAAgBwK,QAASR,GAAeoB,IAExC,2BAAOzH,UAAU,sBACf,+BACE,4BACE,iCAGA,4BACE,uBACE6H,KAAK,kBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,cAEZ3H,UAAS,UAAyB,cAApB3D,EAAK/B,WAA6B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPhG,cAWF,4BACE,uBACEsN,KAAK,oBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,gBAEZ3H,UAAS,UAAyB,gBAApB3D,EAAK/B,WAA+B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPlG,SAWF,4BACE,uBACEsN,KAAK,cACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,aAEZ3H,UAAS,UAAyB,aAApB3D,EAAK/B,WAA4B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAP/F,SAWF,4BACE,uBACEsN,KAAK,qBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,eAEZ3H,UAAS,UAAyB,eAApB3D,EAAK/B,WAA8B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPjG,kBAWF,4BACE,uBACEsN,KAAK,sBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,uBAEZ3H,UAAS,UAAyB,uBAApB3D,EAAK/B,WAAsC,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPzG,gBAWF,wBAAIyF,UAAU,qBAAd,aAKJ,+BACGvE,EAAMR,kBAAkBlB,KAAI,SAAC+N,EAAK1E,GAEjC,OAAQ,kBAAC,EAAD,eAAKC,IAAKyE,EAAIjL,UAAWuG,MAAOA,GAAW0E,EAA3C,CAAgDlC,UAAWA,YEpDhEmC,EA5Cf,iDAESlL,UAAoB,GAF7B,KAGSoC,UAAoB,GAH7B,KAISrC,SAAmB,GAJ5B,KAKSoL,IAAc,GALvB,KAMSC,KAAe,GANxB,KAOSC,MAAgB,GAPzB,KAQSC,aAAuB,GARhC,KASS9F,UAAoB,EAT7B,KAUSC,mBAA2B,IAAI/D,KAVxC,KAWSoE,WAAmB,IAAIpE,KAXhC,KAYSiE,SAAmB,EAZ5B,KAaSC,SAAmB,EAb5B,KAcSC,UAAoB,EAd7B,KAeSjF,kBAAmC,GAf5C,KAgBSmF,mBAA6B,EAhBtC,KAiBSC,aAAuB,EAjBhC,KAkBSlF,gBAA0B,EAlBnC,KAmBSC,oBAA8B,EAnBvC,KAoBSF,qBAA+B,EApBxC,KAqBSG,gBAA0B,EArBnC,KAsBSiF,eAA6B,GAtBtC,yJA0BuBhC,EAA8B,eA1BrD,cA0BUc,EA1BV,yBA2BWA,GA3BX,oEA8B6B/E,GA9B7B,kGAgC2B8E,EAAW,2BAA6B9E,EAAW,KAhC9E,cAgCUyE,EAhCV,yBAiCWA,GAjCX,oEAoC6BrC,EAAmBrC,GApChD,kGAsC2B+E,EAAW,2BAAD,OAA4B1C,EAA5B,qBAAkDrC,GAAY,KAtCnG,cAsCU0E,EAtCV,yBAuCWA,GAvCX,8CC2Le8G,EA3MJ,SAACpF,GACX,IAAD,EAC8B1H,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAiBXrD,EAAOZ,EAAK,QAEVwJ,EAAc,SAAC3I,GAEnBoD,EACE,CACE/D,KAAM,qBACNC,QACA,CACES,KAXQ,UAYRQ,UAAWmG,EAAMnG,UACjBP,OAAQA,MAiBV4I,EAAe,SAACC,GAEpB,IAAM3H,EAAInB,EAAKjC,EAAE4I,EAAMnG,WACvB,QAAKW,GACEA,EAAE2H,IAGLC,EAAc,WAElB,OAAI/I,EAAKjC,EAAE4I,EAAMnG,YAAcR,EAAKjC,EAAE4I,EAAMnG,WAAWG,QAE9CX,EAAKjC,EAAE4I,EAAMnG,WAAWG,QAIxB,IAIX,OACE,oCACE,4BACE,4BACGgG,EAAMI,MAAQ,GAEjB,4BACE,0BACEmB,MAAM,sBACNvE,UAAU,+BACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAEhI,SAAUiI,EAAa,eAEtClC,EAAMnG,UAAUwL,QAAQ,MAAO,KAEd,IAAnBrF,EAAMP,SACL,0BACE8B,MAAM,uBACNvE,UAAU,sBACVK,MAAO,CAAEgF,MAAO,gBAChBlF,QAAS,SAAAC,IApDH,SAACsC,EAAWD,GAE5B,GAAKhH,EAAMzB,SAAX,CACA,IAAIsL,EAAQ,CACV3J,KAAM,QACJ+G,UAAWA,EACXD,SAAUA,GAEdhH,EAAMzB,SAASuL,OAASD,EACpB7J,EAAMzB,SAASwL,KAAO,KAAI/J,EAAMzB,SAASwL,KAAO,KA6CxCC,CAAUzC,EAAMN,UAAWM,EAAMP,YAEnC,uBAAGzC,UAAU,gBAEb,IAEN,4BACGgD,EAAM/D,YAAc+D,EAAMnG,UAAY,GAAKmG,EAAM/D,WAEpD,4BACE,0BACEsF,MAAM,4BACNvE,UAAU,+BACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAEnI,SAAUoI,EAAa,eAEZ,IAA1BlC,EAAMpG,SAASU,OAAe,MAAQ0F,EAAMpG,WAGjD,4BACGoF,EAAgBgB,EAAML,aAEzB,4BACGX,EAAgBgB,EAAMV,qBAEzB,wBACEtC,UAAU,+BAITgD,EAAMvF,kBAAkBH,OAAS,EAChC,0BACEiH,MAAM,cACNvE,UAAU,uCACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAElI,QAASmI,EAAa,cAGtC,uBAAGlF,UAAU,+BAEb,GAEJ,0BACEuE,MAAM,eACNvE,UAAU,oCACVG,QAAS,SAAMC,GAAN,eAAA/B,EAAA2C,OAAA,mDAEPZ,EAAM0D,iBAGiB,KADnB9G,EAAUoI,KACF9H,OALL,kCAAAe,EAAA,MAOW2F,EAAYsE,cAActF,EAAM/D,YAP3C,OAOLjC,EAPK,6BAWLA,EAAU,GAXL,OAaPiI,EAAY,CAAEjI,QAASA,IAbhB,wCAeT,uBAAGgD,UAAU,oBAGf,0BACEuE,MAAM,qBACNvE,UAAU,sCACVG,QAAS,SAAMC,GAAN,SAAA/B,EAAA2C,OAAA,uDAEPZ,EAAM0D,iBAFC,WAAAzF,EAAA,MAGgB0J,EAAkBpC,OAAO3C,EAAMnG,YAH/C,cAIM0E,GAEXyB,EAAM4C,YAINC,MAAM,uGAVD,uCAcT,uBAAG7F,UAAU,wBAMnB,kBAAC,EAAD,eACEkD,QAAS,EACTwB,aAAcQ,EAAa,YACvBlC,IAEN,kBAAC,EAAD,eACEE,QAAS,EACT4C,aAAa,GACb/B,YArLe,SAAO9E,EAAmB8G,GAA1B,SAAA1H,EAAA2C,OAAA,kEAAA3C,EAAA,MAEI0J,EAAkB/B,OAAO/G,EAAW8G,IAFxC,cAGNxE,GAEXyB,EAAM4C,YAINC,MAAM,uGATW,sCAsLfjD,kBAAmBsC,EAAa,YAC5BlC,IAEN,kBAAC,EAAD,CACEE,QAAS,EACTzF,kBAAmBuF,EAAMvF,kBACzBoF,YAAaqC,EAAa,YAC5B,kBAAC,EAAD,CACEhC,QAAS,EACTqB,MAAM,uBACNvH,QAASoI,QC5EFmD,EA3HU,WACxB,IAAD,EAC8BjN,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SADjB,EAG4CuG,EAAa8B,EAAkBjH,IAAK,eAAe,GAArFuF,EAHV,EAGUA,UAAWE,EAHrB,EAGqBA,QAEbkB,EH2BgB,SAACpB,EAAoBT,GAE3C,MAAO,CACLiB,QAASR,EACT9B,MAAO,KACPqC,kBAAmB,yIAEnBhB,UAAWA,EACXkB,UAAW,UAGXC,eAAgB,CACd,CACEpK,GAAI,EACJ4K,MAAO,WACP3D,MAAO,IAET,CACEjH,GAAI,EACJ4K,MAAO,SACP3D,MAAO,SAET,CACEjH,GAAI,EACJ4K,MAAO,YACP3D,MAAO,aAET,CACEjH,GAAI,EACJ4K,MAAO,OACP3D,MAAO,QAET,CACEjH,GAAI,EACJ4K,MAAO,OACP3D,MAAO,QAET,CACEjH,GAAI,EACJ4K,MAAO,WACP3D,MAAO,cGnEE4E,CAASnC,EAL1B,EAG8BT,WAMxBvJ,EAAOZ,EAAK,QAEZkM,EAAY,SAACC,GAEflI,EAAS,CACP/D,KAAM,cACNC,QAAS,CACPS,KATU,UAUVC,OAAQ,CACNhC,WAAYsN,EACZrN,gBAAiB8B,EAAK9B,oBAgB9B,OAVAmM,qBAAU,cAGP,CACDL,EACAE,EACA9K,EAAMP,iBACNmB,IAIA,iCACE,kBAAC,EAAD,eAAgBwK,QAASR,GAAeoB,IAExC,2BAAOzH,UAAU,sBACf,+BACE,4BACE,wBAAIK,MAAO,CAACoI,MAAO,OAAnB,KAGA,wBAAIpI,MAAO,CAAEoI,MAAO,QAClB,uBACEZ,KAAK,kBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,cAEZ3H,UAAS,UAAyB,cAApB3D,EAAK/B,WAA6B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPhG,cAWF,wBAAI8F,MAAO,CAACoI,MAAO,QACjB,uBACEZ,KAAK,kBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,cAEZ3H,UAAS,UAAyB,cAApB3D,EAAK/B,WAA6B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPhG,cAWF,wBAAI8F,MAAO,CAAEoI,MAAO,OAClB,uBACEZ,KAAK,cACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,aAEZ3H,UAAS,UAAyB,aAApB3D,EAAK/B,WAA4B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAP/F,SAWF,wBAAI8F,MAAO,CAAEoI,MAAO,QAClB,uBACEZ,KAAK,qBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,eAEZ3H,UAAS,UAAyB,eAApB3D,EAAK/B,WAA8B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPjG,kBAWF,wBAAI8F,MAAO,CAAEoI,MAAO,QAClB,uBACEZ,KAAK,sBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,uBAEZ3H,UAAS,UAAyB,uBAApB3D,EAAK/B,WAAsC,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPzG,gBAWF,wBAAI8F,MAAO,CAAEoI,MAAO,OAClBzI,UAAU,qBADZ,aAMJ,+BACGvE,EAAMP,iBAAiBnB,KAAI,SAAC2O,EAAItF,GAE/B,OAAQ,kBAAC,EAAD,eAAIC,IAAKqF,EAAG7L,UAAWuG,MAAOA,GAAWsF,WClE9CC,EAlCf,iDAES/L,SAAmB,GAF5B,KAGS0F,mBAA2B,IAAI/D,KAHxC,KAISqK,QAAkB,GAJ3B,KAKSC,OAAiB,GAL1B,KAMSC,SAAmB,GAN5B,KAOSrG,SAAmB,EAP5B,KAQSC,UAAoB,EAR7B,KASSqG,MAAgB,EATzB,KAUSC,QAAkB,EAV3B,KAWSrG,WAAmB,IAAIpE,KAXhC,KAYSd,kBAAmC,GAZ5C,KAaSmF,mBAA6B,EAbtC,KAcSC,aAAuB,EAdhC,KAeSlF,gBAA0B,EAfnC,KAgBSC,oBAA8B,EAhBvC,KAiBSC,gBAA0B,EAjBnC,KAkBSiF,eAA6B,GAlBtC,yJAsBuBhC,EAAoB,gBAtB3C,cAsBUc,EAtBV,yBAuBWA,GAvBX,oEA0B6BhF,GA1B7B,kGA4B2B+E,EAAW,2BAA6B/E,EAAU,KA5B7E,cA4BU0E,EA5BV,yBA6BWA,GA7BX,8CCkKe2H,EA/KH,SAACjG,GACZ,IAAD,EAC8B1H,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAIXrD,EAAOZ,EAAK,SAEVwJ,EAAc,SAAC3I,GAEnBoD,EACE,CACE/D,KAAM,qBACNC,QACA,CACES,KAXQ,WAYRO,SAAUoG,EAAMpG,SAChBN,OAAQA,MAiBV4I,EAAe,SAACC,GAEpB,IAAM3H,EAAInB,EAAKjC,EAAE4I,EAAMpG,UACvB,QAAKY,GACEA,EAAE2H,IAGLC,EAAc,WAElB,OAAI/I,EAAKjC,EAAE4I,EAAMpG,WAAaP,EAAKjC,EAAE4I,EAAMpG,UAAUI,QAE5CX,EAAKjC,EAAE4I,EAAMpG,UAAUI,QAIvB,IAIX,OACE,oCACE,wBAAIL,GAAI,MAAQqG,EAAMpG,UACpB,4BACGoG,EAAMI,MAAQ,GAEjB,4BACE,0BACEmB,MAAM,sBACNvE,UAAU,+BACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAEhI,SAAUiI,EAAa,eAEtClC,EAAMpG,UAEW,IAAnBoG,EAAMP,SACL,0BACE8B,MAAM,uBACNlE,MAAO,CAAEgF,MAAO,gBAChBrF,UAAU,sBACVG,QAAS,SAAAC,IApDH,SAACsC,EAAWD,GAE5B,GAAKhH,EAAMzB,SAAX,CACA,IAAIsL,EAAQ,CACV3J,KAAM,QACJ+G,UAAWA,EACXD,SAAUA,GAEdhH,EAAMzB,SAASuL,OAASD,EACpB7J,EAAMzB,SAASwL,KAAO,KAAI/J,EAAMzB,SAASwL,KAAO,KA6CxCC,CAAUzC,EAAMN,UAAWM,EAAMP,YAEnC,uBAAGzC,UAAU,gBAEb,IAEN,4BACGgD,EAAM4F,QAAQ7J,OAAOzB,OAAS,EAAI,YAAc,IAEnD,4BACG0F,EAAM6F,QAET,4BACG7F,EAAM8F,UAGT,4BACG9G,EAAgBgB,EAAML,aAEzB,4BACGX,EAAgBgB,EAAMV,qBAEzB,wBAAItC,UAAU,+BACXgD,EAAMvF,kBAAkBH,OAAS,EAChC,0BACEiH,MAAM,cACNvE,UAAU,uCACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAElI,QAASmI,EAAa,cAGtC,uBAAGlF,UAAU,+BAEb,GAEJ,0BACEuE,MAAM,eACNvE,UAAU,oCACVG,QAAS,SAAMC,GAAN,eAAA/B,EAAA2C,OAAA,mDAEPZ,EAAM0D,iBAGiB,KADnB9G,EAAUoI,KACF9H,OALL,kCAAAe,EAAA,MAOW2F,EAAYsE,cAActF,EAAMpG,WAP3C,OAOLI,EAPK,6BAWLA,EAAU,GAXL,OAaPiI,EAAY,CAAEjI,QAASA,IAbhB,wCAeT,uBAAGgD,UAAU,oBAGf,0BACEuE,MAAM,qBACNvE,UAAU,sCACVG,QAAS,SAAMC,GAAN,SAAA/B,EAAA2C,OAAA,uDAEPZ,EAAM0D,iBAFC,WAAAzF,EAAA,MAGgBsK,EAAQhD,OAAO3C,EAAMpG,WAHrC,cAIM2E,GAEXyB,EAAM4C,YAINC,MAAM,uGAVD,uCAcT,uBAAG7F,UAAU,wBAMnB,kBAAC,EAAD,eACEkD,QAAS,EACTwB,aAAcQ,EAAa,YACvBlC,IAEN,kBAAC,EAAD,CACEE,QAAS,EACTzF,kBAAmBuF,EAAMvF,kBACzBoF,YAAaqC,EAAa,YAC5B,kBAAC,EAAD,CACEhC,QAAS,EACTqB,MAAM,uBACNvH,QAASoI,QC9BF8D,EA5IW,WACzB,IAAD,EAC8B5N,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SADjB,EAG4CuG,EAAa0C,EAAQ7H,IAAK,gBAAgB,GAA5EuF,EAHV,EAGUA,UAAWE,EAHrB,EAGqBA,QAEbkB,ENyEiB,SAACpB,EAAoBT,GAE5C,MAAO,CACLiB,QAASR,EACT9B,MAAO,MACPqC,kBAAmB,kHAEnBhB,UAAWA,EACXkB,UAAW,WAGXC,eAAgB,CACd,CACEpK,GAAI,EACJ4K,MAAO,WACP3D,MAAO,IAET,CACEjH,GAAI,EACJ4K,MAAO,SACP3D,MAAO,SAET,CACEjH,GAAI,EACJ4K,MAAO,OACP3D,MAAO,QAET,CACEjH,GAAI,EACJ4K,MAAO,WACP3D,MAAO,cMvGEuF,CAAU9C,EAL3B,EAG8BT,WAMxBvJ,EAAOZ,EAAK,SAEZkM,EAAY,SAACC,GAEflI,EAAS,CACP/D,KAAM,cACNC,QAAS,CACPS,KATU,WAUVC,OAAQ,CACNhC,WAAYsN,EACZrN,gBAAiB8B,EAAK9B,oBAe9B,OATAmM,qBAAU,cAGP,CACDL,EACAE,EACA9K,EAAMN,kBACNkB,IAGA,iCAEE,kBAAC,EAAD,eAAgBwK,QAASR,GAAeoB,IAExC,2BAAOzH,UAAU,sBACf,+BACE,4BACE,iCAGA,4BACE,uBACE6H,KAAK,kBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,aAGZ3H,UAAS,UAAyB,aAApB3D,EAAK/B,WAA4B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAR/F,cAYF,4BACE,uBACEsN,KAAK,oBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,YAGZ3H,UAAS,UAAyB,YAApB3D,EAAK/B,WAA2B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAR9F,gBAYF,4BACE,uBACEsN,KAAK,oBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,WAGZ3H,UAAS,UAAyB,WAApB3D,EAAK/B,WAA0B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAR7F,WAYF,4BACE,uBACEsN,KAAK,sBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,aAGZ3H,UAAS,UAAyB,aAApB3D,EAAK/B,WAA4B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAR/F,cAYF,4BACE,uBACEsN,KAAK,qBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,eAGZ3H,UAAS,UAAyB,eAApB3D,EAAK/B,WAA8B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBARjG,kBAYF,4BACE,uBACEsN,KAAK,sBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,uBAGZ3H,UAAS,UAAyB,uBAApB3D,EAAK/B,WAAsC,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBARzG,gBAYF,wBAAIyF,UAAU,qBAAd,aAKJ,+BACGvE,EAAMN,kBAAkBpB,KAAI,SAACqP,EAAKhG,GAEjC,OAAQ,kBAAC,EAAD,eAAKC,IAAK+F,EAAIxM,SAAUwG,MAAOA,GAAWgG,WC9C/CC,EA1Df,iDAESzM,SAAmB,GAF5B,KAGS0C,WAAqB,GAH9B,KAISD,YAAsB,GAJ/B,KAKSiK,iBAA2B,EALpC,KAOSC,cAAwB,GAPjC,KAQSC,cAAwB,EARjC,KASSC,aAAuB,EAThC,KAUSC,uBAA+B,IAAInL,KAV5C,KAWSoL,gBAA0B,EAXnC,KAYS5L,eAAyB,EAZlC,KAcS6L,aAAuB,GAdhC,KAeSC,aAAuB,EAfhC,KAgBSC,YAAqB,EAhB9B,KAiBSC,sBAA8B,IAAIxL,KAjB3C,KAkBSyL,eAAyB,EAlBlC,KAmBShM,cAAwB,EAnBjC,KAqBSiM,cAAwB,EArBjC,KAsBSC,aAAuB,EAtBhC,KAuBSC,uBAA+B,IAAI5L,KAvB5C,KAwBS6L,0BAAoC,EAxB7C,KAyBStM,eAAyB,EAzBlC,KA2BSL,kBAAmC,GA3B5C,KA4BSoF,aAAuB,EA5BhC,KA6BSD,mBAA6B,EA7BtC,KA8BSE,eAA6B,GA9BtC,yJAkCuBhC,EAAqB,iBAlC5C,cAkCUc,EAlCV,yBAmCWA,GAnCX,oEAsC6BhF,GAtC7B,kGAwC2B+E,EAAW,4BAA8B/E,EAAU,KAxC9E,cAwCU0E,EAxCV,yBAyCWA,GAzCX,oEA4C6B1E,EAAkByN,EAAeC,EAAkBC,EAAiBC,GA5CjG,kGA8C2B7I,EAAW,4BAAD,OAA6B/E,EAA7B,kBAA+CyN,EAA/C,oBAAgEC,EAAhE,mBAAkFC,EAAlF,4BAA4GC,GAAmB,KA9CpK,cA8CUlJ,EA9CV,yBA+CWA,GA/CX,iEAkD0B1E,EAAkByN,EAAeC,EAAkBC,EAAiBC,GAlD9F,kGAoD2B7I,EAAW,yBAAD,OAA0B/E,EAA1B,kBAA4CyN,EAA5C,oBAA6DC,EAA7D,mBAA+EC,EAA/E,4BAAyGC,GAAmB,KApDjK,cAoDUlJ,EApDV,yBAqDWA,GArDX,8CCiIemJ,EAhKM,SAACzH,GACrB,IAAD,EAC8B1H,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SADjB,EAWwC6D,mBAASP,EAAMpG,UAXvD,gCAY4B2G,mBATJ,SAACgE,GAErB,GAAqB,IAAjBA,EAAMjK,OAAc,OAAOiK,EAC/B,IAAInL,EAAIX,EAAMxB,YAAYsD,QAAO,SAAAmN,GAAC,OAAIA,EAAEnD,QAAUA,KAClD,OAAInL,EAAEkB,OAAS,EAAUlB,EAAE,GAAGwH,MACvB,GAI0B+G,CAAc3H,EAAM3D,eAZzD,mBAYSgL,EAZT,KAYgBO,EAZhB,OAa8BrH,mBAASP,EAAM2G,gBAb7C,mBAaSkB,EAbT,KAaiBC,EAbjB,OAc4BvH,mBAASP,EAAMgH,eAd3C,mBAcSe,EAdT,KAcgBC,EAdhB,OAe8BzH,mBAASP,EAAMoH,0BAf7C,mBAeSa,EAfT,KAeiBC,EAfjB,KAkBE,OAAKzP,EAAMd,UAAUP,EAAE4I,EAAMpG,WAAcnB,EAAMd,UAAUP,EAAE4I,EAAMpG,UAAxB,QAGzC,oCACE,4BACE,6BAEA,wBAAIqG,QAAS,EACXjD,UAAU,kBADZ,UAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBACb,4BAAQ4D,MAAOyG,EACb3G,SAAU,SAAAtD,GAERwK,EAASxK,EAAMuD,OAAOC,SAExB,4BAAQA,MAAM,IAAd,YAEEnI,EAAMxB,YAAYF,KAAI,SAAAsQ,GAEtB,OACE,4BAAQhH,IAAKgH,EAAMzG,MAAOA,MAAOyG,EAAMzG,OAAQyG,EAAM9C,eAQnE,wBAAItE,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,kBAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,YACf,2BACEmL,QAASN,EACTnH,SAAU,SAAAtD,GAAK,OAAI0K,EAAU1K,EAAMuD,OAAOwH,UAC1CxP,KAAK,iBAKf,wBAAIsH,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,6BAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,YACf,2BACEmL,QAASJ,EACTrH,SAAU,SAAAtD,GAAK,OAAI4K,EAAS5K,EAAMuD,OAAOwH,UACzCxP,KAAK,iBAKf,wBAAIsH,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,4BAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,YACf,2BACEmL,QAASF,EACTvH,SAAU,SAAAtD,GAAK,OAAI8K,EAAU9K,EAAMuD,OAAOwH,UAC1CxP,KAAK,iBAKf,wBAAIsH,QAAS,KAEf,4BACE,wBAAIA,QAAS,IAEb,4BACE,yBAAKjD,UAAU,SACb,yBAAKA,UAAU,WACb,4BACEG,QAAS,SAAOC,GAAP,SAAA/B,EAAA2C,OAAA,uDAEPZ,EAAM0D,iBAFC,WAAAzF,EAAA,MAGgBgL,EAASrD,OAAOhD,EAAMpG,SAAUyN,EAAOQ,EAAQE,EAAOE,IAHtE,cAIM1J,GAEXyB,EAAMoI,eAINvF,MAAM,kGAVD,sCAaTtB,MAAM,6CACNvE,UAAU,8BAfZ,QAkBA,4BACEuE,MAAM,yDACNlE,MAAO,CAAEiH,WAAY,OACrBtH,UAAU,6BACVG,QAAS,SAAAC,GAEPV,EAAS,CAAE/D,KAAM,qCAAsCC,QAASoH,EAAMpG,aAN1E,aAaN,wBAAIqG,QAAS,MAvI6E,MCsQnFoI,EArRF,SAACrI,GACb,IAAD,EAC8B1H,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAITrD,EAAOZ,EAAK,UAEZgK,EAAY,SAAC/C,EAAWD,GAE5B,GAAKhH,EAAMzB,SAAX,CACA,IAAIsL,EAAQ,CACV3J,KAAM,QACJ+G,UAAWA,EACXD,SAAUA,GAEdhH,EAAMzB,SAASuL,OAASD,EACpB7J,EAAMzB,SAASwL,KAAO,KAAI/J,EAAMzB,SAASwL,KAAO,MAGhDP,EAAc,SAAC3I,GAEnBoD,EACE,CACE/D,KAAM,qBACNC,QACA,CACES,KAvBU,YAwBVO,SAAUoG,EAAMpG,SAChBN,OAAQA,MAKVgP,EAAkB,SAACxE,EAAmBxK,GAE1CoD,EACE,CACE/D,KAAM,cACNC,QACA,CACES,KAAMyK,EACNxK,OAAQA,MAKViP,EAAoB,SAACzE,EAAmBlK,EAAkBC,EAAmBP,GAEjFoD,EACE,CACE/D,KAAM,qBACNC,QACA,CACES,KAAMyK,EACNlK,SAAUA,EACVC,UAAWA,EACXP,OAAQA,MAKV4I,EAAe,SAACC,GAEpB,IAAM3H,EAAInB,EAAKjC,EAAE4I,EAAMpG,UACvB,QAAKY,GACEA,EAAE2H,IAGLC,EAAc,WAElB,IAAM5H,EAAInB,EAAKjC,EAAE4I,EAAMpG,UACvB,OAAIY,GAAKA,EAAER,QAEFQ,EAAER,QAIF,IAIX,OACE,oCACE,4BACE,4BACGgG,EAAMI,MAAQ,GAEjB,4BACE,0BACEmB,MAAM,iCACNvE,UAAU,+BACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAEnI,SAAUoI,EAAa,eAEtClC,EAAMpG,WAIX,4BACGoG,EAAM1D,YAET,4BACG0D,EAAM3D,aAET,4BAC0B,IAAvB2D,EAAMyG,aACL,0BACElF,MAAM,uBACNlE,MAAO,CAAEgF,MAAO,gBAChBrF,UAAU,sBACVG,QAAS,SAAAC,GAEPqF,EAAUzC,EAAMwG,cAAexG,EAAMyG,gBAEvC,uBAAGzJ,UAAU,gBAEd,GACF,IAAIzB,KAAKyE,EAAM0G,wBAAwB8B,cAAgB,KACtD,0BACEnL,MAAO,CAAEiH,WAAY,OAAQjC,MAAO,kBACpCd,MAAM,4BACNvE,UAAU,sBACVG,QAAS,SAAAC,GAEPkL,EAAgB,WAAY,CAAEjR,YAAa2I,EAAMuG,cAAe/O,eAAgB,KAChF+Q,EAAkB,WAAYvI,EAAMuG,mBAAekC,EAAW,CAAExO,SAAS,MAG3E,uBAAG+C,UAAU,iBAEb,IAEN,4BACyB,IAAtBgD,EAAM8G,YACL,0BACEvF,MAAM,uBACNvE,UAAU,sBACVK,MAAO,CAAEgF,MAAO,gBAChBlF,QAAS,SAAAC,GAEPqF,EAAUzC,EAAM6G,aAAc7G,EAAM8G,eAEtC,uBAAG9J,UAAU,gBAEb,GACH,IAAIzB,KAAKyE,EAAM+G,uBAAuByB,cAAgB,KACrD,0BACEnL,MAAO,CAAEiH,WAAY,OAAQjC,MAAO,kBACpCd,MAAM,uCACNvE,UAAU,sBACVG,QAAS,SAAAC,GAEPkL,EAAgB,UAAW,CAAEjR,YAAa2I,EAAM4G,aAAcpP,eAAgB,KAC9E+Q,EAAkB,UAAWvI,EAAM4G,kBAAc6B,EAAW,CAAExO,SAAS,MAGzE,uBAAG+C,UAAU,iBAEb,IAEN,4BAC0B,IAAvBgD,EAAMkH,aACL,0BACE3F,MAAM,uBACNlE,MAAO,CAAEgF,MAAO,gBAChBrF,UAAU,sBACVG,QAAS,SAAAC,GAEPqF,EAAUzC,EAAMiH,cAAejH,EAAMkH,gBAEvC,uBAAGlK,UAAU,gBAEb,GACH,IAAIzB,KAAKyE,EAAMmH,wBAAwBqB,cAAgB,KACtD,0BACEnL,MAAO,CAAEiH,WAAY,OAAQjC,MAAO,gBACpCd,MAAM,4BACNvE,UAAU,sBACVG,QAAS,SAAAC,GAEPkL,EAAgB,WAAY,CAAEjR,YAAa2I,EAAMpG,SAAUpC,eAAgB,KAC3E+Q,EAAkB,gBAAYE,EAAWzI,EAAMpG,SAAU,CAAEK,SAAS,MAGtE,uBAAG+C,UAAU,iBAEX,IAER,wBACEA,UAAU,+BAITgD,EAAMvF,kBAAkBH,OAAS,EAChC,0BACEiH,MAAM,cACNvE,UAAU,uCACVG,QAAS,SAAAC,GAEP6E,EAAY,CAAElI,QAASmI,EAAa,cAEtC,uBAAGlF,UAAU,+BAEb,GAEJ,0BACEuE,MAAM,eACNvE,UAAU,oCACVG,QAAS,SAAMC,GAAN,eAAA/B,EAAA2C,OAAA,mDAEPZ,EAAM0D,iBAGiB,KADnB9G,EAAUoI,KACF9H,OALL,kCAAAe,EAAA,MAOW2F,EAAY0B,UAAU1C,EAAMpG,WAPvC,OAOLI,EAPK,6BAWLA,EAAU,GAXL,OAaPiI,EAAY,CAAEjI,QAASA,IAbhB,wCAgBT,uBAAGgD,UAAU,oBAG2C,OAAzD,IAAIzB,KAAKyE,EAAM0G,wBAAwB8B,eACkB,OAAxD,IAAIjN,KAAKyE,EAAM+G,uBAAuByB,eACmB,OAAzD,IAAIjN,KAAKyE,EAAMmH,wBAAwBqB,cACvC,0BACEnL,MAAO,CAAEiH,WAAY,QACrB/C,MAAM,qBACNvE,UAAU,sCACVG,QAAS,SAAMC,GAAN,SAAA/B,EAAA2C,OAAA,uDAEPZ,EAAM0D,iBAFC,WAAAzF,EAAA,MAGgBgL,EAAS1D,OAAO3C,EAAMpG,WAHtC,cAIM2E,GAEXyB,EAAM4C,YAINC,MAAM,uGAVD,uCAcT,uBAAG7F,UAAU,sBAEb,KAKR,kBAAC,EAAD,eACEkD,QAAS,EACTkI,aAAcpI,EAAM4C,UACpBhD,kBAAmBsC,EAAa,YAC5BlC,IAEN,kBAAC,EAAD,CACEE,QAAS,EACTzF,kBAAmBuF,EAAMvF,kBACzBoF,YAAaqC,EAAa,YAC5B,kBAAC,EAAD,CACEhC,QAAS,EACTqB,MAAM,uBACNvH,QAASoI,QCnFFsG,EA/LC,SAAC1I,GAChB,IAAD,EAC8B1H,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAUTiM,EAAgB,0BAAAtN,EAAA2C,OAAA,kEAAA3C,EAAA,MAEDgL,EAASvI,OAFR,cAEdc,EAFc,yBAGblC,EAAS,CAAE/D,KAAM,gBAAiBC,QAASgG,KAH9B,sCAXxB,EAiBwC2B,mBAASP,EAAMpG,UAjBvD,mBAiBS4G,EAjBT,KAiBsBC,EAjBtB,OAkB4BF,mBAfJ,SAACgE,GAErB,GAAqB,IAAjBA,EAAMjK,OAAc,OAAOiK,EAC/B,IAAInL,EAAIX,EAAMxB,YAAYsD,QAAO,SAAAmN,GAAC,OAAIA,EAAEnD,QAAUA,KAClD,OAAInL,EAAEkB,OAAS,EAAUlB,EAAE,GAAGwH,MACvB,GAU0B+G,CAAc3H,EAAM3D,cAlBzD,mBAkBSgL,EAlBT,KAkBgBO,EAlBhB,OAmB8BrH,mBAASP,EAAM2G,gBAnB7C,mBAmBSkB,EAnBT,KAmBiBC,EAnBjB,OAoB4BvH,mBAASP,EAAMgH,eApB3C,mBAoBSe,EApBT,KAoBgBC,EApBhB,OAqB8BzH,mBAASP,EAAMoH,0BArB7C,mBAqBSa,EArBT,KAqBiBC,EArBjB,KAuBE,OAAKlI,EAAM4I,cAGT,oCACE,4BACE,6BAEA,wBAAI3I,QAAS,EACXjD,UAAU,kBADZ,aAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BACI4D,MAAOJ,EACPE,SAAU,SAAAtD,GAAK,OAAIqD,EAAerD,EAAMuD,OAAOC,QAC/CjI,KAAK,YAIf,wBAAIsH,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,UAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBACb,4BAAQ4D,MAAOyG,EACb3G,SAAU,SAAAtD,GAERlD,QAAQC,IAAI,QAASiD,EAAOA,EAAMuD,OAAOC,OACzCgH,EAASxK,EAAMuD,OAAOC,SAExB,4BAAQA,MAAM,IAAd,YAEEnI,EAAMxB,YAAYF,KAAI,SAAAsQ,GAEpB,OACE,4BAAQhH,IAAKgH,EAAMzG,MAAOA,MAAOyG,EAAMzG,OAAQyG,EAAM9C,eAQrE,wBAAItE,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,kBAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,YACf,2BACEmL,QAASN,EACTnH,SAAU,SAAAtD,GAAK,OAAI0K,EAAU1K,EAAMuD,OAAOwH,UAC1CxP,KAAK,iBAKf,wBAAIsH,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,6BAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,YACf,2BACEmL,QAASJ,EACTrH,SAAU,SAAAtD,GAAK,OAAI4K,EAAS5K,EAAMuD,OAAOwH,UACzCxP,KAAK,iBAKf,wBAAIsH,QAAS,KAEf,4BACE,6BAEA,wBAAIA,QAAS,EACXjD,UAAU,kBADZ,4BAIA,4BACE,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,2BAAOA,UAAU,YACf,2BACEmL,QAASF,EACTvH,SAAU,SAAAtD,GAAK,OAAI8K,EAAU9K,EAAMuD,OAAOwH,UAC1CxP,KAAK,iBAKf,wBAAIsH,QAAS,KAEf,4BACE,wBAAIA,QAAS,IAEb,4BACE,yBAAKjD,UAAU,SACb,yBAAKA,UAAU,WACb,4BACEG,QAAS,SAAOC,GAAP,SAAA/B,EAAA2C,OAAA,uDAEPZ,EAAM0D,iBAFC,WAAAzF,EAAA,MAGgBgL,EAASwC,IAAIrI,EAAa6G,EAAOQ,EAAQE,EAAOE,IAHhE,cAIM1J,IAEXoK,IACAlI,EAAe,IACfqH,GAAU,GACVE,GAAS,GACTE,GAAU,GACVN,EAAS,IACT5H,EAAM8I,UAINjG,MAAM,kGAhBD,sCAmBTtB,MAAM,6CACNvE,UAAU,8BArBZ,QAwBA,4BACEuE,MAAM,yDACNlE,MAAO,CAAEiH,WAAY,OACrBtH,UAAU,6BACVG,QAAS,SAAAC,GAEP4C,EAAM8I,WANV,aAaN,wBAAI7I,QAAS,MAjKc,MCuJpB8I,EA1KY,WAC1B,IAAD,EAC8BzQ,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SADjB,EAEwC6D,oBAAS,GAFjD,mBAESyI,EAFT,KAEsBC,EAFtB,KAIQ5P,EAAOZ,EAAK,UAJpB,EAK4C8H,mBAASlH,EAAKhC,aAAe,IALzE,mBAKwB4M,GALxB,aAY4ChB,EAAaoD,EAASvI,IAAK,iBAAiB,GAA9EuF,EAZV,EAYUA,UAAWE,EAZrB,EAYqBA,QAASX,EAZ9B,EAY8BA,UAEtB6B,EXkGkB,SAACpB,EAAoBT,GAE7C,MAAO,CACLiB,QAASR,EACT9B,MAAO,OACPqC,kBAAmB,0IAEnBhB,UAAWA,EACXkB,UAAW,YAGXC,eAAgB,CACd,CACEpK,GAAI,EACJ4K,MAAO,WACP3D,MAAO,IAET,CACEjH,GAAI,EACJ4K,MAAO,SACP3D,MAAO,SAET,CACEjH,GAAI,EACJ4K,MAAO,MACP3D,MAAO,OAET,CACEjH,GAAI,EACJ4K,MAAO,KACP3D,MAAO,MAET,CACEjH,GAAI,EACJ4K,MAAO,MACP3D,MAAO,SWrIEsI,CAAW7F,EAAWT,GAE/B+B,EAAY,SAACC,GAEjBlI,EAAS,CACP/D,KAAM,cACNC,QAAS,CACPS,KAlBY,YAmBZC,OAAQ,CACNhC,WAAYsN,EACZrN,gBAAiBkB,EAAK,UAAYlB,oBAe1C,OATAmM,qBAAU,cAGP,CACDL,EACAE,EACA9K,EAAML,mBACNK,EAAMd,YAGN,iCACE,kBAAC,EAAD,eAAgBkM,QAASR,GAAeoB,IAExC,2BAAOzH,UAAU,sBACf,+BACE,4BACE,iCAGA,4BACE,uBACE6H,KAAK,kBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,aAGZ3H,UAAS,UAAyB,aAApB3D,EAAK/B,WAA4B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAR/F,QAWA,0BACE8F,MAAO,CAAEiH,WAAY,OACrB/C,MAAM,aACNvE,UAAU,sCACVG,QAAS,SAAAC,GAEP6L,GAAgBD,KAElB,uBAAGhM,UAAU,yBAGjB,4BACE,uBACE6H,KAAK,mBACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,eAEZ3H,UAAS,UAAyB,eAApB3D,EAAK/B,WAA8B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAPjG,eAWF,4BACE,uBACEsN,KAAK,eACL1H,QAAS,SAAAC,GAEPA,EAAM0D,iBACN6D,EAAU,gBAEZ3H,UAAS,UAAyB,gBAApB3D,EAAK/B,WAA+B,GAAK+B,EAAK9B,eAAiB,iBAAmB,oBAChG,0BACEgK,MAAM,uBACNvE,UAAU,QACV,uBAAGA,UAAU,kBAIjB,yBACEK,MAAO,CAAE8L,QAAS,gBAClBnM,UAAU,WACV,yBAAKA,UAAU,mBACb,4BACE0D,SAAU,SAAAtD,GAER,IAAIgM,EAAgBhM,EAAMuD,OAAO7G,QAAQsD,EAAMuD,OAAO0I,eAAeC,UAC/C,eAAlBF,IAAgCA,EAAgB,IACpDnF,EAAiBmF,GAEjB1M,EAAS,CACP/D,KAAM,cACNC,QAAS,CACPS,KA/GN,YAgHMC,OAAQ,CACNjC,YAAa+R,QAMrB,4BAAQxI,MAAM,IAAd,cAEEnI,EAAMxB,YAAYF,KAAI,SAAAsQ,GAEpB,OACE,4BAAQhH,IAAKgH,EAAMzG,MAAOA,MAAOyG,EAAMzG,OAAQyG,EAAM9C,cAOnE,mCAGA,kCAGA,mCAGA,wBAAIvH,UAAU,qBAAd,aAKJ,+BACE,kBAAC,EAAD,CACEpD,SAAS,GACT+M,gBAAgB,EAChBK,eAAe,EACfI,0BAA0B,EAC1B/K,YAAa,GACbuM,cAAeI,EACfF,OArJU,WAElBG,GAAe,MAsJRxQ,EAAML,mBAAmBrB,KAAI,SAACwS,EAAGnJ,GAEhC,OAAQ,kBAAC,EAAD,eAAMC,IAAKkJ,EAAE3P,SAAUwG,MAAOA,GAAWmJ,EAAzC,CAA4C3G,UAAWA,Y,OCpD5D4G,EApHO,SAAC,GACtB,IADwBC,EACzB,EADyBA,YAAalI,EACtC,EADsCA,MAAOmI,EAC7C,EAD6CA,EAAGhC,EAChD,EADgDA,EAAGpM,EACnD,EADmDA,EAAGqO,EACtD,EADsDA,UACtD,EAC8BrR,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MADV,KACiBiE,SAM2B6D,mBAAS,OAPrD,mBAOSqJ,EAPT,KAOwBC,EAPxB,KASQC,EAA0B,SAACC,EAAiBC,GAEhD,IAAIC,GAAQD,EAAIE,UAAY,IAAI3O,KAAKwO,GAAWG,WAAa,IAC7D,OAAID,EAAO,GAAW,EAClBA,EAAO,IAAY,GACnBA,EAAO,IAAY,GACnBA,EAAO,IAAY,GACnBA,EAAO,KAAa,GACpBA,EAAO,KAAa,GACpBA,EAAO,KAAa,GACpBA,EAAO,MAAc,GACrBA,EAAO,MAAc,GAClB,IA2FT,OAbAvG,qBAAU,WAMR,OAJIjL,EAAM1B,KAAO0B,EAAMgR,GAAanP,OAAS,GA3E7C6P,sBAAY,CACV,4BACE,iBACDC,MAAK,YAIP,IAAD,mBAHEC,EAGF,KAFIC,EAEJ,KACMC,EAA0B,OAAlBX,EAAyB,IAAIS,EAAkBT,EACvDW,EAAMC,SAASlQ,OAAS,GAAGiQ,EAAME,YACrCF,EAAM5Q,GAAKgQ,EACXY,EAAMhJ,MAAQA,EAEd,IAAIyI,EAAM,IAAIzO,KANhB,uBAQE,YAAc9C,EAAMgR,GAApB,+CACA,CAAC,IADQjP,EACT,QACM8H,EAAQ,CACV3J,KAAM,QACJ+G,UAAWlF,EAAEkF,UACbD,SAAUjF,EAAEiF,UAQZiL,EAAgB,IAAIJ,EAAQ,CAC9BK,SAAUrI,EACRsI,OAPS,CACXjS,KAAM,gBACJ0J,MAAO,CAACqH,EAAGhC,EAAGpM,EAAGwO,EAAwBtP,EAAE8E,mBAAoB0K,OAQnEU,EAAcG,aAAa,OAAQlB,GACnCe,EAAcG,aAAa,YAAarQ,EAAEX,WAC1C6Q,EAAcG,aAAa,WAAYrQ,EAAEZ,UASzC,IAcIkR,EAAc,IAAIR,EAAQ,CAC5BK,SAAUrI,EACRsI,OAhBO,CACTjS,KAAM,OACJ0J,MAAO,QACP0I,UAAW,QACXC,SAAU,MACVC,QAAS,EACTC,SAAU,EACVC,KAAO3Q,EAAEZ,SAASU,OAAS,EAAIE,EAAEZ,SAAWY,EAAEX,UAC9CuR,oBAAqB,OACrBC,KAAM,CACNC,KAAM,OASVf,EAAMgB,IAAIb,GACVH,EAAMgB,IAAIT,IAzDd,kFA4DEjB,EAAiBU,GACjB9R,EAAM1B,IAAIwU,IAAIhB,MAEbiB,OAAM,SAAAC,GAAG,OAAIvR,QAAQwR,MAAMD,MASvB,WAEDhT,EAAM1B,KAAK0B,EAAM1B,IAAIgG,OAAO6M,MAEjC,CAACnR,EAAM1B,IAAK0B,EAAMgR,KAGd,MChHIkC,EAAa,WAExB,IAAMC,EAASC,iBAAO,MAEdnP,EAAapE,IAAMmE,WAAWpE,GAA9BqE,SAEF4L,EAAkB,SAACxE,EAAmBxK,GAE1CoD,EACE,CACE/D,KAAM,cACNC,QACA,CACES,KAAMyK,EACNxK,OAAQA,MAKViP,EAAoB,SAACzE,EAAmBlK,EAAkBC,EAAmBP,GAEjFoD,EACE,CACE/D,KAAM,qBACNC,QACA,CACES,KAAMyK,EACNlK,SAAUA,EACVC,UAAWA,EACXP,OAAQA,MAqHhB,OAhHAoK,qBACE,WAGEyG,sBAAY,CACV,WACA,qBACA,8BACA,yBACA,oBACA,6BACC,CAAE2B,KAAK,IACP1B,MAAK,YACL,IAAD,mBADQ2B,EACR,KADaC,EACb,KADsBC,EACtB,KADsCC,EACtC,KADiDC,EACjD,KADuDC,EACvD,KACQrV,EAAM,IAAIgV,EAAI,CAClBM,QAAS,8BAILhT,EAAO,IAAI2S,EAAQ,CACvBM,UAAWV,EAAOW,QAClBxV,IAAKA,EACLwL,OAAQ,EAAE,KAAO,OACjBC,KAAM,GACNgK,MAAM,GACL,CAAEA,MAAM,IAEX,IAAIP,EAAe,CACjB5S,KAAMA,EACNiT,UAAW1P,SAASC,eAAe,8BACnC4P,OAAQ,CACNC,OAAQ,CACN3O,IAAK,wBACL4O,mBAAmB,MAKzB,IAAIC,EAAmB,IAAIR,EAAc,CACvCrO,IAAK,mFACHwD,MAAO,kBAEXxK,EAAIwU,IAAIqB,GAER,IAAIC,EAAmB,IAAIT,EAAc,CACvCrO,IAAK,mFACHwD,MAAO,mBAEXxK,EAAIwU,IAAIsB,GAGR,IAAIX,EAAU,CACZ7S,KAAMA,EACNiT,UAAW1P,SAASC,eAAe,kCAGrC,IAAIiQ,EAAa,IAAIX,EAAK,CAAE9S,KAAMA,IA4ClC,OA3CAA,EAAK0T,GAAGxB,IAAIuB,EAAY,CAAEE,SAAU,aAIpC3T,EAAK4T,GAAG,SAAS,SAAC7P,GAEhB/D,EAAK6T,QAAQ9P,GAAOgN,MAAK,SAAU9L,GAEjC,IAAM6O,EAAW,CAAC,MAAO,KAAM,OAC/B,GAAI7O,EAAS8O,QAAQ9S,OACrB,CACE,IAAI+S,EAAU/O,EAAS8O,QAAQ7S,QAAO,SAAUkJ,GAG9C,OAAO0J,EAASjS,QAAQuI,EAAO4J,QAAQ9C,MAAM5Q,KAAO,KACnD,GAAG0T,QAGFhU,EAAOgU,EAAQC,WAAWjU,KAC1ByK,EAAYzK,EAAO,QACV,QAATA,GAEFiP,EAAgBxE,EAAW,CAAEzM,YAAagW,EAAQC,WAAW1T,SAAUpC,eAAgB,KACvF+Q,EAAkBzE,OAAW2E,EAAW4E,EAAQC,WAAW1T,SAAU,CAAEK,SAAS,MAIhFqO,EAAgBxE,EAAW,CAAEzM,YAAagW,EAAQC,WAAWzT,UAAWrC,eAAgB,KACxF+Q,EAAkBzE,EAAWuJ,EAAQC,WAAWzT,eAAW4O,EAAW,CAAExO,SAAS,KAEnFC,QAAQC,IAAIkT,EAAQC,mBAK1BjU,EAAKkU,MAAK,WAERrT,QAAQC,IAAI,qBACZuC,EAAS,CAAE/D,KAAM,WAAYC,QAAS7B,IACtC2F,EAAS,CAAE/D,KAAM,gBAAiBC,QAASS,OAItC,WAEDA,IAGFA,EAAKiT,UAAY,YAIxB,IAIH,yBAAKtP,UAAU,SAASwQ,IAAK5B,GAC3B,kBAAC,EAAD,CAAenC,YAAY,oBAAoBlI,MAAM,YAAYmI,EAAE,MAAMhC,EAAE,IAAIpM,EAAE,IAAIqO,UAAU,QAC/F,kBAAC,EAAD,CAAeF,YAAY,mBAAmBlI,MAAM,uBAAuBmI,EAAE,IAAIhC,EAAE,MAAMpM,EAAE,IAAIqO,UAAU,OACzG,kBAAC,EAAD,CAAeF,YAAY,oBAAoBlI,MAAM,YAAYmI,EAAE,IAAIhC,EAAE,IAAIpM,EAAE,MAAMqO,UAAU,UCtItF8D,E,iDAXNlJ,MAAgB,G,KAChB3D,MAAgB,G,mKAIF9C,EAAwB,4B,cAArCc,E,yBACCA,G,8CCAX,IA4De8O,EA5DO,WACrB,IAAD,EAC8BpV,IAAMmE,WAAWpE,GAArCI,EADV,EACUA,MAAOiE,EADjB,EACiBA,SAEIiR,EAAiB1K,EAAa9D,EAAQrB,IAAK,gBAAgB,GAAtE8E,UACWgL,EAAgB3K,EAAa8B,EAAkBjH,IAAK,eAAe,GAA9E8E,UACWiL,EAAiB5K,EAAa0C,EAAQ7H,IAAK,gBAAgB,GAAtE8E,UACW+F,EAAkB1F,EAAaoD,EAASvI,IAAK,iBAAiB,GAAzE8E,UAERtK,IAAMoL,WAAU,WAEdiF,IACAgF,IACAC,IACAC,IACAC,MACC,IC9BE,SAAqBC,EAAUC,GAEpC,IAAMC,EAAgBpC,iBAAO,MAG7BnI,qBAAU,WAERuK,EAAc1B,QAAUwB,IACvB,CAACA,IAGJrK,qBAAU,WAMR,GAAc,OAAVsK,EACJ,CACE,IAAIrU,EAAKuU,aANX,WAEED,EAAc1B,YAIayB,GAC3B,OAAO,kBAAMG,cAAcxU,OAE5B,CAACqU,IDUJI,EAAY,WAEVlU,QAAQC,IAAI,gCACZwO,IACAgF,IACAC,IACAC,IACAC,MACC,KAEH,IAAMA,EAAkB,0BAAAzS,EAAA2C,OAAA,kEAAA3C,EAAA,MAEHoS,EAAYY,iBAFT,cAEhBzP,EAFgB,yBAGflC,EAAS,CAAE/D,KAAM,uBAAwBC,QAASgG,KAHnC,sCAMxB,OACE,oCACE,kBAAC,EAAD,MAEA,yBAAK5B,UAAU,oCACb,yBACEK,MAAO,CAAEC,aAAc,GACvBN,UAAS,2BAA6C,QAAvBvE,EAAMvB,aAAyB,kFAAoF,SAC1H,QAAvBuB,EAAMvB,aAAyB,kBAAC,EAAD,MAAc,KACtB,SAAvBuB,EAAMvB,aAA0B,kBAAC,EAAD,MAAe,KACxB,OAAvBuB,EAAMvB,aAAwB,kBAAC,EAAD,MAAa,KACpB,QAAvBuB,EAAMvB,aAAyB,kBAAC,EAAD,MAAc,MAGhD,yBACEmG,MAAO,CAAEiR,YAAa,GACtBtR,UAAS,4BAA8C,QAAvBvE,EAAMvB,aAAyB,oCAAsC,KACrG,kBAAC,EAAD,UE5DVqX,IAASC,OACP,mB9B4vBK,SAAuBxO,GAC7B,IAAD,EAC4ByO,qBAAWjW,EAAS1B,GADhD,mBACS2B,EADT,KACgBiE,EADhB,KAEE,OAAQ,kBAACrE,EAAMqW,SAAP,CAAgB9N,MAAO,CAAEnI,QAAOiE,aAAasD,EAAM2O,Y8B/vB3D,KACE,kBAAC,EAAD,OACgB/R,SAASC,eAAe,W","file":"static/js/main.e8409ca1.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { IState, IAction, IDataView, IDataElementOptions } from './interfaces';\r\nimport AVLData from './AVL/AVLData';\r\nimport FleetCompleteData from './FleetComplete/FleetCompleteData';\r\nimport CADData from './Cad/CADData';\r\nimport UnitData from './Unit/UnitData';\r\n\r\nconst initialState: IState =\r\n{\r\n  map: null,\r\n  map_view: null,\r\n\r\n  unit_groups: [],\r\n  current_view: \"unit\",\r\n\r\n  avl_view:\r\n  {\r\n    e: {},\r\n    data_filter: \"\",\r\n    sort_field: \"device_id\",\r\n    sort_ascending: true,\r\n    special_filter: \"\"\r\n  },\r\n  fc_view:\r\n  {\r\n    e: {},\r\n    data_filter: \"\",\r\n    sort_field: \"device_id\",\r\n    sort_ascending: true,\r\n    special_filter: \"\"\r\n  },\r\n\r\n  cad_view:\r\n  {\r\n    e: {},\r\n    data_filter: \"\",\r\n    sort_field: \"unitcode\",\r\n    sort_ascending: true,\r\n    special_filter: \"\"\r\n  },\r\n  unit_view:\r\n  {\r\n    e: {},\r\n    data_filter: \"\",\r\n    sort_field: \"unitcode\",\r\n    sort_ascending: true,\r\n    special_filter: \"\"\r\n  },\r\n\r\n  avl_data: new Array<AVLData>(),\r\n  fc_data: new Array<FleetCompleteData>(),\r\n  cad_data: new Array<CADData>(),\r\n  unit_data: new Array<UnitData>(),\r\n\r\n  filtered_avl_data: new Array<AVLData>(),\r\n  filtered_fc_data: new Array<FleetCompleteData>(),\r\n  filtered_cad_data: new Array<CADData>(),\r\n  filtered_unit_data: new Array<UnitData>(),\r\n}\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nfunction reducer(state: IState, action: IAction): IState\r\n{\r\n  switch (action.type)\r\n  {\r\n\r\n    case \"save_map\":\r\n      return {\r\n        ...state,\r\n        map: action.payload\r\n      }\r\n\r\n    case \"save_map_view\":\r\n      return {\r\n        ...state,\r\n        map_view: action.payload\r\n      }\r\n\r\n    case \"get_unit_groups_data\":\r\n      return {\r\n        ...state,\r\n        unit_groups: action.payload\r\n      };\r\n\r\n    case \"set_current_view\":\r\n      return {\r\n        ...state,\r\n        current_view: action.payload\r\n      };\r\n\r\n    case \"view_by_device\":\r\n\r\n\r\n    case \"view_avl_by_unit\":\r\n      let tmp_avl_view = {\r\n        ...state.avl_view,\r\n        data_filter: action.payload,\r\n        special_filter: ''\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        current_view: 'avl',\r\n\r\n        filtered_avl_data:\r\n          process_avl(\r\n            state.avl_data,\r\n            tmp_avl_view),\r\n        avl_view: tmp_avl_view\r\n      }\r\n\r\n    case \"view_fc_by_unit\":\r\n      let tmp_fc_view = {\r\n        ...state.fc_view,\r\n        data_filter: action.payload,\r\n        special_filter: ''\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        current_view: 'fc',\r\n        filtered_fc_data:\r\n          process_fc(\r\n            state.fc_data,\r\n            tmp_fc_view),\r\n        fc_view: tmp_fc_view\r\n      }\r\n\r\n    case \"view_cad_by_unit\":\r\n      let tmp_cad_view = {\r\n        ...state.cad_view,\r\n        data_filter: action.payload,\r\n        special_filter: ''\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        current_view: 'cad',\r\n        filtered_cad_data:\r\n          process_cad(\r\n            state.cad_data, tmp_cad_view),\r\n        cad_view: tmp_cad_view\r\n      }\r\n\r\n    case \"get_avl_data\":\r\n      return {\r\n        ...state,\r\n        avl_data: action.payload,\r\n        filtered_avl_data:\r\n          process_avl(\r\n            action.payload,\r\n            state.avl_view)\r\n      };\r\n\r\n    case \"get_fc_data\":\r\n      return {\r\n        ...state,\r\n        fc_data: action.payload,\r\n        filtered_fc_data:\r\n          process_fc(\r\n            action.payload,\r\n            state.fc_view)\r\n      };\r\n\r\n    case \"get_cad_data\":\r\n      return {\r\n        ...state,\r\n        cad_data: action.payload,\r\n        filtered_cad_data:\r\n          process_cad(\r\n            action.payload,\r\n            state.cad_view)\r\n      };\r\n\r\n    case \"get_unit_data\":\r\n      return {\r\n        ...state,\r\n        unit_data: action.payload,\r\n        filtered_unit_data:\r\n          process_unit(\r\n            action.payload,\r\n            state.unit_view)\r\n      };\r\n\r\n    case \"update_view\":\r\n      let v = state[action.payload.view];\r\n      v = {\r\n        ...state[action.payload.view],\r\n        ...action.payload.option\r\n      }\r\n      return {\r\n        ...state,\r\n        [action.payload.view]: v,\r\n        ...filter_data(action.payload.view, v, state)\r\n      };\r\n\r\n    case \"update_view_device\":      \r\n      let new_view = action.payload.view.split(\"_\")[0];\r\n      let ve = state[action.payload.view].e;\r\n      let id = action.payload.unitcode ? action.payload.unitcode : action.payload.device_id;\r\n      if (!ve[id])\r\n      {\r\n        ve[id] = NewDataElementOptions();\r\n      }\r\n      ve[id] = {\r\n        ...ve[id],\r\n        ...action.payload.option\r\n      }\r\n      return {\r\n        ...state,\r\n        current_view: new_view,\r\n        [action.payload.view]: {\r\n          ...state[action.payload.view],\r\n          e: ve\r\n        }\r\n      }\r\n\r\n    //case \"search_avl_data\":\r\n    //  let tmp_avl_search_view = {\r\n    //    ...state.avl_view,\r\n    //    data_filter: action.payload\r\n    //  };\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_avl_data:\r\n    //      process_avl(\r\n    //        state.avl_data,\r\n    //        tmp_avl_search_view),\r\n    //    avl_view: tmp_avl_search_view\r\n    //  }\r\n\r\n    //case \"search_fc_data\":\r\n    //  let tmp_fc_search_view = {\r\n    //    ...state.fc_view,\r\n    //    data_filter: action.payload\r\n    //  };\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_fc_data:\r\n    //      process_fc(\r\n    //        state.fc_data,\r\n    //        tmp_fc_search_view),\r\n    //    fc_view: tmp_fc_search_view\r\n    //  }\r\n\r\n    //case \"search_cad_data\":\r\n    //  let tmp_cad_search_view = {\r\n    //    ...state.cad_view,\r\n    //    data_filter: action.payload\r\n    //  };\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_cad_data:\r\n    //      process_cad(\r\n    //        state.cad_data,\r\n    //        tmp_cad_search_view),\r\n    //    cad_view: tmp_cad_search_view\r\n    //  }\r\n\r\n    //case \"search_unit_data\":\r\n    //  let tmp_unit_search_view = {\r\n    //    ...state.unit_view,\r\n    //    data_filter: action.payload\r\n    //  };\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_unit_data:\r\n    //      process_unit(\r\n    //        state.unit_data,\r\n    //        tmp_unit_search_view),\r\n    //    unit_view: tmp_unit_search_view        \r\n    //  };\r\n\r\n      //return {\r\n      //  ...state,\r\n      //  filtered_unit_data:\r\n      //    process_unit(\r\n      //      state.unit_data,\r\n      //      action.payload,\r\n      //      state.unit_data_sort_field,\r\n      //      state.unit_data_sort_ascending,\r\n      //      state.unit_data_special_filter),\r\n      //  unit_data_filter: action.payload\r\n      //};\r\n\r\n    //case \"avl_device_history\":\r\n    //  let showAVLHistory = state.filtered_avl_data.map(a =>\r\n    //  {\r\n    //    if (a.device_id === action.payload.device_id)\r\n    //    {\r\n    //      a.device_history = action.payload.device_history;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_avl_data: showAVLHistory\r\n    //  };\r\n\r\n    //case \"fc_device_history\":\r\n    //  let showFCHistory = state.filtered_fc_data.map(a =>\r\n    //  {\r\n    //    if (a.device_id === action.payload.device_id)\r\n    //    {\r\n    //      a.device_history = action.payload.device_history;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_fc_data: showFCHistory\r\n    //  };\r\n\r\n    //case \"cad_device_history\":\r\n    //  let showCADHistory = state.filtered_cad_data.map(a =>\r\n    //  {\r\n    //    if (a.unitcode === action.payload.unitcode)\r\n    //    {\r\n    //      a.device_history = action.payload.device_history;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_cad_data: showCADHistory\r\n    //  };\r\n\r\n    //case \"avl_data_special_filter\":\r\n    //  let avl_view_special = {\r\n    //    ...state.avl_view,\r\n    //    special_filter: action.payload\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_avl_data: process_avl(state.avl_data, avl_view_special), avl_view: avl_view_special\r\n    //  };\r\n\r\n    //case \"fc_data_special_filter\":\r\n    //  let fc_view_special = {\r\n    //    ...state.fc_view,\r\n    //    special_filter: action.payload\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_fc_data: process_fc(state.fc_data, fc_view_special), fc_view: fc_view_special\r\n    //  };\r\n\r\n    //case \"cad_data_special_filter\":\r\n    //  let cad_view_special = {\r\n    //    ...state.cad_view,\r\n    //    special_filter: action.payload\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_cad_data: process_cad(state.cad_data, cad_view_special), cad_view: cad_view_special\r\n    //  };\r\n      //return {\r\n      //  ...state,\r\n      //  filtered_cad_data: process_cad(state.cad_data, state.cad_data_filter, state.cad_data_sort_field, state.cad_data_sort_ascending, action.payload),\r\n      //  cad_data_special_filter: action.payload\r\n      //};\r\n\r\n    //case \"unit_data_special_filter\":\r\n    //  let unit_view_special = {\r\n    //    ...state.unit_view,\r\n    //    special_filter: action.payload\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_unit_data: process_unit(state.unit_data, unit_view_special), unit_view: unit_view_special\r\n    //  };\r\n      //return {\r\n      //  ...state,\r\n      //  filtered_unit_data: process_cad(state.unit_data, state.unit_data_filter, state.unit_data_sort_field, state.unit_data_sort_ascending, action.payload),\r\n      //  unit_data_special_filter: action.payload\r\n      //};\r\n\r\n    //case \"avl_data_sort\":\r\n    //  let avl_sort_view = {\r\n    //    ...state.avl_view,\r\n    //    sort_field: action.payload,\r\n    //    sort_ascending: !state.avl_view.sort_ascending\r\n    //  }\r\n    //  let avl_filtered = sort(state.filtered_avl_data, avl_sort_view);\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_avl_data: avl_filtered,\r\n    //    avl_view: avl_sort_view\r\n    //  };\r\n\r\n    //case \"fc_data_sort\":\r\n    //  let fc_sort_view = {\r\n    //    ...state.fc_view,\r\n    //    sort_field: action.payload,\r\n    //    sort_ascending: !state.fc_view.sort_ascending\r\n    //  }\r\n    //  let fc_filtered = sort(state.filtered_fc_data, fc_sort_view);\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_fc_data: fc_filtered,\r\n    //    fc_view: fc_sort_view\r\n    //  };\r\n      //let filterFC = sort(state.filtered_fc_data, action.payload, !state.fc_data_sort_ascending);\r\n      //return {\r\n      //  ...state,\r\n      //  filtered_fc_data: filterFC,\r\n      //  fc_data_sort_field: action.payload,\r\n      //  fc_data_sort_ascending: !state.fc_data_sort_ascending\r\n      //};\r\n\r\n    //case \"cad_data_sort\":\r\n    //  let cad_sort_view = {\r\n    //    ...state.cad_view,\r\n    //    sort_field: action.payload,\r\n    //    sort_ascending: !state.cad_view.sort_ascending\r\n    //  }\r\n    //  let cad_filtered = sort(state.filtered_cad_data, cad_sort_view);\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_cad_data: cad_filtered,\r\n    //    cad_view: cad_sort_view\r\n    //  };\r\n\r\n\r\n    //case \"unit_data_sort\":\r\n    //  let unit_sort_view = {\r\n    //    ...state.unit_view,\r\n    //    sort_field: action.payload,\r\n    //    sort_ascending: !state.unit_view.sort_ascending\r\n    //  }\r\n    //  let unit_filtered = sort(state.filtered_unit_data, unit_sort_view);\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_unit_data: unit_filtered,\r\n    //    unit_view: unit_sort_view\r\n    //  };\r\n\r\n    //case \"avl_data_toggle_show_errors\":\r\n    //  let showAVLError = state.filtered_avl_data.map(a =>\r\n    //  {\r\n    //    if (a.device_id === action.payload)\r\n    //    {\r\n    //      a.show_errors = !a.show_errors;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_avl_data: showAVLError\r\n    //  };\r\n\r\n    //case \"fc_data_toggle_show_errors\":\r\n    //  let showFCError = state.filtered_fc_data.map(a =>\r\n    //  {\r\n    //    if (a.device_id === action.payload)\r\n    //    {\r\n    //      a.show_errors = !a.show_errors;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_fc_data: showFCError\r\n    //  };\r\n\r\n    //case \"cad_data_toggle_show_errors\":\r\n    //  let showCADError = state.filtered_cad_data.map(a =>\r\n    //  {\r\n    //    if (a.unitcode === action.payload)\r\n    //    {\r\n    //      a.show_errors = !a.show_errors;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_cad_data: showCADError\r\n    //  };\r\n\r\n    //case \"unit_data_toggle_show_errors\":\r\n    //  let showUnitError = state.filtered_unit_data.map(a =>\r\n    //  {\r\n    //    if (a.unitcode === action.payload)\r\n    //    {\r\n    //      a.show_errors = !a.show_errors;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_unit_data: showUnitError\r\n    //  };\r\n\r\n    //case \"avl_data_toggle_show_unit_options\":\r\n    //  let showAVLUO = state.filtered_avl_data.map(a =>\r\n    //  {\r\n    //    if (a.device_id === action.payload)\r\n    //    {\r\n    //      a.show_unit_options = !a.show_unit_options;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_avl_data: showAVLUO\r\n    //  };\r\n\r\n    //case \"fc_data_toggle_show_unit_options\":\r\n    //  let showFCUO = state.filtered_fc_data.map(a =>\r\n    //  {\r\n    //    if (a.device_id === action.payload)\r\n    //    {\r\n    //      a.show_unit_options = !a.show_unit_options;\r\n    //    }\r\n    //    return a;\r\n    //  });\r\n\r\n    //  return {\r\n    //    ...state,\r\n    //    filtered_fc_data: showFCUO\r\n    //  };\r\n\r\n    //case \"update_avl_view_device\":\r\n    //  let avle = state.avl_view.e;\r\n    //  let avl_unitcode = action.payload.unitcode;\r\n    //  if (!avle[avl_unitcode])\r\n    //  {\r\n    //    avle[avl_unitcode] = NewDataElementOptions();\r\n    //  }\r\n    //  avle[avl_unitcode] = {\r\n    //    ...avle[avl_unitcode],\r\n    //    ...action.payload.view\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    avl_view: {\r\n    //      ...state.avl_view,\r\n    //      e: avle\r\n    //    }\r\n    //  }\r\n\r\n\r\n\r\n\r\n    //case \"update_unit_view\":\r\n    //  let uv = state.unit_view;\r\n    //  uv = {\r\n    //    ...state.unit_view,\r\n    //    ...action.payload\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    unit_view: uv\r\n    //  };\r\n\r\n    //case \"update_unit_view_unit\":\r\n    //  let uve = state.unit_view.e;\r\n    //  let unitcode = action.payload.unitcode;\r\n    //  if (!uve[unitcode])\r\n    //  {\r\n    //    uve[unitcode] = NewDataElementOptions();\r\n    //  }\r\n    //  uve[unitcode] = {\r\n    //    ...uve[unitcode],\r\n    //    ...action.payload.view\r\n    //  }\r\n    //  return {\r\n    //    ...state,\r\n    //    unit_view: {\r\n    //      ...state.unit_view,\r\n    //      e: uve\r\n    //    }\r\n    //  }\r\n\r\n\r\n\r\n    default:\r\n      console.log('action type not found, returning current state', action.type);\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction filter_data(view: string, new_view: IDataView, state: IState): {}\r\n{\r\n  switch (view)\r\n  {\r\n    case 'unit_view':\r\n      return { filtered_unit_data: process_unit(state.unit_data, new_view) };\r\n      \r\n    case 'cad_view':\r\n      return { filtered_cad_data: process_cad(state.cad_data, new_view) };\r\n\r\n    case 'avl_view':\r\n      return { filtered_avl_data: process_avl(state.avl_data, new_view) };      \r\n\r\n    case 'fc_view':\r\n      return { filtered_fc_data: process_fc(state.fc_data, new_view) };      \r\n\r\n    default:\r\n      return {};      \r\n  }\r\n}\r\n\r\nfunction filter_avl(arrayToFilter:Array<AVLData>, filterUsing:string): Array<AVLData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1 || j.device_id.toLowerCase().indexOf(s) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_fc(arrayToFilter: Array<FleetCompleteData>, filterUsing: string): Array<FleetCompleteData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1 || j.device_id.toLowerCase().indexOf(s) > -1 || j.asset_tag.toLowerCase().indexOf(s) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_cad(arrayToFilter: Array<CADData>, filterUsing: string): Array<CADData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_unit(arrayToFilter: Array<UnitData>, filterUsing: string): Array<UnitData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1 || j.group_label.toLowerCase().indexOf(s) > -1 || j.using_unit.toLowerCase().indexOf(f) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction special_filter(array: Array<any>, specialFilter: string): Array<any>\r\n{\r\n  if (specialFilter.length === 0) return array;\r\n  switch (specialFilter)\r\n  {\r\n    case \"error\":\r\n      let filtered = array.filter(d => d.error_information.length > 0);\r\n      return filtered;\r\n\r\n    case \"asset_tag\":\r\n      return array.filter(d => d.has_asset_tag_error);\r\n\r\n    case \"date\":\r\n      return array.filter(d => d.has_date_error);\r\n\r\n    case \"location\":\r\n      return array.filter(d => d.has_location_error);\r\n\r\n    case \"unit\":\r\n      return array.filter(d => d.has_unit_error);\r\n\r\n    case \"cad\":\r\n      return array.filter(d => d.has_cad_error);\r\n\r\n    case \"avl\":\r\n      return array.filter(d => d.has_avl_error);\r\n\r\n    case \"fc\":\r\n      return array.filter(d => d.has_fc_error);\r\n\r\n    default:\r\n      return array;\r\n  }  \r\n}\r\n\r\nfunction sort(array: Array<any>, view:IDataView) : Array<any>\r\n{\r\n  const date_fields = ['updated_on', 'location_timestamp'];\r\n  if (date_fields.indexOf(view.sort_field) > -1) return sort_dates(array, view.sort_field, view.sort_ascending);\r\n  let sorted = array.sort((a, b) =>\r\n  {\r\n    if (a[view.sort_field] > b[view.sort_field]) return view.sort_ascending ? 1 : -1;\r\n    if (b[view.sort_field] > a[view.sort_field]) return view.sort_ascending ? -1 : 1;\r\n    return 0;\r\n  });\r\n  return sorted;\r\n}\r\n\r\nfunction sort_dates(array: Array<any>, field: string, ascending: boolean): Array<any>\r\n{\r\n  let sorted = array.sort((a, b) =>\r\n  {\r\n    if (new Date(a[field]) > new Date(b[field])) return ascending ? 1 : -1;\r\n    if (new Date(b[field]) > new Date(a[field])) return ascending ? -1 : 1;\r\n    return 0;\r\n  });\r\n  return sorted;\r\n}\r\n\r\nfunction process_avl(array: Array<any>, view: IDataView): Array<AVLData>\r\n{\r\n  let filtered = filter_avl(array, view.data_filter);\r\n  let special_filtered = special_filter(filtered, view.special_filter);\r\n  return sort(special_filtered, view);\r\n}\r\n\r\nfunction process_fc(array: Array<any>, view: IDataView): Array<FleetCompleteData>\r\n{\r\n  let filtered = filter_fc(array, view.data_filter);\r\n  let special_filtered = special_filter(filtered, view.special_filter);\r\n  return sort(special_filtered, view);\r\n}\r\n\r\nfunction process_cad(array: Array<any>, view: IDataView): Array<CADData>\r\n{\r\n  let filtered = filter_cad(array, view.data_filter);\r\n  let special_filtered = special_filter(filtered, view.special_filter);\r\n  return sort(special_filtered, view);\r\n}\r\n\r\nfunction process_unit(array: Array<any>, view: IDataView): Array<UnitData>\r\n{\r\n  let filtered = filter_unit(array, view.data_filter);\r\n  let special_filtered = special_filter(filtered, view.special_filter);\r\n  return sort(special_filtered, view);\r\n}\r\n\r\nexport function StoreProvider(props: any): JSX.Element\r\n{\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (<Store.Provider value={{ state, dispatch }}>{props.children}</Store.Provider>);\r\n}\r\n\r\nfunction NewDataElementOptions(): IDataElementOptions\r\n{\r\n  return {\r\n    options: false,\r\n    errors: false,\r\n    history: [],\r\n    details: false\r\n  }\r\n}","import React from 'react';\nimport { Store } from './Store';\n\nconst Nav = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  const closeBaseMapDropdown = () =>\r\n  {\r\n    let e = document.getElementById(\"nav_basemap_dropdown\");\r\n    if (e === null) return;\r\n    e.classList.remove(\"is-active\");\r\n  }\n\n  return (\n    <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <h1 className=\"navbar-item is-size-3 has-text-weight-bold\">Vehicle Control</h1>\r\n      </div>\r\n      <div className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <p            \r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"unit\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"unit\" ? 'is-active' : ''} `}>\r\n            Units\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"avl\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"avl\" ? 'is-active' : ''} `}>\r\n            AVL\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"fc\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"fc\" ? 'is-active' : ''} `}>\r\n            Fleet Complete\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"cad\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"cad\" ? 'is-active' : ''} `}>\r\n            CAD\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"map\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"map\" ? 'is-active' : ''} `}>\r\n            Map            \r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          style={{paddingRight: \"4em\"}}\r\n          className=\"navbar-end\">\r\n          <div\r\n            id=\"nav_basemap_dropdown\"\r\n            className=\"navbar-item has-dropdown\">\r\n            <a className=\"navbar-link\"\r\n              onClick={event =>\r\n              {\r\n                let e = document.getElementById(\"nav_basemap_dropdown\");\r\n                if (e === null) return;\r\n                let isActive = e.classList.contains(\"is-active\");\r\n                let basemaps = document.querySelectorAll(\".esri-basemap-gallery__item\");\r\n                basemaps.forEach(b =>\r\n                {\r\n                  if (!isActive)\r\n                  {\r\n                    b.addEventListener(\"click\", closeBaseMapDropdown);\r\n                  }\r\n                  else\r\n                  {\r\n                    b.removeEventListener(\"click\", closeBaseMapDropdown);\r\n                  }\r\n                });\r\n                e.classList.toggle(\"is-active\");\r\n              }}\r\n            >\r\n              Select Base Map\r\n            </a>\r\n            <div id=\"basemap-navbar-dropdown\"\r\n              className=\"navbar-dropdown\">\r\n              <div\r\n                className=\"navbar-item\">\r\n                <div id=\"basemap_selector_container\"></div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"nav_layerlist_dropdown\"\r\n            className=\"navbar-item has-dropdown\">\r\n            <a className=\"navbar-link\"\r\n              onClick={event =>\r\n              {\r\n                let e = document.getElementById(\"nav_layerlist_dropdown\");\r\n                if (e === null) return;\r\n                //let isActive = e.classList.contains(\"is-active\");\r\n                e.classList.toggle(\"is-active\");\r\n              }}\r\n            >\r\n              View Layers\r\n            </a>\r\n            <div className=\"navbar-dropdown\">\r\n              <div\r\n                className=\"navbar-item\">\r\n                <div id=\"layerlist_selector_container\"></div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <p className=\"navbar-item\"></p>\r\n        </div>\r\n      </div>\r\n    </nav>\n  );\n}\n\nexport default Nav;\n","//namespace Utilities\r\n//{\r\n  const app_path = \"/vehiclecontrol\";\r\n\r\n  export function Hide(e: string): void\r\n  export function Hide(e: HTMLElement): void\r\n  export function Hide(e: Element): void\r\n  export function Hide(e: any):void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show(e: string): void\r\n  export function Show(e: HTMLElement): void\r\n  export function Show(e: Element): void\r\n  export function Show(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline(e: string): void\r\n  export function Show_Inline(e: HTMLElement): void\r\n  export function Show_Inline(e: Element): void\r\n  export function Show_Inline(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline_Flex(e: string): void\r\n  export function Show_Inline_Flex(e: HTMLElement): void\r\n  export function Show_Inline_Flex(e: Element): void\r\n  export function Show_Inline_Flex(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Flex(e: string): void\r\n  export function Show_Flex(e: HTMLElement): void\r\n  export function Show_Flex(e: Element): void\r\n  export function Show_Flex(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show\");\r\n  }\r\n\r\n  export function Error_Show(e: string, errorText?: Array<string>, timeout?: boolean): void\r\n  export function Error_Show(e: string, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: HTMLElement, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: Element, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: any, errorText?: any, timeout?: boolean): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    if (errorText)\r\n    {\r\n      //Set_Text(e, errorText);\r\n      Clear_Element(e);\r\n      let notification = document.createElement(\"div\");\r\n      notification.classList.add(\"notification\");\r\n      notification.classList.add(\"is-danger\");\r\n      let deleteButton = document.createElement(\"button\");\r\n      deleteButton.classList.add(\"delete\");\r\n      deleteButton.onclick = () =>\r\n      {\r\n        Hide(e);\r\n      }\r\n      notification.appendChild(deleteButton);\r\n      if (Array.isArray(errorText))\r\n      {\r\n        // we're assuming that errorText is an array if we get here.\r\n        let ul = document.createElement(\"ul\");\r\n        errorText.forEach((et) =>\r\n        {\r\n          let li = document.createElement(\"li\");\r\n          li.appendChild(document.createTextNode(<string>et));\r\n          ul.appendChild(li);\r\n        });\r\n        notification.appendChild(ul);\r\n      } else\r\n      {\r\n        notification.appendChild(document.createTextNode(errorText));\r\n\r\n      }\r\n\r\n      (<HTMLElement>e).appendChild(notification);\r\n\r\n    }\r\n    Show(e);\r\n    if (timeout === undefined || timeout === true)\r\n    {\r\n      window.setTimeout(function (j)\r\n      {\r\n        Hide(e);\r\n      }, 30000)\r\n    }\r\n  }\r\n\r\n  export function Simple_Error_Show(e: Element, errorText: string): void\r\n  {\r\n    Clear_Element(<HTMLElement>e);\r\n    e.appendChild(document.createTextNode(errorText));\r\n  }\r\n\r\n  export function Clear_Element(node: HTMLElement): void\r\n  { // this function just emptys an element of all its child nodes.\r\n    if (node === null || node === undefined) return;\r\n    while (node.firstChild)\r\n    {\r\n      node.removeChild(node.firstChild);\r\n    }\r\n  }\r\n\r\n  export function Create_Option(value: string, label: string, selected: boolean = false): HTMLOptionElement\r\n  {\r\n    let o = document.createElement(\"option\");\r\n    o.value = value;\r\n    o.text = label;\r\n    o.selected = selected;\r\n    return o;\r\n  }\r\n\r\n  export function Get_Value(e: string): string\r\n  export function Get_Value(e: HTMLSelectElement): string\r\n  export function Get_Value(e: HTMLInputElement): string\r\n  export function Get_Value(e: any): string\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    return (<HTMLInputElement>e).value;\r\n  }\r\n\r\n  export function Set_Value(e: string, value: string): void\r\n  export function Set_Value(e: HTMLSelectElement, value: string): void\r\n  export function Set_Value(e: HTMLInputElement, value: string): void\r\n  export function Set_Value(e: any, value: string): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    (<HTMLInputElement>e).value = value;\r\n  }\r\n\r\n  export function Set_Text(e: string, value: string): void\r\n  export function Set_Text(e: HTMLElement, value: string): void\r\n  export function Set_Text(e: any, value: string): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    Clear_Element(e);\r\n    (<HTMLElement>e).appendChild(document.createTextNode(value));\r\n  }\r\n\r\n  //export function Show_Menu(elementId: string)\r\n  //{\r\n  //  //let element = e.srcElement;\r\n  //  // we expect the element's id to be in a \"nav-XXX\" name format, where \r\n  //  // XXX is the element we want to show \r\n  //  let id = elementId.replace(\"nav-\", \"\");\r\n  //  let menuItems = <NodeListOf<HTMLElement>>document.querySelectorAll(\"#menuTabs > li > a\");\r\n  //  if (menuItems.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < menuItems.length; i++)\r\n  //    {\r\n  //      let item = menuItems.item(i);\r\n  //      if (item.id === elementId)\r\n  //      {\r\n  //        item.parentElement.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.parentElement.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //  Show_Hide_Selector(\"#views > section\", id);\r\n  //}\r\n\r\n  //export function Handle_Tabs(tabSelector: string, containerSelector: string, id: string)\r\n  //{\r\n  //  Activate_Inactivate_Selector(tabSelector, \"nav-\" + id);\r\n  //  Show_Hide_Selector(containerSelector, id);\r\n  //}\r\n\r\n  //export function Activate_Inactivate_Selector(selector: string, id: string)\r\n  //{\r\n  //  let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n  //  if (sections.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < sections.length; i++)\r\n  //    {\r\n  //      let item = sections.item(i);\r\n  //      if (item.id === id)\r\n  //      {\r\n  //        item.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //}\r\n\r\n  export function Show_Hide_Selector(selector: string, id: string)\r\n  {\r\n    let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n    if (sections.length > 0)\r\n    {\r\n      for (let i = 0; i < sections.length; i++)\r\n      {\r\n        let item = sections.item(i);\r\n        if (item.id === id)\r\n        {\r\n          Show(item);\r\n        }\r\n        else\r\n        {\r\n          Hide(item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // original Get Function\r\n  //export function Get<T>(url: string): Promise<T>\r\n  //{\r\n  //  return fetch(url,\r\n  //    {\r\n  //      method: \"GET\",\r\n  //      headers: {\r\n  //        \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n  //      },\r\n  //      cache: \"no-cache\",\r\n  //      credentials: \"include\"\r\n  //    }\r\n  //  )\r\n  //    .then(response =>\r\n  //    {\r\n  //      if (!response.ok)\r\n  //      {\r\n  //        throw new Error(response.statusText)\r\n  //      }\r\n  //      return response.json();\r\n  //    });\r\n  //}\r\n\r\n  export function Get_Path(app_name: string = \"\"): string\r\n  {\r\n    if (app_name.length === 0) app_name = app_path;\r\n    \r\n    let path = \"/\";\r\n    let i = window.location.pathname.toLowerCase().indexOf(app_name);\r\n    if (i === 0)\r\n    {\r\n      path = app_name + \"/\";\r\n    }\r\n    console.log('using app path ' + app_path, ' returning: ' + path);\r\n    return path;\r\n  }\r\n\r\n  export async function Get_Empty(url: string): Promise<string>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.text();\r\n  }\r\n\r\n  export async function Get<T>(url: string): Promise<T>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.json();\r\n  }\r\n\r\n  export async function Post<T>(url: string, data: object): Promise<T>\r\n  {\r\n    const response = await fetch(Get_Path() + url,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText)\r\n    }\r\n    return response.json();\r\n\r\n  }\r\n\r\n  export async function Post_Empty(url: string, data: object): Promise<Response>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"POST\",\r\n        body: data !== null ? JSON.stringify(data) : \"\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    return response;\r\n  }\r\n\r\n  export function Format_Amount(amount: number): string\r\n  {\r\n    return amount.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n  }\r\n\r\n  export function Format_Date(date: Date): string\r\n  export function Format_Date(date: string): string\r\n  export function Format_Date(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleDateString('en-us');\r\n    }\r\n    var d = new Date(date);\r\n    return d.toLocaleDateString('en-US');\r\n  }\r\n\r\n  export function Format_DateTime(date: Date): string\r\n  export function Format_DateTime(date: string): string\r\n  export function Format_DateTime(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleString('en-us');\r\n    }\r\n    return new Date(date).toLocaleString('en-US');\r\n  }\r\n\r\n  export function Validate_Text(e: string, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLInputElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLSelectElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: any, errorElementId: string, errorText: string): string\r\n  {\r\n    // this should only be used for required elements.\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let ele = (<HTMLInputElement>e);\r\n    ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.remove(\"is-danger\") : ele.classList.remove(\"is-danger\");\r\n    let v = Get_Value(ele).trim();\r\n    if (v.length === 0)\r\n    {\r\n      ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.add(\"is-danger\") : ele.classList.add(\"is-danger\");\r\n      Error_Show(errorElementId, errorText);\r\n      ele.focus();\r\n      ele.scrollTo();\r\n      return \"\";\r\n    }\r\n    return v;\r\n\r\n  }\r\n\r\n  export function Toggle_Loading_Button(e: string, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: HTMLButtonElement, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: any, disabled: boolean)\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let b = <HTMLButtonElement>e;\r\n    b.disabled = disabled;\r\n    b.classList.toggle(\"is-loading\", disabled);\r\n  }\r\n\r\n  //export function Create_Menu_Element(menuItem: MenuItem): HTMLLIElement\r\n  //{\r\n  //  let li = document.createElement(\"li\");\r\n  //  if (menuItem.selected) li.classList.add(\"is-active\");\r\n\r\n\r\n  //  let a = document.createElement(\"a\");\r\n  //  a.id = menuItem.id;\r\n  //  a.onclick = function ()\r\n  //  {\r\n  //    Update_Menu(menuItem);\r\n  //  }\r\n  //  if (menuItem.icon.length > 0)\r\n  //  {\r\n  //    let span = document.createElement(\"span\");\r\n  //    span.classList.add(\"icon\");\r\n  //    span.classList.add(Transaction.app_input_size);\r\n  //    let i = document.createElement(\"i\");\r\n  //    let icons = menuItem.icon.split(\" \");\r\n  //    for (let icon of icons)\r\n  //    {\r\n  //      i.classList.add(icon);\r\n  //    }\r\n  //    span.appendChild(i);\r\n  //    a.appendChild(span);\r\n  //  }\r\n  //  a.appendChild(document.createTextNode(menuItem.label))\r\n  //  li.appendChild(a);\r\n  //  return li;\r\n  //}\r\n\r\n  //export function Update_Menu(menuItem: MenuItem): void\r\n  //{\r\n  //  Set_Text(\"menuTitle\", menuItem.title);\r\n  //  Set_Text(\"menuSubTitle\", menuItem.subTitle);\r\n  //  Show_Menu(menuItem.id);\r\n  //  document.getElementById(menuItem.autofocusId).focus();\r\n  //}\r\n\r\n  //export function Build_Menu_Elements(target: string, Menus: Array<MenuItem>): void\r\n  //{\r\n  //  let menu = document.getElementById(target);\r\n  //  for (let menuItem of Menus)\r\n  //  {\r\n  //    menu.appendChild(Utilities.Create_Menu_Element(menuItem));\r\n  //  }\r\n  //}\r\n\r\n\r\n  //export function CheckBrowser()\r\n  //{\r\n  //  let browser: string = \"\";\r\n  //  if ((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1) \r\n  //  {\r\n  //    browser = 'Opera';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Chrome\") != -1)\r\n  //  {\r\n  //    browser = 'Chrome';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Safari\") != -1)\r\n  //  {\r\n  //    browser = 'Safari';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Firefox\") != -1) \r\n  //  {\r\n  //    browser = 'Firefox';\r\n  //  }\r\n  //  else if ((navigator.userAgent.indexOf(\"MSIE\") != -1) || (!!document.DOCUMENT_NODE == true)) //IF IE > 10\r\n  //  {\r\n  //    browser = 'IE';\r\n  //  }\r\n  //  else \r\n  //  {\r\n  //    browser = 'unknown';\r\n  //  }\r\n  //  return browser;\r\n  //}\r\n\r\n  \r\n\r\n  //export function Create_Centered_Level(level_items: Array<LevelItem>, left: Array<LevelItem> = [], right: Array<LevelItem> = []): HTMLElement\r\n  //{\r\n  //  let level = document.createElement(\"div\");\r\n  //  level.classList.add(\"level\");\r\n\r\n  //  for (let li of level_items)\r\n  //  {\r\n  //    level.appendChild(Create_Level_Item(li));\r\n  //  }\r\n  //  if (left.length > 0)\r\n  //  {\r\n  //    let leftcontainer = document.createElement(\"div\");\r\n  //    leftcontainer.classList.add(\"level-left\");\r\n  //    level.appendChild(leftcontainer);\r\n\r\n  //    for (let li of left)\r\n  //    {\r\n  //      leftcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n  //  if (right.length > 0)\r\n  //  {\r\n  //    let rightcontainer = document.createElement(\"div\");\r\n  //    rightcontainer.classList.add(\"level-right\");\r\n  //    level.appendChild(rightcontainer);\r\n\r\n  //    for (let li of right)\r\n  //    {\r\n  //      rightcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n\r\n  //  return level;\r\n  //}\r\n\r\n  //function Create_Level_Item(level_item: LevelItem): HTMLElement\r\n  //{\r\n  //  let levelitem = document.createElement(\"div\");\r\n  //  levelitem.classList.add(\"level-item\", ...level_item.classes);\r\n  //  let container = document.createElement(\"div\");\r\n  //  levelitem.appendChild(container);\r\n  //  if (level_item.heading.length > 0)\r\n  //  {\r\n  //    let heading = document.createElement(\"p\");\r\n  //    heading.classList.add(\"heading\");\r\n  //    heading.appendChild(document.createTextNode(level_item.heading));\r\n  //    container.appendChild(heading);\r\n  //  }\r\n  //  if (level_item.title_text.length > 0)\r\n  //  {\r\n  //    let title = document.createElement(\"p\");\r\n  //    title.classList.add(\"title\");\r\n  //    title.appendChild(document.createTextNode(level_item.title_text));\r\n  //    container.appendChild(title);\r\n  //  }\r\n  //  else\r\n  //  {\r\n  //    if (level_item.title !== null)\r\n  //    {\r\n  //      container.appendChild(level_item.title);\r\n  //    }\r\n  //  }\r\n  //  return levelitem;\r\n  //}\r\n\r\n  export function CreateTableCell(celltype: string, value: string, class_to_add: string, width: string = \"\", col_span: number = -1): HTMLTableCellElement\r\n  {\r\n    if (celltype !== \"td\" && celltype !== \"th\") celltype = \"td\";\r\n    let cell = <HTMLTableCellElement>document.createElement(celltype);\r\n    if (width.length > 0) cell.style.width = width;\r\n    if (value.length > 0) cell.appendChild(document.createTextNode(value));\r\n    if (class_to_add.length > 0) cell.classList.add(class_to_add);\r\n    if (col_span > -1) cell.colSpan = col_span;\r\n    return cell;\r\n  }\r\n\r\n//}\r\n\r\n//export default Utilities;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IAVLData\r\n{\r\n  device_id: string;\r\n  device_type: string;\r\n  unitcode: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  satellite_count: number;\r\n  velocity: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class AVLData implements IAVLData\r\n{\r\n  public device_id: string = \"\";\r\n  public device_type: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public satellite_count: number = 0;\r\n  public velocity: number = 0;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n  \r\n  public static async Get(): Promise<Array<AVLData>>\r\n  {\r\n    const data = await Get<Array<AVLData>>('API/AVL/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(device_id: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/AVL/Delete?device_id=\" + device_id, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(device_id: string, device_type: string, unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/AVL/Update?device_id=${device_id}&device_type=${device_type}&unitcode=${unitcode}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default AVLData;","import React from 'react';\r\nimport { IErrorInformation } from './interfaces';\r\n\r\nconst ErrorInformation = (props: IErrorInformation) =>\r\n{\r\n  if (!props.show_errors) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      </td>\r\n      <td colSpan={props.colspan - 1}>\r\n        <ul>\r\n          {props.error_information.map(\r\n            (errorText, index) =>\r\n            {\r\n              return (\r\n                <li key={index}>\r\n                  {errorText}\r\n                </li>\r\n              )\r\n            })}\r\n        </ul>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ErrorInformation;","import React, { useState } from 'react';\r\nimport { IUnitOptions } from './interfaces';\r\n//import AVLData from './AVLData';\r\n//import { Store } from './Store';\r\n\r\nconst UnitOptions = (props: IUnitOptions) =>\r\n{\r\n  const [currentUnit, setCurrentUnit] = useState(\"\");\r\n\r\n  if (!props.show_unit_options) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      </td>\r\n      <td colSpan={2}\r\n        className=\"has-text-right\">\r\n        Current Unit:\r\n      </td>\r\n      <td>\r\n        {props.unitcode.length === 0 ? 'None' : props.unitcode}\r\n      </td>\r\n      <td className=\"has-text-right\">\r\n        Change To:\r\n      </td>\r\n      <td colSpan={2}>\r\n        <div className=\"field has-addons\">\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input is-small\"\r\n              type=\"text\"\r\n              onChange={event => setCurrentUnit(event.target.value)}\r\n              value={currentUnit}\r\n              placeholder=\"New Unit\" />\r\n          </div>\r\n          <div className=\"control\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={async event =>\r\n              {\r\n                event.preventDefault();\r\n                console.log('props asset_tag', props.asset_tag);\r\n                if (props.asset_tag)\r\n                {\r\n                  props.update_data(props.asset_tag, currentUnit.trim());\r\n                }\r\n                else\r\n                {\r\n                  props.update_data(props.device_id, props.device_type, currentUnit.trim());\r\n                }\r\n              }}\r\n              className=\"button is-success is-small\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UnitOptions;","import { Get } from './Utilities';\r\n\r\ninterface IUnitHistory\r\n{\r\n  id: number;\r\n  unitcode: string;\r\n  field: string;\r\n  changed_from: string;\r\n  changed_to: string;\r\n  changed_on: Date;\r\n  changed_by: string;\r\n  error_message: string;\r\n}\r\n\r\nexport class UnitHistory implements IUnitHistory\r\n{\r\n  public id: number = -1;\r\n  public unitcode: string = \"\";\r\n  public field: string = \"\";\r\n  public changed_from: string = \"\";\r\n  public changed_to: string = \"\";\r\n  public changed_on: Date = new Date();\r\n  public changed_by: string = \"\";\r\n  public error_message: string = \"\";\r\n\r\n  public static async GetByUnit(unitcode: string): Promise<Array<UnitHistory>>\r\n  {\r\n    const data = await Get<Array<UnitHistory>>('API/History/Unit?unit=' + unitcode);\r\n    return data;\r\n  }\r\n\r\n  public static async GetByDeviceId(device_id: string): Promise<Array<UnitHistory>>\r\n  {\r\n    const data = await Get<Array<UnitHistory>>('API/History/DeviceId?deviceId=' + device_id);\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default UnitHistory;","import React from 'react';\r\nimport { IUnitHistoryList } from './interfaces';\r\n//import UnitHistory from './UnitHistory';\r\nimport { Format_DateTime } from './Utilities';\r\n\r\nconst UnitHistoryList = (props: IUnitHistoryList) =>\r\n{\r\n  if (!props.history || props.history.length === 0) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        \r\n      </td>\r\n      <td colSpan={props.colspan - 1}>\r\n        <table className=\"table is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                className=\"has-text-centered\"\r\n                colSpan={props.colspan}>\r\n                {props.title}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Unitcode\r\n              </th>\r\n              <th>\r\n                Field\r\n              </th>\r\n              <th>\r\n                Changed From\r\n              </th>\r\n              <th>\r\n                Changed To\r\n              </th>\r\n              <th>\r\n                Changed On\r\n              </th>\r\n              <th>\r\n                Changed By\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.history.map(\r\n              (h) =>\r\n              {\r\n                if (h.error_message.length > 0)\r\n                {\r\n                  return (\r\n                    <tr key={h.id}>\r\n                      <td colSpan={6}>{h.error_message}</td>\r\n                    </tr>\r\n                  )\r\n                }\r\n                else\r\n                {\r\n                  return (\r\n                    <tr key={h.id}>\r\n                      <td>\r\n                        {h.unitcode}\r\n                      </td>\r\n                      <td>\r\n                        {h.field}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_from}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_to}\r\n                      </td>\r\n                      <td>\r\n                        {Format_DateTime(h.changed_on)}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_by}\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UnitHistoryList;","import React from 'react';\r\nimport { Format_DateTime } from './Utilities';\r\n//import { IErrorInformation } from './interfaces';\r\n\r\nconst DeviceDetails = (props: any) =>\r\n{\r\n    \r\n  if (!props.show_details) return null;\r\n  \r\n  const valid_keys = [\r\n    'device_id',\r\n    'device_type',\r\n    'updated_on',\r\n    'location_timestamp',\r\n    'longitude',\r\n    'latitude',\r\n    'direction',\r\n    'satellite_count',\r\n    'unitcode',\r\n    'velocity',\r\n    'asset_tag',\r\n    'vin',\r\n    'make',\r\n    'model',\r\n    'vehicle_year',\r\n    'inci_id',\r\n    'status',\r\n    'avstatus'];\r\n\r\n  const date_keys = ['location_timestamp', 'updated_on'];\r\n\r\n  let keys = Object.keys(props);\r\n\r\n\r\n  return (\r\n    <>\r\n      {keys.map(key =>\r\n      {\r\n        if (valid_keys.indexOf(key) > -1)\r\n        {\r\n          return (\r\n            <tr key={key}>\r\n              <td></td>\r\n              <td colSpan={2}>\r\n                {key}\r\n              </td>\r\n              <td colSpan={props.colspan - 3}>\r\n                { date_keys.indexOf(key) > -1 ? Format_DateTime(props[key]) : props[key] ? props[key].toString() : '' }\r\n              </td>\r\n            </tr>\r\n          )\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeviceDetails;","import React from 'react';\r\nimport AVLData from './AVLData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { IAVLDataWithIndex } from '../interfaces';\r\nimport DeviceDetails from '../DeviceDetails';\r\n\r\nconst AVL = (props:IAVLDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const UpdateAVLData = async (device_id:string, device_type: string, current_unit: string) =>\r\n  {\r\n    const response = await AVLData.Update(device_id, device_type, current_unit);\r\n    if (response.ok)\r\n    {\r\n      props.fetchData();\r\n    }\r\n    else\r\n    {\r\n      alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n    }\r\n  }\r\n\r\n  let view_name = 'avl_view';\r\n\r\n  let view = state[view_name];\r\n\r\n  const update_view = (option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view_device',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          device_id: props.device_id,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  const get_property = (property: string) =>\r\n  {\r\n    const d = view.e[props.device_id];\r\n    if (!d) return false;\r\n    return d[property];\r\n  }\r\n\r\n  const get_history = () =>\r\n  {\r\n    if (view.e[props.device_id] && view.e[props.device_id].history)\r\n    {\r\n      return view.e[props.device_id].history;\r\n    }\r\n    else\r\n    {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr id={'avl' + props.device_id}>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"View device details\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              update_view({ details: !get_property('details') });              \r\n            }}>\r\n            {props.device_id}\r\n          </span>\r\n          \r\n          {props.latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(225,0,0)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.longitude, props.latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          <span className=\"icon\">\r\n            <i className={`fas ${props.device_type === \"Phone Number\" ? \"fa-phone\" : \"fa-sim-card\"}`}></i>\r\n          </span>\r\n          \r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Device's unit\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              update_view({ options: !get_property('options') });\r\n            }}>\r\n            {props.unitcode.length === 0 ? 'Add' : props.unitcode}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                update_view({ errors: !get_property('errors') });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              let history = get_history();\r\n              if (history.length === 0)\r\n              {\r\n                history = await UnitHistory.GetByUnit(props.unitcode);\r\n              }\r\n              else\r\n              {\r\n                history = [];\r\n              }\r\n              update_view({ history: history });\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await AVLData.Delete(props.device_id);\r\n              if (response.ok)\r\n              {\r\n                props.fetchData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <DeviceDetails\r\n        colspan={7}\r\n        show_details={get_property('details')}\r\n        {...props}\r\n      />\r\n      <UnitOptions\r\n        colspan={7}\r\n        new_unitcode=\"\"\r\n        update_data={UpdateAVLData}\r\n        show_unit_options={get_property('options')}\r\n        {...props} />\r\n      <ErrorInformation\r\n        colspan={7}\r\n        error_information={props.error_information}\r\n        show_errors={get_property('errors')} />\r\n      <UnitHistoryList\r\n        colspan={7}\r\n        title=\"History By Device Id\"\r\n        history={get_history()}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default AVL;","import React, { useState, useEffect } from 'react';\r\nimport { Store } from './Store';\r\n//import { IFetchData } from './interfaces';\r\n\r\nexport const useFetchData = (baseFetchData: Function, dispatch_type: string, initial_load: boolean) =>\r\n{\r\n  const { dispatch } = React.useContext(Store);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const fetchData = async () =>\r\n  {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n\r\n    try\r\n    {\r\n      const result = await baseFetchData();\r\n      dispatch({ type: dispatch_type, payload: result });\r\n\r\n    } catch (error)\r\n    {\r\n      setIsError(true);\r\n      console.log('error in useFetchData', error);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    initial_load && fetchData();\r\n  }, []);\r\n\r\n  return { isLoading, isError, fetchData };\r\n}\r\n\r\nexport default useFetchData;","import React, { useState, useEffect } from 'react';\r\nimport { Store } from './Store';\r\nimport { IListHeader, IHeaderFilter } from './interfaces';\r\n\r\nexport const ListHeaderView = (\r\n  {\r\n    title,\r\n    title_description,\r\n    loading,\r\n    fetchData,\r\n    view_name,\r\n    header_filters }: IListHeader) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const [currentSearch, setCurrentSearch] = useState(state[view_name].data_filter || \"\");\r\n\r\n  const update_view = (option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [loading, state[view_name]]);\r\n\r\n  return (\r\n    <div\r\n      style={{ padding: \"1em\", marginBottom: 0 }}\r\n      className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item is-size-3 has-text-weight-bold\">\r\n          {title}\r\n        </div>\r\n        <div className=\"level-item\">\r\n          <div className=\"field\">\r\n            <div\r\n              className={`control ${loading ? 'is-loading' : ''}`}>\r\n              <input\r\n                className=\"input is-small\"\r\n                title={title_description}\r\n                type=\"text\"                \r\n                placeholder=\"Search\"\r\n                onChange={event => setCurrentSearch(event.target.value)}\r\n                value={currentSearch}\r\n                onKeyDown={event =>\r\n                {\r\n                  if (event.key === 'Enter')\r\n                  {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    update_view({ data_filter: currentSearch });\r\n                  }\r\n\r\n                }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={event =>\r\n            {\r\n              event.preventDefault();\r\n              fetchData();\r\n            }}\r\n            title=\"Refresh data\"\r\n            type=\"button\"\r\n            className={`button is-success is-small ${loading ? 'is-loading' : ''}`}>\r\n            <span className=\"icon is-small\">\r\n              <i className=\"fas fa-sync-alt\"></i>\r\n            </span>\r\n          </button>\r\n          <button\r\n            style={{ marginLeft: \".5em\" }}\r\n            onClick={event =>\r\n            {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              setCurrentSearch(\"\");\r\n              update_view({ data_filter: '' });\r\n\r\n            }}\r\n            title=\"Reset the Search\"\r\n            type=\"button\"\r\n            className=\"button is-warning is-small\">\r\n            <span className=\"icon is-small\">\r\n              <i className=\"fas fa-undo-alt\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"level-right\">\r\n        <p className=\"level-item has-text-weight-bold\">Filters</p>\r\n        <div className=\"level-item tabs\">\r\n          <ul>\r\n            {\r\n              header_filters.map(f =>\r\n              {\r\n                return (\r\n                  <li\r\n                    className={`${state[view_name].special_filter === f.value ? 'is-active' : ''}`}\r\n                    key={f.id}>\r\n                    <a\r\n                      onClick={event =>\r\n                      {\r\n                        update_view({ special_filter: f.value });\r\n                      }}>\r\n                      {f.label}\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListHeaderView;","import React, { useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport AVLData from './AVLData';\r\nimport AVL from './AVL';\r\nimport { useFetchData } from '../useFetchData';\r\nimport ListHeaderView from '../ListHeaderView';\r\nimport { AVLHeader } from '../ListHeaders';\r\n//import { useInterval } from '../useInterval';\r\n\r\nconst AVLList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(AVLData.Get, \"get_avl_data\", false);\r\n\r\n  const Header = AVLHeader(isLoading, fetchData);\r\n\r\n  let view_name = 'avl_view';\r\n\r\n  let view = state[view_name];\r\n\r\n  let sort_view = (sort_by: string) =>\r\n  {\r\n    dispatch({\r\n      type: 'update_view',\r\n      payload: {\r\n        view: view_name,\r\n        option: {\r\n          sort_field: sort_by,\r\n          sort_ascending: !view.sort_ascending\r\n        }\r\n      }\r\n    });\r\n  }\r\n   \r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_avl_data,\r\n    view]);\r\n\r\n  return (\r\n    <section>\r\n\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n  \r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDeviceId\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('device_id');\r\n                }}\r\n                className={`${view.sort_field !== 'device_id' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Device Id\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDeviceType\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('device_type');\r\n                }}\r\n                className={`${view.sort_field !== 'device_type' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Type\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('unitcode');\r\n                }}\r\n                className={`${view.sort_field !== 'unitcode' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('updated_on');\r\n                }}\r\n                className={`${view.sort_field !== 'updated_on' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('location_timestamp');\r\n                }}\r\n                className={`${view.sort_field !== 'location_timestamp' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_avl_data.map((avl, index) =>\r\n          {\r\n            return (<AVL key={avl.device_id} index={index} {...avl} fetchData={fetchData} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AVLList;","export const AVLHeader = (isLoading: boolean, fetchData: Function) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"AVL\",\r\n    title_description: \"Search for text in the Device Id and Unit fields. Search for multiple items by separating with comma. Hit Enter to Search.\",\r\n    //search_type: \"search_avl_data\",\r\n    fetchData: fetchData,\r\n    view_name: \"avl_view\",\r\n    //data_filter: data_filter,\r\n    //special_filter: \"avl_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"All Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"Unit\",\r\n        value: \"unit\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"Date\",\r\n        value: \"date\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"Location\",\r\n        value: \"location\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nexport const FCHeader = (isLoading: boolean, fetchData: Function) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"FC\",\r\n    title_description: \"Search for text in the Device Id, Unit, and Asset Tag fields. Search for multiple items by separating with comma. Hit Enter to Search.\",\r\n    //search_type: \"search_fc_data\",\r\n    fetchData: fetchData,\r\n    view_name: \"fc_view\",\r\n    //data_filter: data_filter,\r\n    //special_filter: \"fc_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"Asset Tag\",\r\n        value: \"asset_tag\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"Unit\",\r\n        value: \"unit\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"Date\",\r\n        value: \"date\"\r\n      },\r\n      {\r\n        id: 5,\r\n        label: \"Location\",\r\n        value: \"location\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nexport const CADHeader = (isLoading: boolean, fetchData: Function) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"CAD\",\r\n    title_description: \"Search for text in the UnitCode field. Search for multiple items by separating with comma. Hit Enter to Search.\",\r\n    //search_type: \"search_cad_data\",\r\n    fetchData: fetchData,\r\n    view_name: \"cad_view\",\r\n    //data_filter: data_filter,\r\n    //special_filter: \"cad_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"Date\",\r\n        value: \"date\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"Location\",\r\n        value: \"location\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nexport const UnitHeader = (isLoading: boolean, fetchData: Function) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"Unit\",\r\n    title_description: \"Search for text in the Device Id, Unit, and Asset Tag fields. Search for multiple items by separating with comma.  Hit Enter to Search.\",\r\n    //search_type: \"search_unit_data\",\r\n    fetchData: fetchData,\r\n    view_name: 'unit_view',\r\n    //data_filter: data_filter,\r\n    //special_filter: \"unit_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"AVL\",\r\n        value: \"avl\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"FC\",\r\n        value: \"fc\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"CAD\",\r\n        value: \"cad\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IFleetCompleteData\r\n{\r\n  device_id: string;\r\n  asset_tag: string\r\n  unitcode: string;\r\n  vin: string;\r\n  make: string;\r\n  model: string;\r\n  vehicle_year: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  updated_on: Date;\r\n  velocity: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_asset_tag_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class FleetCompleteData implements IFleetCompleteData\r\n{\r\n  public device_id: string = \"\";\r\n  public asset_tag: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public vin: string = \"\";\r\n  public make: string = \"\";\r\n  public model: string = \"\";\r\n  public vehicle_year: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public updated_on: Date = new Date();\r\n  public velocity: number = 0;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;  \r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_asset_tag_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<FleetCompleteData>>\r\n  {\r\n    const data = await Get<Array<FleetCompleteData>>('API/FC/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(device_id: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/FC/Delete?device_id=\" + device_id, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(asset_tag: string, unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/FC/Update?asset_tag=${asset_tag}&unitcode=${unitcode}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default FleetCompleteData;","import React from 'react';\r\nimport FleetCompleteData from './FleetCompleteData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { IFCDataWithIndex } from '../interfaces';\r\nimport DeviceDetails from '../DeviceDetails';\r\n\r\nconst FC = (props: IFCDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const updateFCData = async (asset_tag: string, current_unit: string) =>\r\n  {\r\n    const response = await FleetCompleteData.Update(asset_tag, current_unit);\r\n    if (response.ok)\r\n    {\r\n      props.fetchData();\r\n    }\r\n    else\r\n    {\r\n      alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n    }\r\n  }\r\n\r\n  let view_name = 'fc_view';\r\n\r\n  let view = state[view_name];\r\n\r\n  const update_view = (option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view_device',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          device_id: props.device_id,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  const get_property = (property: string) =>\r\n  {\r\n    const d = view.e[props.device_id];\r\n    if (!d) return false;\r\n    return d[property];\r\n  }\r\n\r\n  const get_history = () =>\r\n  {\r\n    if (view.e[props.device_id] && view.e[props.device_id].history)\r\n    {\r\n      return view.e[props.device_id].history;\r\n    }\r\n    else\r\n    {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"View device details\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              update_view({ details: !get_property('details') });\r\n            }}>\r\n            {props.device_id.replace(/^0+/, '')}\r\n          </span>\r\n          {props.latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon cursor_pointer\"\r\n              style={{ color: \"rgb(0,225,0)\" }}\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.longitude, props.latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.asset_tag === props.device_id ? '' : props.asset_tag}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Device's unit\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              update_view({ options: !get_property('options') });\r\n            }}>\r\n            {props.unitcode.length === 0 ? 'Add' : props.unitcode}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td\r\n          className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                update_view({ errors: !get_property('errors') });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              let history = get_history();\r\n              if (history.length === 0)\r\n              {\r\n                history = await UnitHistory.GetByDeviceId(props.asset_tag);\r\n              }\r\n              else\r\n              {\r\n                history = [];\r\n              }\r\n              update_view({ history: history });\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await FleetCompleteData.Delete(props.device_id);\r\n              if (response.ok)\r\n              {\r\n                props.fetchData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <DeviceDetails\r\n        colspan={7}\r\n        show_details={get_property('details')}\r\n        {...props}\r\n      />\r\n      <UnitOptions\r\n        colspan={7}\r\n        new_unitcode=\"\"\r\n        update_data={updateFCData}\r\n        show_unit_options={get_property('options')}\r\n        {...props} />\r\n\r\n      <ErrorInformation\r\n        colspan={7}\r\n        error_information={props.error_information}\r\n        show_errors={get_property('errors')} />\r\n      <UnitHistoryList\r\n        colspan={7}\r\n        title=\"History By Device Id\"\r\n        history={get_history()}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default FC;","import React, { useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport FleetCompleteData from './FleetCompleteData';\r\nimport FC from './FC';\r\nimport { useFetchData } from '../useFetchData';\r\nimport { ListHeaderView } from '../ListHeaderView';\r\nimport { FCHeader } from '../ListHeaders';\r\n\r\nconst FCList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(FleetCompleteData.Get, \"get_fc_data\", false);\r\n\r\n  const Header = FCHeader(isLoading, fetchData);\r\n\r\n  let view_name = 'fc_view';\r\n\r\n  let view = state[view_name];\r\n\r\n  let sort_view = (sort_by: string) =>\r\n  {\r\n    dispatch({\r\n      type: 'update_view',\r\n      payload: {\r\n        view: view_name,\r\n        option: {\r\n          sort_field: sort_by,\r\n          sort_ascending: !view.sort_ascending\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_fc_data,\r\n    view]);\r\n\r\n\r\n  return (\r\n    <section>\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: \"5%\"}}>\r\n              #\r\n            </th>\r\n            <th style={{ width: \"15%\" }}>\r\n              <a\r\n                href=\"#SortByDeviceId\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('device_id');\r\n                }}\r\n                className={`${view.sort_field !== 'device_id' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Device Id\r\n              </a>\r\n            </th>\r\n            <th style={{width: \"10%\"}}>\r\n              <a\r\n                href=\"#SortByAssetTag\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('asset_tag');\r\n                }}\r\n                className={`${view.sort_field !== 'asset_tag' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Asset Tag\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"8%\" }}>\r\n              <a\r\n                href=\"#SortByUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('unitcode');\r\n                }}\r\n                className={`${view.sort_field !== 'unitcode' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"24%\" }}>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('updated_on');\r\n                }}\r\n                className={`${view.sort_field !== 'updated_on' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"24%\" }}>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('location_timestamp');\r\n                }}\r\n                className={`${view.sort_field !== 'location_timestamp' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"14%\" }}\r\n              className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_fc_data.map((fc, index) =>\r\n          {\r\n            return (<FC key={fc.device_id} index={index} {...fc} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FCList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface ICADData\r\n{\r\n  unitcode: string;\r\n  location_timestamp: Date;\r\n  inci_id: string;\r\n  status: string;\r\n  avstatus: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  speed: number;\r\n  heading: number; \r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class CADData implements ICADData\r\n{\r\n  public unitcode: string = \"\";\r\n  public location_timestamp: Date = new Date();\r\n  public inci_id: string = \"\";\r\n  public status: string = \"\";\r\n  public avstatus: string = \"\";\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public speed: number = 0;\r\n  public heading: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<CADData>>\r\n  {\r\n    const data = await Get<Array<CADData>>('API/CAD/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/CAD/Delete?unitcode=\" + unitcode, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default CADData;","import React from 'react';\r\nimport CADData from './CADData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { ICADDataWithIndex } from '../interfaces';\r\nimport DeviceDetails from '../DeviceDetails';\r\n\r\nconst CAD = (props:ICADDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  let view_name = 'cad_view';\r\n\r\n  let view = state[view_name];\r\n\r\n  const update_view = (option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view_device',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          unitcode: props.unitcode,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  const get_property = (property: string) =>\r\n  {\r\n    const d = view.e[props.unitcode];\r\n    if (!d) return false;\r\n    return d[property];\r\n  }\r\n\r\n  const get_history = () =>\r\n  {\r\n    if (view.e[props.unitcode] && view.e[props.unitcode].history)\r\n    {\r\n      return view.e[props.unitcode].history;\r\n    }\r\n    else\r\n    {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr id={'cad' + props.unitcode}>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"View device details\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              update_view({ details: !get_property('details') });\r\n            }}>\r\n            {props.unitcode}\r\n          </span>\r\n          {props.latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(0,0,225)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.longitude, props.latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.inci_id.trim().length > 0 ? 'On A Call' : ''}\r\n        </td>\r\n        <td>\r\n          {props.status}\r\n        </td>\r\n        <td>\r\n          {props.avstatus}\r\n        </td>\r\n\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td className=\"has-text-right icon-options\">\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                update_view({ errors: !get_property('errors') });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              let history = get_history();\r\n              if (history.length === 0)\r\n              {\r\n                history = await UnitHistory.GetByDeviceId(props.unitcode);\r\n              }\r\n              else\r\n              {\r\n                history = [];\r\n              }\r\n              update_view({ history: history });\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await CADData.Delete(props.unitcode);\r\n              if (response.ok)\r\n              {\r\n                props.fetchData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>  \r\n      <DeviceDetails\r\n        colspan={8}\r\n        show_details={get_property('details')}\r\n        {...props}\r\n      />\r\n      <ErrorInformation\r\n        colspan={8}\r\n        error_information={props.error_information}\r\n        show_errors={get_property('errors')} />\r\n      <UnitHistoryList\r\n        colspan={8}\r\n        title=\"History By Device Id\"\r\n        history={get_history()}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default CAD;","import React, { useState, useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport CADData from './CADData';\r\nimport CAD from './CAD';\r\nimport { useFetchData } from '../useFetchData';\r\nimport { ListHeaderView } from '../ListHeaderView';\r\nimport { CADHeader } from '../ListHeaders';\r\n\r\nconst CADList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(CADData.Get, \"get_cad_data\", false);\r\n\r\n  const Header = CADHeader(isLoading, fetchData);\r\n\r\n  let view_name = 'cad_view';\r\n\r\n  let view = state[view_name];\r\n\r\n  let sort_view = (sort_by: string) =>\r\n  {\r\n    dispatch({\r\n      type: 'update_view',\r\n      payload: {\r\n        view: view_name,\r\n        option: {\r\n          sort_field: sort_by,\r\n          sort_ascending: !view.sort_ascending\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_cad_data,\r\n    view]);\r\n\r\n  return (\r\n    <section>\r\n\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitCode\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('unitcode');\r\n                  //dispatch({ type: 'cad_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${view.sort_field !== 'unitcode' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit Code\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByCallStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('inci_id');\r\n                  //dispatch({ type: 'cad_data_sort', payload: 'inci_id' });\r\n                }}\r\n                className={`${view.sort_field !== 'inci_id' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Call Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('status');\r\n                  //dispatch({ type: 'cad_data_sort', payload: 'status' });\r\n                }}\r\n                className={`${view.sort_field !== 'status' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitAVStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('avstatus');\r\n                  //dispatch({ type: 'cad_data_sort', payload: 'avstatus' });\r\n                }}\r\n                className={`${view.sort_field !== 'avstatus' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                AV Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('updated_on');\r\n                  //dispatch({ type: 'cad_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${view.sort_field !== 'updated_on' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('location_timestamp');\r\n                  //dispatch({ type: 'cad_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${view.sort_field !== 'location_timestamp' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_cad_data.map((cad, index) =>\r\n          {\r\n            return (<CAD key={cad.unitcode} index={index} {...cad} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CADList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IUnitData\r\n{\r\n  unitcode: string;\r\n  using_unit: string;\r\n  group_label: string;\r\n  show_in_minicad: boolean;\r\n\r\n  avl_device_id: string;\r\n  avl_longitude: number;\r\n  avl_latitude: number;\r\n  avl_location_timestamp: Date;\r\n  has_avl_device: boolean;\r\n  has_avl_error: boolean;\r\n\r\n  fc_device_id: string;\r\n  fc_longitude: number;\r\n  fc_latitude: number;\r\n  fc_location_timestamp: Date;\r\n  has_fc_device: boolean;\r\n  has_fc_error: boolean;\r\n\r\n  cad_longitude: number;\r\n  cad_latitude: number;\r\n  cad_location_timestamp: Date;\r\n  should_have_cad_location: boolean;\r\n  has_cad_error: boolean;\r\n\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  device_history: Array<any>;\r\n\r\n}\r\n\r\nexport class UnitData implements IUnitData\r\n{\r\n  public unitcode: string = \"\";\r\n  public using_unit: string = \"\";\r\n  public group_label: string = \"\";\r\n  public show_in_minicad: boolean = false;\r\n  \r\n  public avl_device_id: string = \"\";\r\n  public avl_longitude: number = 0;\r\n  public avl_latitude: number = 0;\r\n  public avl_location_timestamp: Date = new Date();\r\n  public has_avl_device: boolean = false;\r\n  public has_avl_error: boolean = false;\r\n  \r\n  public fc_device_id: string = \"\";\r\n  public fc_longitude: number = 0;\r\n  public fc_latitude: number =0;\r\n  public fc_location_timestamp: Date = new Date();\r\n  public has_fc_device: boolean = false;\r\n  public has_fc_error: boolean = false;\r\n  \r\n  public cad_longitude: number = 0;\r\n  public cad_latitude: number = 0;\r\n  public cad_location_timestamp: Date = new Date();\r\n  public should_have_cad_location: boolean = false;\r\n  public has_cad_error: boolean = false;\r\n  \r\n  public error_information: Array<string> = [];\r\n  public show_errors: boolean = false;\r\n  public show_unit_options: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<UnitData>>\r\n  {\r\n    const data = await Get<Array<UnitData>>('API/Unit/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/Unit/Delete?unitcode=\" + unitcode, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(unitcode: string, group: string, has_avl: boolean, has_fc: boolean, should_have_cad: boolean): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/Unit/Update?unitcode=${unitcode}&group=${group}&has_avl=${has_avl}&has_fc=${has_fc}&should_have_cad=${should_have_cad}`, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Add(unitcode: string, group: string, has_avl: boolean, has_fc: boolean, should_have_cad: boolean): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/Unit/Add?unitcode=${unitcode}&group=${group}&has_avl=${has_avl}&has_fc=${has_fc}&should_have_cad=${should_have_cad}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default UnitData;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IUnitControls } from '../interfaces';\r\nimport UnitData from './UnitData';\r\n\r\nconst UnitControls = (props: IUnitControls) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const getGroupValue = (label: string) =>\r\n  {\r\n    if (label.length === 0) return label;\r\n    let v = state.unit_groups.filter(g => g.label === label);\r\n    if (v.length > 0) return v[0].value;\r\n    return '';\r\n  }\r\n\r\n  const [currentUnit, setCurrentUnit] = useState(props.unitcode);\r\n  const [group, setGroup] = useState(getGroupValue(props.group_label));\r\n  const [hasAVL, setHasAVL] = useState(props.has_avl_device);\r\n  const [hasFC, setHasFC] = useState(props.has_fc_device);\r\n  const [hasCAD, setHasCAD] = useState(props.should_have_cad_location);\r\n\r\n\r\n  if (!state.unit_view.e[props.unitcode] || !state.unit_view.e[props.unitcode]['options']) return null;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Group:\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <div className=\"select is-small\">\r\n                <select value={group}\r\n                  onChange={event =>\r\n                  {\r\n                    setGroup(event.target.value)\r\n                  }}>\r\n                  <option value=\"\">No Group</option>\r\n                  {\r\n                    state.unit_groups.map(group =>\r\n                  {\r\n                    return (\r\n                      <option key={group.value} value={group.value}>{group.label}</option>\r\n                    )\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has AVL Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasAVL}\r\n                  onChange={event => setHasAVL(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has Fleet Complete Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasFC}\r\n                  onChange={event => setHasFC(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Should Have CAD Location\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasCAD}\r\n                  onChange={event => setHasCAD(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan={3}>\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <button\r\n                onClick={async (event) => \r\n                {\r\n                  event.preventDefault();\r\n                  const response = await UnitData.Update(props.unitcode, group, hasAVL, hasFC, hasCAD);\r\n                  if (response.ok)\r\n                  {\r\n                    props.refresh_data();\r\n                  }\r\n                  else\r\n                  {\r\n                    alert(\"There was a problem updating this record. Please contact MIS Development for more information.\");\r\n                  }\r\n                }}\r\n                title=\"This will save all of the selections above\"\r\n                className=\"is-success button is-small\">\r\n                Save\r\n              </button>\r\n              <button\r\n                title=\"Close the Unit Options menu without saving any changes\"\r\n                style={{ marginLeft: \"1em\" }}\r\n                className=\"is-warning button is-small\"\r\n                onClick={event =>\r\n                {\r\n                  dispatch({ type: 'unit_data_toggle_show_unit_options', payload: props.unitcode });\r\n                }}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnitControls;\r\n\r\n","import React from 'react';\r\nimport UnitData from './UnitData';\r\nimport { Store } from '../Store';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport UnitControls from './UnitControls';\r\nimport { IUnitDataWithIndex } from '../interfaces';\r\n\r\nconst Unit = (props: IUnitDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const view_name = 'unit_view';\r\n\r\n  const view = state[view_name];\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  const update_view = (option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view_device',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          unitcode: props.unitcode,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const update_app_view = (view_name: string, option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const update_other_view = (view_name: string, unitcode: string, device_id: string, option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view_device',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          unitcode: unitcode,\r\n          device_id: device_id,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const get_property = (property: string) =>\r\n  {\r\n    const d = view.e[props.unitcode];\r\n    if (!d) return false;\r\n    return d[property];\r\n  }\r\n\r\n  const get_history = () =>\r\n  {\r\n    const d = view.e[props.unitcode];\r\n    if (d && d.history)\r\n    {\r\n      return d.history;\r\n    }\r\n    else\r\n    {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Unit's Information\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              update_view({ options: !get_property('options') });\r\n            }}>\r\n            {props.unitcode}\r\n          </span>\r\n          \r\n        </td>\r\n        <td>\r\n          {props.using_unit}\r\n        </td>\r\n        <td>\r\n          {props.group_label}\r\n        </td>\r\n        <td>\r\n          {props.avl_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(225,0,0)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.avl_longitude, props.avl_latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ): ''}\r\n          {new Date(props.avl_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\", color: \"rgb(225, 0, 0)\" }}\r\n              title=\"View this on the AVL Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                update_app_view('avl_view', { data_filter: props.avl_device_id, special_filter: '' });\r\n                update_other_view('avl_view', props.avl_device_id, undefined, { details: true });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.fc_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon cursor_pointer\"\r\n              style={{ color: \"rgb(0,225,0)\" }}\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.fc_longitude, props.fc_latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n          {new Date(props.fc_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\", color: \"rgb(0, 225, 0)\" }}\r\n              title=\"View this on the Fleet Complete Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                update_app_view('fc_view', { data_filter: props.fc_device_id, special_filter: '' });\r\n                update_other_view('fc_view', props.fc_device_id, undefined, { details: true });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.cad_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(0,0,225)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.cad_longitude, props.cad_latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}          \r\n          {new Date(props.cad_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\", color: \"rgb(0,0,225)\"}}\r\n              title=\"View this on the CAD Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                update_app_view('cad_view', { data_filter: props.unitcode, special_filter: '' });\r\n                update_other_view('cad_view', undefined, props.unitcode, { details: true });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n            ) : ''}\r\n        </td>\r\n        <td\r\n          className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                update_view({ errors: !get_property('errors') });\r\n              }}>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              let history = get_history();\r\n              if (history.length === 0)\r\n              {\r\n                history = await UnitHistory.GetByUnit(props.unitcode);\r\n              }\r\n              else\r\n              {\r\n                history = [];\r\n              }\r\n              update_view({ history: history });\r\n\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          {new Date(props.avl_location_timestamp).getFullYear() === 1995 && \r\n            new Date(props.fc_location_timestamp).getFullYear() === 1995 && \r\n            new Date(props.cad_location_timestamp).getFullYear() === 1995? (\r\n            <span\r\n              style={{ marginLeft: \".5em\" }}\r\n              title=\"Delete This Device\"\r\n              className=\"icon cursor_pointer has-text-danger\"\r\n              onClick={async event =>\r\n              {\r\n                event.preventDefault();\r\n                const response = await UnitData.Delete(props.unitcode);\r\n                if (response.ok)\r\n                {\r\n                  props.fetchData();\r\n                }\r\n                else\r\n                {\r\n                  alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n                }\r\n              }\r\n              }>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <UnitControls \r\n        colspan={8}\r\n        refresh_data={props.fetchData}\r\n        show_unit_options={get_property('options')}\r\n        {...props}\r\n        />\r\n      <ErrorInformation\r\n        colspan={8}\r\n        error_information={props.error_information}\r\n        show_errors={get_property('errors')} />\r\n      <UnitHistoryList\r\n        colspan={8}\r\n        title=\"History By Device Id\"\r\n        history={get_history()}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Unit;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IAddUnit } from '../interfaces';\r\nimport UnitData from './UnitData';\r\n\r\nconst AddUnit = (props: IAddUnit) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const getGroupValue = (label: string) =>\r\n  {\r\n    if (label.length === 0) return label;\r\n    let v = state.unit_groups.filter(g => g.label === label);\r\n    if (v.length > 0) return v[0].value;\r\n    return '';\r\n  }\r\n\r\n  const fetchUnitData = async () =>\r\n  {\r\n    const data = await UnitData.Get();\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\r\n\r\n  const [currentUnit, setCurrentUnit] = useState(props.unitcode);\r\n  const [group, setGroup] = useState(getGroupValue(props.group_label));\r\n  const [hasAVL, setHasAVL] = useState(props.has_avl_device);\r\n  const [hasFC, setHasFC] = useState(props.has_fc_device);\r\n  const [hasCAD, setHasCAD] = useState(props.should_have_cad_location);\r\n\r\n  if (!props.show_add_unit) return null;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Unit Code\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <input\r\n                  value={currentUnit}\r\n                  onChange={event => setCurrentUnit(event.target.value)}\r\n                  type=\"text\" />\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Group:\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <div className=\"select is-small\">\r\n                <select value={group}\r\n                  onChange={event =>\r\n                  {\r\n                    console.log('event', event, event.target.value);\r\n                    setGroup(event.target.value)\r\n                  }}>\r\n                  <option value=\"\">No Group</option>\r\n                  {\r\n                    state.unit_groups.map(group =>\r\n                    {\r\n                      return (\r\n                        <option key={group.value} value={group.value}>{group.label}</option>\r\n                      )\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has AVL Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasAVL}\r\n                  onChange={event => setHasAVL(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has Fleet Complete Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasFC}\r\n                  onChange={event => setHasFC(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Should Have CAD Location\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasCAD}\r\n                  onChange={event => setHasCAD(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan={3}>\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <button\r\n                onClick={async (event) => \r\n                {\r\n                  event.preventDefault();\r\n                  const response = await UnitData.Add(currentUnit, group, hasAVL, hasFC, hasCAD);\r\n                  if (response.ok)\r\n                  {\r\n                    fetchUnitData();\r\n                    setCurrentUnit(\"\");\r\n                    setHasAVL(false);\r\n                    setHasFC(false);\r\n                    setHasCAD(false);\r\n                    setGroup(\"\");\r\n                    props.cancel();\r\n                  }\r\n                  else\r\n                  {\r\n                    alert(\"There was a problem updating this record. Please contact MIS Development for more information.\");\r\n                  }\r\n                }}\r\n                title=\"This will save all of the selections above\"\r\n                className=\"is-success button is-small\">\r\n                Save\r\n              </button>\r\n              <button\r\n                title=\"Close the Unit Options menu without saving any changes\"\r\n                style={{ marginLeft: \"1em\" }}\r\n                className=\"is-warning button is-small\"\r\n                onClick={event =>\r\n                {\r\n                  props.cancel();\r\n                }}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddUnit;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport UnitData from './UnitData';\r\nimport Unit from './Unit';\r\nimport AddUnit from './AddUnit';\r\nimport { useFetchData } from '../useFetchData';\r\nimport { ListHeaderView } from '../ListHeaderView';\r\nimport { UnitHeader } from '../ListHeaders';\r\n\r\n\r\nconst UnitList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n  const [showAddUnit, setShowAddUnit] = useState(false);\r\n  const view_name = 'unit_view';\r\n  const view = state[view_name];\r\n  const [currentSearch, setCurrentSearch] = useState(view.data_filter || \"\");\r\n  \r\n  const hideAddUnit = () =>\r\n  {\r\n    setShowAddUnit(false);\r\n  }\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(UnitData.Get, \"get_unit_data\", false);\r\n\r\n  const Header = UnitHeader(isLoading, fetchData);\r\n   \r\n  const sort_view = (sort_by: string) =>\r\n  {\r\n    dispatch({\r\n      type: 'update_view',\r\n      payload: {\r\n        view: view_name,\r\n        option: {\r\n          sort_field: sort_by,\r\n          sort_ascending: !state[view_name].sort_ascending\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_unit_data,\r\n    state.unit_view]);\r\n\r\n  return (\r\n    <section>\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitCode\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('unitcode');\r\n\r\n                }}\r\n                className={`${view.sort_field !== 'unitcode' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n              <span\r\n                style={{ marginLeft: \"1em\" }}\r\n                title=\"Add A Unit\"\r\n                className=\"icon cursor_pointer has-text-danger\"\r\n                onClick={event =>\r\n                {\r\n                  setShowAddUnit(!showAddUnit);\r\n                }}>\r\n                <i className=\"fas fa-plus-circle\"></i>\r\n              </span>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUsingUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('using_unit');\r\n                }}\r\n                className={`${view.sort_field !== 'using_unit' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Using Unit\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByGroup\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  sort_view('group_label');\r\n                }}\r\n                className={`${view.sort_field !== 'group_label' ? '' : view.sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                <span\r\n                  title=\"View this on the Map\"\r\n                  className=\"icon\">\r\n                  <i className=\"fas fa-sort\"></i>\r\n                </span>\r\n\r\n              </a>\r\n              <div\r\n                style={{ display: \"inline-block\" }}\r\n                className=\"control\">\r\n                <div className=\"select is-small\">\r\n                  <select\r\n                    onChange={event =>\r\n                    {\r\n                      let currentOption = event.target.options[event.target.selectedIndex].innerText;\r\n                      if (currentOption === \"All Groups\") currentOption = \"\";\r\n                      setCurrentSearch(currentOption);\r\n\r\n                      dispatch({\r\n                        type: 'update_view',\r\n                        payload: {\r\n                          view: view_name,\r\n                          option: {\r\n                            data_filter: currentOption\r\n                          }\r\n                        }\r\n                      });\r\n\r\n                    }}>\r\n                    <option value=\"\">All Groups</option>\r\n                    {\r\n                      state.unit_groups.map(group =>\r\n                      {\r\n                        return (\r\n                          <option key={group.value} value={group.value}>{group.label}</option>\r\n                        )\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th>\r\n              AVL\r\n            </th>\r\n            <th>\r\n              FC\r\n            </th>\r\n            <th>\r\n              CAD\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <AddUnit\r\n            unitcode=\"\"\r\n            has_avl_device={false}\r\n            has_fc_device={false}\r\n            should_have_cad_location={false}\r\n            group_label={\"\"}\r\n            show_add_unit={showAddUnit}\r\n            cancel={hideAddUnit}\r\n\r\n          />\r\n          {state.filtered_unit_data.map((u, index) =>\r\n          {\r\n            return (<Unit key={u.unitcode} index={index} {...u} fetchData={fetchData} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UnitList;","import React, { useEffect, useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nconst LocationLayer = ({ state_array, title, r, g, b, view_type }) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const view_name = view_type + '_view';\r\n\r\n\r\n\r\n  const [graphicsLayer, setGraphicsLayer] = useState(null);\r\n\r\n  const CalculateTimeDifference = (timestamp: Date, now: Date): number =>\r\n  {\r\n    let diff = (now.valueOf() - new Date(timestamp).valueOf()) / 1000;\r\n    if (diff < 60) return 1;     // 1 minute\r\n    if (diff < 120) return .9;   // 2 minutes\r\n    if (diff < 300) return .8;   // 5 minutes\r\n    if (diff < 600) return .7;   // 10 minutes\r\n    if (diff < 1200) return .6;  // 20 minutes\r\n    if (diff < 1800) return .5;  // 30 minutes\r\n    if (diff < 3600) return .4;  // 1 hour\r\n    if (diff < 14400) return .3;   // 4 hours\r\n    if (diff < 28800) return .2;   // 8 hours\r\n    return .1;   // 24 hours or more\r\n  }\r\n\r\n  const UpdateLayer = () =>\r\n  {\r\n    loadModules([\r\n      'esri/layers/GraphicsLayer'\r\n      , 'esri/Graphic'\r\n    ]).then(([\r\n      GraphicsLayer\r\n      , Graphic\r\n    ]) =>\r\n    {\r\n      let layer = graphicsLayer === null ? new GraphicsLayer() : graphicsLayer;\r\n      if (layer.graphics.length > 0) layer.removeAll();\r\n      layer.id = view_type;\r\n      layer.title = title;\r\n\r\n      let now = new Date();\r\n\r\n      for (let d of state[state_array])\r\n      {\r\n        let point = {\r\n          type: \"point\"\r\n          , longitude: d.longitude\r\n          , latitude: d.latitude\r\n        };\r\n\r\n        let symbol = {\r\n          type: 'simple-marker'\r\n          , color: [r, g, b, CalculateTimeDifference(d.location_timestamp, now)]\r\n        };\r\n\r\n        let symbolGraphic = new Graphic({\r\n          geometry: point\r\n          , symbol: symbol\r\n        });\r\n\r\n        symbolGraphic.setAttribute(\"view\", view_type);\r\n        symbolGraphic.setAttribute(\"device_id\", d.device_id);\r\n        symbolGraphic.setAttribute(\"unitcode\", d.unitcode);\r\n\r\n        //symbolGraphic.onClick = (event) =>\r\n        //{\r\n          \r\n\r\n          \r\n        //}\r\n\r\n        var text = {\r\n          type: \"text\"\r\n          , color: \"black\"\r\n          , haloColor: \"white\"\r\n          , haloSize: \"2px\"\r\n          , xoffset: 9\r\n          , yoffset: -2\r\n          , text: (d.unitcode.length > 0 ? d.unitcode : d.device_id)\r\n          , horizontalAlignment: \"left\"\r\n          , font: {\r\n            size: 10\r\n          }\r\n        };\r\n\r\n        var textGraphic = new Graphic({\r\n          geometry: point\r\n          , symbol: text\r\n        });\r\n\r\n        layer.add(symbolGraphic);\r\n        layer.add(textGraphic);\r\n\r\n      }\r\n      setGraphicsLayer(layer);\r\n      state.map.add(layer);\r\n\r\n    }).catch(err => console.error(err));\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    if (state.map && state[state_array].length > 0)\r\n    {\r\n      UpdateLayer();\r\n    }\r\n    return function cleanup()\r\n    {\r\n      if (state.map) state.map.remove(graphicsLayer);\r\n    }\r\n  }, [state.map, state[state_array]]);\r\n\r\n\r\n  return null;\r\n}\r\n\r\nexport default LocationLayer;","import React, { useEffect, useRef } from 'react';\r\nimport { loadModules } from 'esri-loader';\r\nimport { Store } from '../Store';\r\nimport LocationLayer from './LocationLayer';\r\n\r\nexport const WebMapView = () =>\r\n{\r\n  const mapRef = useRef(null);\r\n\r\n  const { dispatch } = React.useContext(Store);\r\n\r\n  const update_app_view = (view_name: string, option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  const update_other_view = (view_name: string, unitcode: string, device_id: string, option: object) => \r\n  {\r\n    dispatch(\r\n      {\r\n        type: 'update_view_device',\r\n        payload:\r\n        {\r\n          view: view_name,\r\n          unitcode: unitcode,\r\n          device_id: device_id,\r\n          option: option\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(\r\n    () =>\r\n    {\r\n      // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n      loadModules([\r\n        'esri/Map',\r\n        'esri/views/MapView',\r\n        'esri/widgets/BasemapGallery',\r\n        'esri/widgets/LayerList',\r\n        'esri/widgets/Home',\r\n        'esri/layers/MapImageLayer'\r\n      ], { css: true })\r\n        .then(([Map, MapView, BasemapGallery, LayerList, Home, MapImageLayer]) =>\r\n        {\r\n          const map = new Map({\r\n            basemap: 'streets-navigation-vector'\r\n          });\r\n\r\n          // load the map view at the ref's DOM node\r\n          const view = new MapView({\r\n            container: mapRef.current,\r\n            map: map,\r\n            center: [-81.80, 29.950],\r\n            zoom: 10,\r\n            logo: false\r\n          }, { logo: false });\r\n\r\n          new BasemapGallery({\r\n            view: view,\r\n            container: document.getElementById(\"basemap_selector_container\"),\r\n            source: {\r\n              portal: {\r\n                url: \"http://www.arcgis.com\",\r\n                useVectorBasemaps: true, // Load vector tile basemap group\r\n              },\r\n            }\r\n          });\r\n\r\n          let fireServiceLayer = new MapImageLayer({\r\n            url: 'https://maps.claycountygov.com:6443/arcgis/rest/services/Fire_Response/MapServer'\r\n            , title: 'Fire Services'\r\n          });\r\n          map.add(fireServiceLayer);\r\n\r\n          let siteAddressLayer = new MapImageLayer({\r\n            url: 'https://maps.claycountygov.com:6443/arcgis/rest/services/SiteAddresses/MapServer'\r\n            , title: 'Site Addresses'\r\n          });\r\n          map.add(siteAddressLayer);\r\n\r\n\r\n          new LayerList({\r\n            view: view,\r\n            container: document.getElementById(\"layerlist_selector_container\")\r\n          });\r\n\r\n          var homeWidget = new Home({ view: view });\r\n          view.ui.add(homeWidget, { position: \"top-left\" });\r\n\r\n          //view.ui.add(layerlist, { position: \"top-right\" });\r\n\r\n          view.on(\"click\", (event) =>\r\n          {\r\n            view.hitTest(event).then(function (response)\r\n            {\r\n              const mylayers = [\"avl\", \"fc\", \"cad\"];\r\n              if (response.results.length)\r\n              {\r\n                var graphic = response.results.filter(function (result)\r\n                {\r\n                  // check if the graphic belongs to the layer of interest\r\n                  return mylayers.indexOf(result.graphic.layer.id) > -1;\r\n                })[0].graphic;\r\n\r\n                // do something with the result graphic\r\n                let view = graphic.attributes.view;\r\n                let view_name = view + '_view';\r\n                if (view === \"cad\")\r\n                {\r\n                  update_app_view(view_name, { data_filter: graphic.attributes.unitcode, special_filter: '' });\r\n                  update_other_view(view_name, undefined, graphic.attributes.unitcode, { details: true });\r\n                }\r\n                else\r\n                {\r\n                  update_app_view(view_name, { data_filter: graphic.attributes.device_id, special_filter: '' });\r\n                  update_other_view(view_name, graphic.attributes.device_id, undefined, { details: true });\r\n                }\r\n                console.log(graphic.attributes);\r\n              }\r\n            });\r\n          });\r\n\r\n          view.when(() =>\r\n          {\r\n            console.log('view.then running');\r\n            dispatch({ type: 'save_map', payload: map });\r\n            dispatch({ type: 'save_map_view', payload: view });\r\n\r\n          });\r\n\r\n          return () =>\r\n          {\r\n            if (view)\r\n            {\r\n              // destroy the map view\r\n              view.container = null;\r\n            }\r\n          };\r\n        });\r\n    }, []\r\n  );\r\n\r\n  return (\r\n    <div className=\"webmap\" ref={mapRef}>\r\n      <LocationLayer state_array=\"filtered_avl_data\" title=\"AVL Units\" r=\"255\" g=\"0\" b=\"0\" view_type=\"avl\" />\r\n      <LocationLayer state_array=\"filtered_fc_data\" title=\"Fleet Complete Units\" r=\"0\" g=\"255\" b=\"0\" view_type=\"fc\" />\r\n      <LocationLayer state_array=\"filtered_cad_data\" title=\"CAD Units\" r=\"0\" g=\"0\" b=\"255\" view_type=\"cad\" />\r\n      \r\n    </div>);\r\n};","import { Get } from './Utilities';\r\n\r\ninterface ISimpleValue\r\n{\r\n  label: string\r\n  value: string\r\n}\r\n\r\nclass SimpleValue implements ISimpleValue\r\n{\r\n  public label: string = \"\";\r\n  public value: string = \"\";\r\n\r\n  public static async GetUnitGroups(): Promise<Array<SimpleValue>>\r\n  {\r\n    const data = await Get<Array<SimpleValue>>('API/Group/GetUnitGroups');\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default SimpleValue;","import React from 'react';\nimport Nav from './nav';\nimport { Store } from './Store';\nimport AVLData from './AVL/AVLData';\nimport AVLList from './AVL/AVLList';\nimport FleetCompleteData from './FleetComplete/FleetCompleteData';\nimport FCList from './FleetComplete/FCList';\nimport CADData from './Cad/CADData';\nimport CADList from './Cad/CADList';\nimport UnitData from './Unit/UnitData';\nimport UnitList from './Unit/UnitList';\nimport { WebMapView } from './Map/WebMapView';\nimport SimpleValue from './SimpleValue';\nimport { useFetchData } from './useFetchData';\nimport { useInterval } from './useInterval';\n\nconst App: React.FC = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  const { fetchData: fetchAVLData } = useFetchData(AVLData.Get, \"get_avl_data\", false);\n  const { fetchData: fetchFCData } = useFetchData(FleetCompleteData.Get, \"get_fc_data\", false);\n  const { fetchData: fetchCADData } = useFetchData(CADData.Get, \"get_cad_data\", false);\n  const { fetchData: fetchUnitData } = useFetchData(UnitData.Get, \"get_unit_data\", false);\n\n  React.useEffect(() =>\n  {\n    fetchUnitData();\n    fetchAVLData();\r\n    fetchFCData();\r\n    fetchCADData();\r\n    fetchUnitGroups();\r\n  }, []);\n\n  useInterval(() =>\r\n  {\r\n    console.log(\"automatically refreshing all\");\r\n    fetchUnitData();\n    fetchAVLData();\r\n    fetchFCData();\r\n    fetchCADData();\r\n    fetchUnitGroups();\r\n  }, 60000);\n\n  const fetchUnitGroups = async () =>\r\n  {\n    const data = await SimpleValue.GetUnitGroups();\r\n    return dispatch({ type: 'get_unit_groups_data', payload: data });\r\n  }\n\n  return (\n    <>\n      <Nav />\n\n      <div className=\"columns main-container is-mobile\">\n        <div\n          style={{ paddingRight: 0 }}\n          className={`column left-side ${state.current_view !== 'map' ? 'is-full-mobile is-full-tablet is-full-desktop is-half-widescreen is-half-fullhd' : 'hide'}`}>\n          {state.current_view === \"avl\" ? <AVLList /> : null}\n          {state.current_view === \"unit\" ? <UnitList /> : null}\n          {state.current_view === \"fc\" ? <FCList /> : null}\n          {state.current_view === \"cad\" ? <CADList /> : null}\n        </div>\n\n        <div\n          style={{ paddingLeft: 0 }}\n          className={`column right-side ${state.current_view !== 'map' ? 'is-half-widescreen is-half-fullhd' : ''}`}>\n          <WebMapView />\n        </div>\n\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay)\r\n{\r\n  const savedCallback = useRef(null);\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() =>\r\n  {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() =>\r\n  {\r\n    function tick()\r\n    {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null)\r\n    {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport { StoreProvider } from './Store';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}