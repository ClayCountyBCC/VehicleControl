{"version":3,"sources":["Store.tsx","nav.tsx","Utilities.ts","AVL/AVLData.ts","ErrorInformation.tsx","UnitOptions.tsx","UnitHistory.ts","UnitHistoryList.tsx","AVL/AVL.tsx","useFetchData.ts","ListHeaderView.tsx","AVL/AVLList.tsx","ListHeaders.ts","FleetComplete/FleetCompleteData.ts","FleetComplete/FC.tsx","FleetComplete/FCList.tsx","Cad/CADData.ts","Cad/CAD.tsx","Cad/CADList.tsx","Unit/UnitData.ts","Unit/UnitControls.tsx","Unit/Unit.tsx","Unit/AddUnit.tsx","Unit/UnitList.tsx","Map/LocationLayer.tsx","Map/WebMapView.tsx","SimpleValue.ts","App.tsx","useInterval.tsx","index.tsx"],"names":["initialState","map","map_view","unit_groups","current_view","avl_data","Array","fc_data","cad_data","unit_data","filtered_avl_data","filtered_fc_data","filtered_cad_data","filtered_unit_data","avl_data_filter","fc_data_filter","cad_data_filter","unit_data_filter","avl_data_sort_field","fc_data_sort_field","cad_data_sort_field","unit_data_sort_field","avl_data_sort_ascending","fc_data_sort_ascending","cad_data_sort_ascending","unit_data_sort_ascending","avl_data_special_filter","fc_data_special_filter","cad_data_special_filter","unit_data_special_filter","Store","React","createContext","reducer","state","action","type","payload","process_avl","process_fc","process_cad","process_unit","showAVLHistory","a","device_id","device_history","showFCHistory","showCADHistory","unitcode","showUnitHistory","filtered","sort","filterFC","filterCAD","filterUnit","showAVLError","show_errors","showFCError","showCADError","showUnitError","showAVLUO","show_unit_options","showFCUO","showUnitControls","special_filter","array","specialFilter","length","filter","d","error_information","has_asset_tag_error","has_date_error","has_location_error","has_unit_error","has_cad_error","has_avl_error","has_fc_error","field","ascending","indexOf","b","Date","sort_dates","arrayToFilter","filterUsing","split","toLowerCase","j","check","s","trim","filter_avl","asset_tag","filter_fc","filter_cad","f","group_label","using_unit","filter_unit","Nav","useContext","dispatch","closeBaseMapDropdown","e","document","getElementById","classList","remove","className","role","aria-label","onClick","event","style","paddingRight","id","isActive","contains","querySelectorAll","forEach","removeEventListener","addEventListener","toggle","Get","url","async","fetch","method","headers","cache","credentials","response","ok","Error","statusText","json","Post_Empty","data","body","JSON","stringify","Format_DateTime","date","toLocaleString","AVLData","device_type","direction","location_timestamp","satellite_count","velocity","latitude","longitude","updated_on","ErrorInformation","props","colSpan","colspan","errorText","index","key","UnitOptions","useState","currentUnit","setCurrentUnit","onChange","target","value","placeholder","preventDefault","console","log","update_data","UnitHistory","changed_from","changed_to","changed_on","changed_by","error_message","UnitHistoryList","history","title","h","AVL","fetchAVLData","color","point","center","zoom","viewOnMap","GetByDeviceId","deviceHistory","Delete","alert","new_unitcode","current_unit","Update","useFetchData","baseFetchData","dispatch_type","initial_load","isLoading","setIsLoading","isError","setIsError","fetchData","result","useEffect","ListHeaderView","title_description","search_type","loading","data_filter","header_filters","currentSearch","setCurrentSearch","padding","marginBottom","onKeyDown","stopPropagation","marginLeft","label","AVLList","Header","AVLHeader","href","avl","FleetCompleteData","vin","make","model","vehicle_year","FC","fetchFCData","replace","FCList","FCHeader","width","fc","CADData","inci_id","status","avstatus","speed","heading","CAD","fetchCADData","CADList","CADHeader","cad","UnitData","show_in_minicad","avl_longitude","avl_latitude","avl_location_timestamp","has_avl_device","fc_longitude","fc_latitude","fc_location_timestamp","has_fc_device","cad_longitude","cad_latitude","cad_location_timestamp","should_have_cad_location","group","has_avl","has_fc","should_have_cad","UnitControls","v","g","getGroupValue","setGroup","hasAVL","setHasAVL","hasFC","setHasFC","hasCAD","setHasCAD","checked","refresh_data","Unit","fetchUnitData","getFullYear","GetByUnit","AddUnit","show_add_unit","Add","cancel","UnitList","showAddUnit","setShowAddUnit","UnitHeader","display","currentOption","options","selectedIndex","innerText","u","LocationLayer","state_array","r","graphicsLayer","setGraphicsLayer","CalculateTimeDifference","timestamp","now","diff","valueOf","loadModules","then","GraphicsLayer","Graphic","layer","graphics","removeAll","symbolGraphic","geometry","symbol","textGraphic","haloColor","haloSize","xoffset","yoffset","text","horizontalAlignment","font","size","add","catch","err","error","WebMapView","mapRef","useRef","css","ArcGISMap","MapView","BasemapGallery","LayerList","Home","MapImageLayer","basemap","view","container","current","source","portal","useVectorBasemaps","fireServiceLayer","siteAddressLayer","homeWidget","ui","position","when","ref","SimpleValue","App","fetchUnitGroups","callback","delay","savedCallback","setInterval","clearInterval","useInterval","GetUnitGroups","paddingLeft","ReactDOM","render","useReducer","Provider","children"],"mappings":"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","file":"static/js/main.06825ded.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { IState, IAction } from './interfaces';\r\nimport AVLData from './AVL/AVLData';\r\nimport FleetCompleteData from './FleetComplete/FleetCompleteData';\r\nimport CADData from './Cad/CADData';\r\nimport UnitData from './Unit/UnitData';\r\n\r\nconst initialState: IState =\r\n{\r\n  map: null,\r\n  map_view: null,\r\n\r\n  unit_groups: [],\r\n  current_view: \"unit\",\r\n\r\n  avl_data: new Array<AVLData>(),\r\n  fc_data: new Array<FleetCompleteData>(),\r\n  cad_data: new Array<CADData>(),\r\n  unit_data: new Array<UnitData>(),\r\n\r\n  filtered_avl_data: new Array<AVLData>(),\r\n  filtered_fc_data: new Array<FleetCompleteData>(),\r\n  filtered_cad_data: new Array<CADData>(),\r\n  filtered_unit_data: new Array<UnitData>(),\r\n\r\n  avl_data_filter: \"\",\r\n  fc_data_filter: \"\",\r\n  cad_data_filter: \"\",\r\n  unit_data_filter: \"\",\r\n\r\n  avl_data_sort_field: \"device_id\",\r\n  fc_data_sort_field: \"device_id\",\r\n  cad_data_sort_field: \"unitcode\",\r\n  unit_data_sort_field: \"unitcode\",\r\n\r\n  avl_data_sort_ascending: true,\r\n  fc_data_sort_ascending: true,\r\n  cad_data_sort_ascending: true,\r\n  unit_data_sort_ascending: true,\r\n\r\n  avl_data_special_filter: \"\",\r\n  fc_data_special_filter: \"\",\r\n  cad_data_special_filter: \"\",\r\n  unit_data_special_filter: \"\"\r\n}\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nfunction reducer(state: IState, action: IAction): IState\r\n{\r\n  switch (action.type)\r\n  {\r\n\r\n    case \"save_map\":\r\n      return {\r\n        ...state,\r\n        map: action.payload\r\n      }\r\n\r\n    case \"save_map_view\":\r\n      return {\r\n        ...state,\r\n        map_view: action.payload\r\n      }\r\n\r\n    case \"get_unit_groups_data\":\r\n      return {\r\n        ...state,\r\n        unit_groups: action.payload\r\n      }\r\n\r\n    case \"set_current_view\":\r\n      return {\r\n        ...state,\r\n        current_view: action.payload\r\n      }\r\n\r\n    case \"view_avl_by_unit\":\r\n      return {\r\n        ...state,\r\n        current_view: 'avl',        \r\n        filtered_avl_data:\r\n          process_avl(\r\n            state.avl_data,\r\n            action.payload,\r\n            state.avl_data_sort_field,\r\n            state.avl_data_sort_ascending,\r\n            state.avl_data_special_filter),\r\n        avl_data_special_filter: '',\r\n        avl_data_filter: action.payload\r\n      }\r\n\r\n    case \"view_fc_by_unit\":\r\n      return {\r\n        ...state,\r\n        current_view: 'fc',\r\n        filtered_fc_data:\r\n          process_fc(\r\n            state.fc_data,\r\n            action.payload,\r\n            state.fc_data_sort_field,\r\n            state.fc_data_sort_ascending,\r\n            state.fc_data_special_filter),\r\n        fc_data_special_filter: '',\r\n        fc_data_filter: action.payload\r\n      }\r\n\r\n    case \"view_cad_by_unit\":\r\n      return {\r\n        ...state,\r\n        current_view: 'cad',\r\n        filtered_cad_data:\r\n          process_cad(\r\n            state.cad_data,\r\n            action.payload,\r\n            state.cad_data_sort_field,\r\n            state.cad_data_sort_ascending,\r\n            state.cad_data_special_filter),\r\n        cad_data_special_filter: '',\r\n        cad_data_filter: action.payload\r\n      }\r\n\r\n    case \"get_avl_data\":\r\n      return {\r\n        ...state,\r\n        avl_data: action.payload,\r\n        filtered_avl_data:\r\n          process_avl(\r\n            action.payload,\r\n            state.avl_data_filter,\r\n            state.avl_data_sort_field,\r\n            state.avl_data_sort_ascending,\r\n            state.avl_data_special_filter)\r\n      };\r\n\r\n    case \"get_fc_data\":\r\n      return {\r\n        ...state,\r\n        fc_data: action.payload,\r\n        filtered_fc_data:\r\n          process_fc(\r\n            action.payload,\r\n            state.fc_data_filter,\r\n            state.fc_data_sort_field,\r\n            state.fc_data_sort_ascending,\r\n            state.fc_data_special_filter)\r\n      };\r\n\r\n    case \"get_cad_data\":\r\n      return {\r\n        ...state,\r\n        cad_data: action.payload,\r\n        filtered_cad_data:\r\n          process_fc(\r\n            action.payload,\r\n            state.cad_data_filter,\r\n            state.cad_data_sort_field,\r\n            state.cad_data_sort_ascending,\r\n            state.cad_data_special_filter)\r\n      };\r\n\r\n    case \"get_unit_data\":\r\n      return {\r\n        ...state,\r\n        unit_data: action.payload,\r\n        filtered_unit_data:\r\n          process_unit(\r\n            action.payload,\r\n            state.unit_data_filter,\r\n            state.unit_data_sort_field,\r\n            state.unit_data_sort_ascending,\r\n            state.unit_data_special_filter)\r\n      };\r\n\r\n    case \"search_avl_data\":\r\n      return {\r\n        ...state,\r\n        filtered_avl_data:\r\n          process_avl(\r\n            state.avl_data,\r\n            action.payload,\r\n            state.avl_data_sort_field,\r\n            state.avl_data_sort_ascending,\r\n            state.avl_data_special_filter),\r\n        avl_data_filter: action.payload\r\n      };\r\n\r\n    case \"search_fc_data\":\r\n      return {\r\n        ...state,\r\n        filtered_fc_data:\r\n          process_fc(\r\n            state.fc_data,\r\n            action.payload,\r\n            state.fc_data_sort_field,\r\n            state.fc_data_sort_ascending,\r\n            state.fc_data_special_filter),\r\n        fc_data_filter: action.payload\r\n      };\r\n\r\n    case \"search_cad_data\":\r\n      return {\r\n        ...state,\r\n        filtered_cad_data:\r\n          process_cad(\r\n            state.cad_data,\r\n            action.payload,\r\n            state.cad_data_sort_field,\r\n            state.cad_data_sort_ascending,\r\n            state.cad_data_special_filter),\r\n        cad_data_filter: action.payload\r\n      };\r\n\r\n    case \"search_unit_data\":\r\n      return {\r\n        ...state,\r\n        filtered_unit_data:\r\n          process_unit(\r\n            state.unit_data,\r\n            action.payload,\r\n            state.unit_data_sort_field,\r\n            state.unit_data_sort_ascending,\r\n            state.unit_data_special_filter),\r\n        unit_data_filter: action.payload\r\n      };\r\n\r\n    case \"avl_device_history\":\r\n      let showAVLHistory = state.filtered_avl_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload.device_id)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: showAVLHistory\r\n      };\r\n\r\n    case \"fc_device_history\":\r\n      let showFCHistory = state.filtered_fc_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload.device_id)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: showFCHistory\r\n      };\r\n\r\n    case \"cad_device_history\":\r\n      let showCADHistory = state.filtered_cad_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload.unitcode)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: showCADHistory\r\n      };\r\n\r\n    case \"unit_device_history\":\r\n      let showUnitHistory = state.filtered_unit_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload.unitcode)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: showUnitHistory\r\n      };\r\n\r\n\r\n    case \"avl_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: process_avl(state.avl_data, state.avl_data_filter, state.avl_data_sort_field, state.avl_data_sort_ascending, action.payload),\r\n        avl_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"fc_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: process_fc(state.fc_data, state.fc_data_filter, state.fc_data_sort_field, state.fc_data_sort_ascending, action.payload),\r\n        fc_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"cad_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: process_cad(state.cad_data, state.cad_data_filter, state.cad_data_sort_field, state.cad_data_sort_ascending, action.payload),\r\n        cad_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"unit_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: process_cad(state.unit_data, state.unit_data_filter, state.unit_data_sort_field, state.unit_data_sort_ascending, action.payload),\r\n        unit_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"avl_data_sort\":\r\n      let filtered = sort(state.filtered_avl_data, action.payload, !state.avl_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: filtered,\r\n        avl_data_sort_field: action.payload,\r\n        avl_data_sort_ascending: !state.avl_data_sort_ascending\r\n      };\r\n\r\n    case \"fc_data_sort\":\r\n      let filterFC = sort(state.filtered_fc_data, action.payload, !state.fc_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: filterFC,\r\n        fc_data_sort_field: action.payload,\r\n        fc_data_sort_ascending: !state.fc_data_sort_ascending\r\n      };\r\n\r\n    case \"cad_data_sort\":\r\n      let filterCAD = sort(state.filtered_cad_data, action.payload, !state.cad_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: filterCAD,\r\n        cad_data_sort_field: action.payload,\r\n        cad_data_sort_ascending: !state.cad_data_sort_ascending\r\n      };\r\n\r\n    case \"unit_data_sort\":\r\n      let filterUnit = sort(state.filtered_unit_data, action.payload, !state.unit_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: filterUnit,\r\n        unit_data_sort_field: action.payload,\r\n        unit_data_sort_ascending: !state.unit_data_sort_ascending\r\n      };\r\n\r\n    case \"avl_data_toggle_show_errors\":\r\n      let showAVLError = state.filtered_avl_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: showAVLError\r\n      };\r\n\r\n    case \"fc_data_toggle_show_errors\":\r\n      let showFCError = state.filtered_fc_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: showFCError\r\n      };\r\n\r\n    case \"cad_data_toggle_show_errors\":\r\n      let showCADError = state.filtered_cad_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: showCADError\r\n      };\r\n\r\n    case \"unit_data_toggle_show_errors\":\r\n      let showUnitError = state.filtered_unit_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: showUnitError\r\n      };\r\n\r\n    case \"avl_data_toggle_show_unit_options\":\r\n      let showAVLUO = state.filtered_avl_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_unit_options = !a.show_unit_options;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: showAVLUO\r\n      };\r\n\r\n    case \"fc_data_toggle_show_unit_options\":\r\n      let showFCUO = state.filtered_fc_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_unit_options = !a.show_unit_options;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: showFCUO\r\n      };\r\n\r\n    case \"unit_data_toggle_show_unit_options\":\r\n      let showUnitControls = state.filtered_unit_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload)\r\n        {\r\n          a.show_unit_options = !a.show_unit_options;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: showUnitControls\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction filter_avl(arrayToFilter:Array<AVLData>, filterUsing:string): Array<AVLData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  //let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1 || j.device_id.toLowerCase().indexOf(s) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n    //return j.device_id.toLowerCase().indexOf(f) > -1 ||\r\n    //  j.unitcode.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_fc(arrayToFilter: Array<FleetCompleteData>, filterUsing: string): Array<FleetCompleteData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  //let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1 || j.device_id.toLowerCase().indexOf(s) > -1 || j.asset_tag.toLowerCase().indexOf(s) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n    //return j.device_id.toLowerCase().indexOf(f) > -1 ||\r\n    //  j.unitcode.toLowerCase().indexOf(f) > -1 || \r\n    //  j.asset_tag.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_cad(arrayToFilter: Array<FleetCompleteData>, filterUsing: string): Array<FleetCompleteData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  //let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n    //return j.unitcode.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_unit(arrayToFilter: Array<UnitData>, filterUsing: string): Array<UnitData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let split = filterUsing.toLowerCase().split(\",\");\r\n  let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    let check = false;\r\n    for (let s of split)\r\n    {\r\n      s = s.trim();\r\n      check = (j.unitcode.toLowerCase().indexOf(s) > -1 || j.group_label.toLowerCase().indexOf(s) > -1 || j.using_unit.toLowerCase().indexOf(f) > -1);\r\n      if (check) break;\r\n    }\r\n    return check;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction special_filter(array: Array<any>, specialFilter: string): Array<any>\r\n{\r\n  if (specialFilter.length === 0) return array;\r\n  switch (specialFilter)\r\n  {\r\n    case \"error\":\r\n      let filtered = array.filter(d => d.error_information.length > 0);\r\n      return filtered;\r\n\r\n    case \"asset_tag\":\r\n      return array.filter(d => d.has_asset_tag_error);\r\n\r\n    case \"date\":\r\n      return array.filter(d => d.has_date_error);\r\n\r\n    case \"location\":\r\n      return array.filter(d => d.has_location_error);\r\n\r\n    case \"unit\":\r\n      return array.filter(d => d.has_unit_error);\r\n\r\n    case \"cad\":\r\n      return array.filter(d => d.has_cad_error);\r\n\r\n    case \"avl\":\r\n      return array.filter(d => d.has_avl_error);\r\n\r\n    case \"fc\":\r\n      return array.filter(d => d.has_fc_error);\r\n\r\n    default:\r\n      return array;\r\n  }  \r\n}\r\n\r\nfunction sort(array: Array<any>, field: string, ascending: boolean) : Array<any>\r\n{\r\n  const date_fields = ['updated_on', 'location_timestamp'];\r\n  if (date_fields.indexOf(field) > -1) return sort_dates(array, field, ascending);\r\n  let sorted = array.sort((a, b) =>\r\n  {\r\n    if (a[field] > b[field]) return ascending ? 1 : -1;\r\n    if (b[field] > a[field]) return ascending ? -1 : 1;\r\n    return 0;\r\n  });\r\n  return sorted;\r\n}\r\n\r\nfunction sort_dates(array: Array<any>, field: string, ascending: boolean): Array<any>\r\n{\r\n  let sorted = array.sort((a, b) =>\r\n  {\r\n    if (new Date(a[field]) > new Date(b[field])) return ascending ? 1 : -1;\r\n    if (new Date(b[field]) > new Date(a[field])) return ascending ? -1 : 1;\r\n    return 0;\r\n  });\r\n  return sorted;\r\n}\r\n\r\nfunction process_avl(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_avl(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nfunction process_fc(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_fc(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nfunction process_cad(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_cad(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nfunction process_unit(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_unit(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nexport function StoreProvider(props: any): JSX.Element\r\n{\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (<Store.Provider value={{ state, dispatch }}>{props.children}</Store.Provider>);\r\n}\r\n\r\n","import React from 'react';\nimport { Store } from './Store';\n\nconst Nav = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  const closeBaseMapDropdown = () =>\r\n  {\r\n    let e = document.getElementById(\"nav_basemap_dropdown\");\r\n    if (e === null) return;\r\n    e.classList.remove(\"is-active\");\r\n  }\n\n  return (\n    <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <h1 className=\"navbar-item is-size-3 has-text-weight-bold\">Vehicle Control</h1>\r\n      </div>\r\n      <div className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <p            \r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"unit\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"unit\" ? 'is-active' : ''} `}>\r\n            Units\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"avl\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"avl\" ? 'is-active' : ''} `}>\r\n            AVL\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"fc\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"fc\" ? 'is-active' : ''} `}>\r\n            Fleet Complete\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"cad\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"cad\" ? 'is-active' : ''} `}>\r\n            CAD\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"map\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"map\" ? 'is-active' : ''} `}>\r\n            Map            \r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          style={{paddingRight: \"4em\"}}\r\n          className=\"navbar-end\">\r\n          <div\r\n            id=\"nav_basemap_dropdown\"\r\n            className=\"navbar-item has-dropdown\">\r\n            <a className=\"navbar-link\"\r\n              onClick={event =>\r\n              {\r\n                let e = document.getElementById(\"nav_basemap_dropdown\");\r\n                if (e === null) return;\r\n                let isActive = e.classList.contains(\"is-active\");\r\n                let basemaps = document.querySelectorAll(\".esri-basemap-gallery__item\");\r\n                basemaps.forEach(b =>\r\n                {\r\n                  if (!isActive)\r\n                  {\r\n                    b.addEventListener(\"click\", closeBaseMapDropdown);\r\n                  }\r\n                  else\r\n                  {\r\n                    b.removeEventListener(\"click\", closeBaseMapDropdown);\r\n                  }\r\n                });\r\n                e.classList.toggle(\"is-active\");\r\n              }}\r\n            >\r\n              Select Base Map\r\n            </a>\r\n            <div id=\"basemap-navbar-dropdown\"\r\n              className=\"navbar-dropdown\">\r\n              <div\r\n                className=\"navbar-item\">\r\n                <div id=\"basemap_selector_container\"></div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"nav_layerlist_dropdown\"\r\n            className=\"navbar-item has-dropdown\">\r\n            <a className=\"navbar-link\"\r\n              onClick={event =>\r\n              {\r\n                let e = document.getElementById(\"nav_layerlist_dropdown\");\r\n                if (e === null) return;\r\n                //let isActive = e.classList.contains(\"is-active\");\r\n                e.classList.toggle(\"is-active\");\r\n              }}\r\n            >\r\n              View Layers\r\n            </a>\r\n            <div className=\"navbar-dropdown\">\r\n              <div\r\n                className=\"navbar-item\">\r\n                <div id=\"layerlist_selector_container\"></div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <p className=\"navbar-item\"></p>\r\n        </div>\r\n      </div>\r\n    </nav>\n  );\n}\n\nexport default Nav;\n","//namespace Utilities\r\n//{\r\n  const app_path = \"/vehiclecontrol\";\r\n\r\n  export function Hide(e: string): void\r\n  export function Hide(e: HTMLElement): void\r\n  export function Hide(e: Element): void\r\n  export function Hide(e: any):void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show(e: string): void\r\n  export function Show(e: HTMLElement): void\r\n  export function Show(e: Element): void\r\n  export function Show(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline(e: string): void\r\n  export function Show_Inline(e: HTMLElement): void\r\n  export function Show_Inline(e: Element): void\r\n  export function Show_Inline(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline_Flex(e: string): void\r\n  export function Show_Inline_Flex(e: HTMLElement): void\r\n  export function Show_Inline_Flex(e: Element): void\r\n  export function Show_Inline_Flex(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Flex(e: string): void\r\n  export function Show_Flex(e: HTMLElement): void\r\n  export function Show_Flex(e: Element): void\r\n  export function Show_Flex(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show\");\r\n  }\r\n\r\n  export function Error_Show(e: string, errorText?: Array<string>, timeout?: boolean): void\r\n  export function Error_Show(e: string, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: HTMLElement, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: Element, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: any, errorText?: any, timeout?: boolean): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    if (errorText)\r\n    {\r\n      //Set_Text(e, errorText);\r\n      Clear_Element(e);\r\n      let notification = document.createElement(\"div\");\r\n      notification.classList.add(\"notification\");\r\n      notification.classList.add(\"is-danger\");\r\n      let deleteButton = document.createElement(\"button\");\r\n      deleteButton.classList.add(\"delete\");\r\n      deleteButton.onclick = () =>\r\n      {\r\n        Hide(e);\r\n      }\r\n      notification.appendChild(deleteButton);\r\n      if (Array.isArray(errorText))\r\n      {\r\n        // we're assuming that errorText is an array if we get here.\r\n        let ul = document.createElement(\"ul\");\r\n        errorText.forEach((et) =>\r\n        {\r\n          let li = document.createElement(\"li\");\r\n          li.appendChild(document.createTextNode(<string>et));\r\n          ul.appendChild(li);\r\n        });\r\n        notification.appendChild(ul);\r\n      } else\r\n      {\r\n        notification.appendChild(document.createTextNode(errorText));\r\n\r\n      }\r\n\r\n      (<HTMLElement>e).appendChild(notification);\r\n\r\n    }\r\n    Show(e);\r\n    if (timeout === undefined || timeout === true)\r\n    {\r\n      window.setTimeout(function (j)\r\n      {\r\n        Hide(e);\r\n      }, 30000)\r\n    }\r\n  }\r\n\r\n  export function Simple_Error_Show(e: Element, errorText: string): void\r\n  {\r\n    Clear_Element(<HTMLElement>e);\r\n    e.appendChild(document.createTextNode(errorText));\r\n  }\r\n\r\n  export function Clear_Element(node: HTMLElement): void\r\n  { // this function just emptys an element of all its child nodes.\r\n    if (node === null || node === undefined) return;\r\n    while (node.firstChild)\r\n    {\r\n      node.removeChild(node.firstChild);\r\n    }\r\n  }\r\n\r\n  export function Create_Option(value: string, label: string, selected: boolean = false): HTMLOptionElement\r\n  {\r\n    let o = document.createElement(\"option\");\r\n    o.value = value;\r\n    o.text = label;\r\n    o.selected = selected;\r\n    return o;\r\n  }\r\n\r\n  export function Get_Value(e: string): string\r\n  export function Get_Value(e: HTMLSelectElement): string\r\n  export function Get_Value(e: HTMLInputElement): string\r\n  export function Get_Value(e: any): string\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    return (<HTMLInputElement>e).value;\r\n  }\r\n\r\n  export function Set_Value(e: string, value: string): void\r\n  export function Set_Value(e: HTMLSelectElement, value: string): void\r\n  export function Set_Value(e: HTMLInputElement, value: string): void\r\n  export function Set_Value(e: any, value: string): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    (<HTMLInputElement>e).value = value;\r\n  }\r\n\r\n  export function Set_Text(e: string, value: string): void\r\n  export function Set_Text(e: HTMLElement, value: string): void\r\n  export function Set_Text(e: any, value: string): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    Clear_Element(e);\r\n    (<HTMLElement>e).appendChild(document.createTextNode(value));\r\n  }\r\n\r\n  //export function Show_Menu(elementId: string)\r\n  //{\r\n  //  //let element = e.srcElement;\r\n  //  // we expect the element's id to be in a \"nav-XXX\" name format, where \r\n  //  // XXX is the element we want to show \r\n  //  let id = elementId.replace(\"nav-\", \"\");\r\n  //  let menuItems = <NodeListOf<HTMLElement>>document.querySelectorAll(\"#menuTabs > li > a\");\r\n  //  if (menuItems.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < menuItems.length; i++)\r\n  //    {\r\n  //      let item = menuItems.item(i);\r\n  //      if (item.id === elementId)\r\n  //      {\r\n  //        item.parentElement.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.parentElement.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //  Show_Hide_Selector(\"#views > section\", id);\r\n  //}\r\n\r\n  //export function Handle_Tabs(tabSelector: string, containerSelector: string, id: string)\r\n  //{\r\n  //  Activate_Inactivate_Selector(tabSelector, \"nav-\" + id);\r\n  //  Show_Hide_Selector(containerSelector, id);\r\n  //}\r\n\r\n  //export function Activate_Inactivate_Selector(selector: string, id: string)\r\n  //{\r\n  //  let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n  //  if (sections.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < sections.length; i++)\r\n  //    {\r\n  //      let item = sections.item(i);\r\n  //      if (item.id === id)\r\n  //      {\r\n  //        item.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //}\r\n\r\n  export function Show_Hide_Selector(selector: string, id: string)\r\n  {\r\n    let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n    if (sections.length > 0)\r\n    {\r\n      for (let i = 0; i < sections.length; i++)\r\n      {\r\n        let item = sections.item(i);\r\n        if (item.id === id)\r\n        {\r\n          Show(item);\r\n        }\r\n        else\r\n        {\r\n          Hide(item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // original Get Function\r\n  //export function Get<T>(url: string): Promise<T>\r\n  //{\r\n  //  return fetch(url,\r\n  //    {\r\n  //      method: \"GET\",\r\n  //      headers: {\r\n  //        \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n  //      },\r\n  //      cache: \"no-cache\",\r\n  //      credentials: \"include\"\r\n  //    }\r\n  //  )\r\n  //    .then(response =>\r\n  //    {\r\n  //      if (!response.ok)\r\n  //      {\r\n  //        throw new Error(response.statusText)\r\n  //      }\r\n  //      return response.json();\r\n  //    });\r\n  //}\r\n\r\n  export function Get_Path(app_name: string = \"\"): string\r\n  {\r\n    if (app_name.length === 0) app_name = app_path;\r\n    \r\n    let path = \"/\";\r\n    let i = window.location.pathname.toLowerCase().indexOf(app_name);\r\n    if (i === 0)\r\n    {\r\n      path = app_name + \"/\";\r\n    }\r\n    console.log('using app path ' + app_path, ' returning: ' + path);\r\n    return path;\r\n  }\r\n\r\n  export async function Get_Empty(url: string): Promise<string>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.text();\r\n  }\r\n\r\n  export async function Get<T>(url: string): Promise<T>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.json();\r\n  }\r\n\r\n  export async function Post<T>(url: string, data: object): Promise<T>\r\n  {\r\n    const response = await fetch(Get_Path() + url,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText)\r\n    }\r\n    return response.json();\r\n\r\n  }\r\n\r\n  export async function Post_Empty(url: string, data: object): Promise<Response>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"POST\",\r\n        body: data !== null ? JSON.stringify(data) : \"\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    return response;\r\n  }\r\n\r\n  export function Format_Amount(amount: number): string\r\n  {\r\n    return amount.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n  }\r\n\r\n  export function Format_Date(date: Date): string\r\n  export function Format_Date(date: string): string\r\n  export function Format_Date(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleDateString('en-us');\r\n    }\r\n    var d = new Date(date);\r\n    return d.toLocaleDateString('en-US');\r\n  }\r\n\r\n  export function Format_DateTime(date: Date): string\r\n  export function Format_DateTime(date: string): string\r\n  export function Format_DateTime(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleString('en-us');\r\n    }\r\n    return new Date(date).toLocaleString('en-US');\r\n  }\r\n\r\n  export function Validate_Text(e: string, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLInputElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLSelectElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: any, errorElementId: string, errorText: string): string\r\n  {\r\n    // this should only be used for required elements.\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let ele = (<HTMLInputElement>e);\r\n    ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.remove(\"is-danger\") : ele.classList.remove(\"is-danger\");\r\n    let v = Get_Value(ele).trim();\r\n    if (v.length === 0)\r\n    {\r\n      ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.add(\"is-danger\") : ele.classList.add(\"is-danger\");\r\n      Error_Show(errorElementId, errorText);\r\n      ele.focus();\r\n      ele.scrollTo();\r\n      return \"\";\r\n    }\r\n    return v;\r\n\r\n  }\r\n\r\n  export function Toggle_Loading_Button(e: string, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: HTMLButtonElement, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: any, disabled: boolean)\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let b = <HTMLButtonElement>e;\r\n    b.disabled = disabled;\r\n    b.classList.toggle(\"is-loading\", disabled);\r\n  }\r\n\r\n  //export function Create_Menu_Element(menuItem: MenuItem): HTMLLIElement\r\n  //{\r\n  //  let li = document.createElement(\"li\");\r\n  //  if (menuItem.selected) li.classList.add(\"is-active\");\r\n\r\n\r\n  //  let a = document.createElement(\"a\");\r\n  //  a.id = menuItem.id;\r\n  //  a.onclick = function ()\r\n  //  {\r\n  //    Update_Menu(menuItem);\r\n  //  }\r\n  //  if (menuItem.icon.length > 0)\r\n  //  {\r\n  //    let span = document.createElement(\"span\");\r\n  //    span.classList.add(\"icon\");\r\n  //    span.classList.add(Transaction.app_input_size);\r\n  //    let i = document.createElement(\"i\");\r\n  //    let icons = menuItem.icon.split(\" \");\r\n  //    for (let icon of icons)\r\n  //    {\r\n  //      i.classList.add(icon);\r\n  //    }\r\n  //    span.appendChild(i);\r\n  //    a.appendChild(span);\r\n  //  }\r\n  //  a.appendChild(document.createTextNode(menuItem.label))\r\n  //  li.appendChild(a);\r\n  //  return li;\r\n  //}\r\n\r\n  //export function Update_Menu(menuItem: MenuItem): void\r\n  //{\r\n  //  Set_Text(\"menuTitle\", menuItem.title);\r\n  //  Set_Text(\"menuSubTitle\", menuItem.subTitle);\r\n  //  Show_Menu(menuItem.id);\r\n  //  document.getElementById(menuItem.autofocusId).focus();\r\n  //}\r\n\r\n  //export function Build_Menu_Elements(target: string, Menus: Array<MenuItem>): void\r\n  //{\r\n  //  let menu = document.getElementById(target);\r\n  //  for (let menuItem of Menus)\r\n  //  {\r\n  //    menu.appendChild(Utilities.Create_Menu_Element(menuItem));\r\n  //  }\r\n  //}\r\n\r\n\r\n  //export function CheckBrowser()\r\n  //{\r\n  //  let browser: string = \"\";\r\n  //  if ((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1) \r\n  //  {\r\n  //    browser = 'Opera';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Chrome\") != -1)\r\n  //  {\r\n  //    browser = 'Chrome';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Safari\") != -1)\r\n  //  {\r\n  //    browser = 'Safari';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Firefox\") != -1) \r\n  //  {\r\n  //    browser = 'Firefox';\r\n  //  }\r\n  //  else if ((navigator.userAgent.indexOf(\"MSIE\") != -1) || (!!document.DOCUMENT_NODE == true)) //IF IE > 10\r\n  //  {\r\n  //    browser = 'IE';\r\n  //  }\r\n  //  else \r\n  //  {\r\n  //    browser = 'unknown';\r\n  //  }\r\n  //  return browser;\r\n  //}\r\n\r\n  \r\n\r\n  //export function Create_Centered_Level(level_items: Array<LevelItem>, left: Array<LevelItem> = [], right: Array<LevelItem> = []): HTMLElement\r\n  //{\r\n  //  let level = document.createElement(\"div\");\r\n  //  level.classList.add(\"level\");\r\n\r\n  //  for (let li of level_items)\r\n  //  {\r\n  //    level.appendChild(Create_Level_Item(li));\r\n  //  }\r\n  //  if (left.length > 0)\r\n  //  {\r\n  //    let leftcontainer = document.createElement(\"div\");\r\n  //    leftcontainer.classList.add(\"level-left\");\r\n  //    level.appendChild(leftcontainer);\r\n\r\n  //    for (let li of left)\r\n  //    {\r\n  //      leftcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n  //  if (right.length > 0)\r\n  //  {\r\n  //    let rightcontainer = document.createElement(\"div\");\r\n  //    rightcontainer.classList.add(\"level-right\");\r\n  //    level.appendChild(rightcontainer);\r\n\r\n  //    for (let li of right)\r\n  //    {\r\n  //      rightcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n\r\n  //  return level;\r\n  //}\r\n\r\n  //function Create_Level_Item(level_item: LevelItem): HTMLElement\r\n  //{\r\n  //  let levelitem = document.createElement(\"div\");\r\n  //  levelitem.classList.add(\"level-item\", ...level_item.classes);\r\n  //  let container = document.createElement(\"div\");\r\n  //  levelitem.appendChild(container);\r\n  //  if (level_item.heading.length > 0)\r\n  //  {\r\n  //    let heading = document.createElement(\"p\");\r\n  //    heading.classList.add(\"heading\");\r\n  //    heading.appendChild(document.createTextNode(level_item.heading));\r\n  //    container.appendChild(heading);\r\n  //  }\r\n  //  if (level_item.title_text.length > 0)\r\n  //  {\r\n  //    let title = document.createElement(\"p\");\r\n  //    title.classList.add(\"title\");\r\n  //    title.appendChild(document.createTextNode(level_item.title_text));\r\n  //    container.appendChild(title);\r\n  //  }\r\n  //  else\r\n  //  {\r\n  //    if (level_item.title !== null)\r\n  //    {\r\n  //      container.appendChild(level_item.title);\r\n  //    }\r\n  //  }\r\n  //  return levelitem;\r\n  //}\r\n\r\n  export function CreateTableCell(celltype: string, value: string, class_to_add: string, width: string = \"\", col_span: number = -1): HTMLTableCellElement\r\n  {\r\n    if (celltype !== \"td\" && celltype !== \"th\") celltype = \"td\";\r\n    let cell = <HTMLTableCellElement>document.createElement(celltype);\r\n    if (width.length > 0) cell.style.width = width;\r\n    if (value.length > 0) cell.appendChild(document.createTextNode(value));\r\n    if (class_to_add.length > 0) cell.classList.add(class_to_add);\r\n    if (col_span > -1) cell.colSpan = col_span;\r\n    return cell;\r\n  }\r\n\r\n//}\r\n\r\n//export default Utilities;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IAVLData\r\n{\r\n  device_id: string;\r\n  device_type: string;\r\n  unitcode: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  satellite_count: number;\r\n  velocity: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class AVLData implements IAVLData\r\n{\r\n  public device_id: string = \"\";\r\n  public device_type: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public satellite_count: number = 0;\r\n  public velocity: number = 0;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n  \r\n  public static async Get(): Promise<Array<AVLData>>\r\n  {\r\n    const data = await Get<Array<AVLData>>('API/AVL/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(device_id: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/AVL/Delete?device_id=\" + device_id, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(device_id: string, device_type: string, unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/AVL/Update?device_id=${device_id}&device_type=${device_type}&unitcode=${unitcode}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default AVLData;","import React from 'react';\r\nimport { IErrorInformation } from './interfaces';\r\n\r\nconst ErrorInformation = (props: IErrorInformation) =>\r\n{\r\n  if (!props.show_errors) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      </td>\r\n      <td colSpan={props.colspan - 1}>\r\n        <ul>\r\n          {props.error_information.map(\r\n            (errorText, index) =>\r\n            {\r\n              return (\r\n                <li key={index}>\r\n                  {errorText}\r\n                </li>\r\n              )\r\n            })}\r\n        </ul>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ErrorInformation;","import React, { useState } from 'react';\r\nimport { IUnitOptions } from './interfaces';\r\n//import AVLData from './AVLData';\r\n//import { Store } from './Store';\r\n\r\nconst UnitOptions = (props: IUnitOptions) =>\r\n{\r\n  const [currentUnit, setCurrentUnit] = useState(\"\");\r\n\r\n  if (!props.show_unit_options) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      </td>\r\n      <td colSpan={2}\r\n        className=\"has-text-right\">\r\n        Current Unit:\r\n      </td>\r\n      <td>\r\n        {props.unitcode.length === 0 ? 'None' : props.unitcode}\r\n      </td>\r\n      <td className=\"has-text-right\">\r\n        Change To:\r\n      </td>\r\n      <td colSpan={2}>\r\n        <div className=\"field has-addons\">\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input is-small\"\r\n              type=\"text\"\r\n              onChange={event => setCurrentUnit(event.target.value)}\r\n              value={currentUnit}\r\n              placeholder=\"New Unit\" />\r\n          </div>\r\n          <div className=\"control\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={async event =>\r\n              {\r\n                event.preventDefault();\r\n                console.log('props asset_tag', props.asset_tag);\r\n                if (props.asset_tag)\r\n                {\r\n                  props.update_data(props.asset_tag, currentUnit.trim());\r\n                }\r\n                else\r\n                {\r\n                  props.update_data(props.device_id, props.device_type, currentUnit.trim());\r\n                }\r\n              }}\r\n              className=\"button is-success is-small\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UnitOptions;","import { Get } from './Utilities';\r\n\r\ninterface IUnitHistory\r\n{\r\n  id: number;\r\n  unitcode: string;\r\n  field: string;\r\n  changed_from: string;\r\n  changed_to: string;\r\n  changed_on: Date;\r\n  changed_by: string;\r\n  error_message: string;\r\n}\r\n\r\nexport class UnitHistory implements IUnitHistory\r\n{\r\n  public id: number = -1;\r\n  public unitcode: string = \"\";\r\n  public field: string = \"\";\r\n  public changed_from: string = \"\";\r\n  public changed_to: string = \"\";\r\n  public changed_on: Date = new Date();\r\n  public changed_by: string = \"\";\r\n  public error_message: string = \"\";\r\n\r\n  public static async GetByUnit(unitcode: string): Promise<Array<UnitHistory>>\r\n  {\r\n    const data = await Get<Array<UnitHistory>>('API/History/Unit?unit=' + unitcode);\r\n    return data;\r\n  }\r\n\r\n  public static async GetByDeviceId(device_id: string): Promise<Array<UnitHistory>>\r\n  {\r\n    const data = await Get<Array<UnitHistory>>('API/History/DeviceId?deviceId=' + device_id);\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default UnitHistory;","import React from 'react';\r\nimport { IUnitHistoryList } from './interfaces';\r\n//import UnitHistory from './UnitHistory';\r\nimport { Format_DateTime } from './Utilities';\r\n\r\nconst UnitHistoryList = (props: IUnitHistoryList) =>\r\n{\r\n  if (!props.history || props.history.length === 0) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        \r\n      </td>\r\n      <td colSpan={props.colspan - 1}>\r\n        <table className=\"table is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                className=\"has-text-centered\"\r\n                colSpan={props.colspan}>\r\n                {props.title}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Unitcode\r\n              </th>\r\n              <th>\r\n                Field\r\n              </th>\r\n              <th>\r\n                Changed From\r\n              </th>\r\n              <th>\r\n                Changed To\r\n              </th>\r\n              <th>\r\n                Changed On\r\n              </th>\r\n              <th>\r\n                Changed By\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.history.map(\r\n              (h) =>\r\n              {\r\n                if (h.error_message.length > 0)\r\n                {\r\n                  return (\r\n                    <tr key={h.id}>\r\n                      <td colSpan={6}>{h.error_message}</td>\r\n                    </tr>\r\n                  )\r\n                }\r\n                else\r\n                {\r\n                  return (\r\n                    <tr key={h.id}>\r\n                      <td>\r\n                        {h.unitcode}\r\n                      </td>\r\n                      <td>\r\n                        {h.field}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_from}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_to}\r\n                      </td>\r\n                      <td>\r\n                        {Format_DateTime(h.changed_on)}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_by}\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UnitHistoryList;","import React from 'react';\r\nimport AVLData from './AVLData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { IAVLDataWithIndex } from '../interfaces';\r\n\r\nconst AVL = (props:IAVLDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const UpdateAVLData = async (device_id:string, device_type: string, current_unit: string) =>\r\n  {\r\n    const response = await AVLData.Update(device_id, device_type, current_unit);\r\n    if (response.ok)\r\n    {\r\n      fetchAVLData();\r\n    }\r\n    else\r\n    {\r\n      alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n    }\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  const fetchAVLData = async () =>\r\n  {\r\n    const data = await AVLData.Get();\r\n    return dispatch({ type: 'get_avl_data', payload: data });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          {props.device_id}\r\n          {props.latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(225,0,0)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.longitude, props.latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          <span className=\"icon\">\r\n            <i className={`fas ${props.device_type === \"Phone Number\" ? \"fa-phone\" : \"fa-sim-card\"}`}></i>\r\n          </span>\r\n          \r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Device's unit\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: 'avl_data_toggle_show_unit_options', payload: props.device_id });\r\n            }}>\r\n            {props.unitcode.length === 0 ? 'Add' : props.unitcode}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'avl_data_toggle_show_errors', payload: props.device_id });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByDeviceId(props.device_id);\r\n                dispatch({\r\n                  type: 'avl_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'avl_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await AVLData.Delete(props.device_id);\r\n              if (response.ok)\r\n              {\r\n                fetchAVLData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <UnitOptions\r\n        colspan={7}\r\n        new_unitcode=\"\"\r\n        update_data = {UpdateAVLData}\r\n        {...props} />\r\n      <ErrorInformation\r\n        colspan={7}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={7}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default AVL;","import React, { useState, useEffect } from 'react';\r\nimport { Store } from './Store';\r\n//import { IFetchData } from './interfaces';\r\n\r\nexport const useFetchData = (baseFetchData: Function, dispatch_type: string, initial_load: boolean) =>\r\n{\r\n  const { dispatch } = React.useContext(Store);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const fetchData = async () =>\r\n  {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n\r\n    try\r\n    {\r\n      const result = await baseFetchData();\r\n      dispatch({ type: dispatch_type, payload: result });\r\n\r\n    } catch (error)\r\n    {\r\n      setIsError(true);\r\n      console.log('error in useFetchData', error);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    initial_load && fetchData();\r\n  }, []);\r\n\r\n  return { isLoading, isError, fetchData };\r\n}\r\n\r\nexport default useFetchData;","import React, { useState, useEffect } from 'react';\r\nimport { Store } from './Store';\r\nimport { IListHeader, IHeaderFilter } from './interfaces';\r\n\r\nexport const ListHeaderView = (\r\n  {\r\n    title,\r\n    title_description,\r\n    search_type,\r\n    loading,\r\n    fetchData,\r\n    data_filter,\r\n    special_filter,\r\n    header_filters }: IListHeader) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const [currentSearch, setCurrentSearch] = useState(data_filter || \"\");\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [loading, data_filter, special_filter]);\r\n\r\n  return (\r\n    <div\r\n      style={{ padding: \"1em\", marginBottom: 0 }}\r\n      className=\"level\">\r\n      <div className=\"level-left\">\r\n        <div className=\"level-item is-size-3 has-text-weight-bold\">\r\n          {title}\r\n        </div>\r\n        <div className=\"level-item\">\r\n          <div className=\"field\">\r\n            <div\r\n              className={`control ${loading ? 'is-loading' : ''}`}>\r\n              <input\r\n                className=\"input is-small\"\r\n                title={title_description}\r\n                type=\"text\"                \r\n                placeholder=\"Search\"\r\n                onChange={event => setCurrentSearch(event.target.value)}\r\n                value={currentSearch}\r\n                onKeyDown={event =>\r\n                {\r\n                  if (event.key === 'Enter')\r\n                  {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    dispatch({\r\n                      type: search_type,\r\n                      payload: currentSearch\r\n                    })\r\n                  }\r\n\r\n                }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={event =>\r\n            {\r\n              event.preventDefault();\r\n              fetchData();\r\n            }}\r\n            title=\"Refresh data\"\r\n            type=\"button\"\r\n            className={`button is-success is-small ${loading ? 'is-loading' : ''}`}>\r\n            <span className=\"icon is-small\">\r\n              <i className=\"fas fa-sync-alt\"></i>\r\n            </span>\r\n          </button>\r\n          <button\r\n            style={{ marginLeft: \".5em\" }}\r\n            onClick={event =>\r\n            {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              setCurrentSearch(\"\");\r\n              dispatch({\r\n                type: search_type,\r\n                payload: ''\r\n              })\r\n            }}\r\n            title=\"Reset the Search\"\r\n            type=\"button\"\r\n            className=\"button is-warning is-small\">\r\n            <span className=\"icon is-small\">\r\n              <i className=\"fas fa-undo-alt\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"level-right\">\r\n        <p className=\"level-item has-text-weight-bold\">Filters</p>\r\n        <div className=\"level-item tabs\">\r\n          <ul>\r\n            {\r\n              header_filters.map(f =>\r\n              {\r\n                return (\r\n                  <li\r\n                    className={`${state[special_filter] === f.value ? 'is-active' : ''}`}\r\n                    key={f.id}>\r\n                    <a\r\n                      onClick={event => dispatch({ type: special_filter, payload: f.value })}>\r\n                      {f.label}\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListHeaderView;","import React, { useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport AVLData from './AVLData';\r\nimport AVL from './AVL';\r\nimport { useFetchData } from '../useFetchData';\r\nimport ListHeaderView from '../ListHeaderView';\r\nimport { AVLHeader } from '../ListHeaders';\r\n//import { useInterval } from '../useInterval';\r\n\r\nconst AVLList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  //let isLoading, isError, fetchData;\r\n  const { isLoading, isError, fetchData } = useFetchData(AVLData.Get, \"get_avl_data\", false);\r\n\r\n  const Header = AVLHeader(isLoading, fetchData, state.avl_data_filter);\r\n\r\n  //useInterval(() =>\r\n  //{\r\n  //  console.log(\"automatically refreshing avl\");\r\n  //  fetchData();\r\n  //}, 60000);\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_avl_data,\r\n    state.avl_data_filter,\r\n    state.avl_data_sort_field,\r\n    state.avl_data_sort_ascending,\r\n    state.avl_data_special_filter]);\r\n\r\n  return (\r\n    <section>\r\n\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n  \r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDeviceId\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'device_id' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'device_id' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Device Id\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDeviceType\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'device_type' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'device_type' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Type\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'unitcode' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'updated_on' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'location_timestamp' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_avl_data.map((avl, index) =>\r\n          {\r\n            return (<AVL key={avl.device_id} index={index} {...avl} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AVLList;","export const AVLHeader = (isLoading: boolean, fetchData: Function, data_filter: string) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"AVL\",\r\n    title_description: \"Search for text in the Device Id and Unit fields. Search for multiple items by separating with comma. Hit Enter to Search.\",\r\n    search_type: \"search_avl_data\",\r\n    fetchData: fetchData,\r\n    data_filter: data_filter,\r\n    special_filter: \"avl_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"All Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"Unit\",\r\n        value: \"unit\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"Date\",\r\n        value: \"date\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"Location\",\r\n        value: \"location\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nexport const FCHeader = (isLoading: boolean, fetchData: Function, data_filter: string) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"FC\",\r\n    title_description: \"Search for text in the Device Id, Unit, and Asset Tag fields. Search for multiple items by separating with comma. Hit Enter to Search.\",\r\n    search_type: \"search_fc_data\",\r\n    fetchData: fetchData,\r\n    data_filter: data_filter,\r\n    special_filter: \"fc_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"Asset Tag\",\r\n        value: \"asset_tag\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"Unit\",\r\n        value: \"unit\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"Date\",\r\n        value: \"date\"\r\n      },\r\n      {\r\n        id: 5,\r\n        label: \"Location\",\r\n        value: \"location\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nexport const CADHeader = (isLoading: boolean, fetchData: Function, data_filter: string) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"CAD\",\r\n    title_description: \"Search for text in the UnitCode field. Search for multiple items by separating with comma. Hit Enter to Search.\",\r\n    search_type: \"search_cad_data\",\r\n    fetchData: fetchData,\r\n    data_filter: data_filter,\r\n    special_filter: \"cad_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"Date\",\r\n        value: \"date\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"Location\",\r\n        value: \"location\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nexport const UnitHeader = (isLoading: boolean, fetchData: Function, data_filter: string) =>\r\n{\r\n  return {\r\n    loading: isLoading,\r\n    title: \"Unit\",\r\n    title_description: \"Search for text in the Device Id, Unit, and Asset Tag fields. Search for multiple items by separating with comma.  Hit Enter to Search.\",\r\n    search_type: \"search_unit_data\",\r\n    fetchData: fetchData,\r\n    data_filter: data_filter,\r\n    special_filter: \"unit_data_special_filter\",\r\n    header_filters: [\r\n      {\r\n        id: 0,\r\n        label: \"Show All\",\r\n        value: \"\"\r\n      },\r\n      {\r\n        id: 1,\r\n        label: \"Errors\",\r\n        value: \"error\"\r\n      },\r\n      {\r\n        id: 2,\r\n        label: \"AVL\",\r\n        value: \"avl\"\r\n      },\r\n      {\r\n        id: 3,\r\n        label: \"FC\",\r\n        value: \"fc\"\r\n      },\r\n      {\r\n        id: 4,\r\n        label: \"CAD\",\r\n        value: \"cad\"\r\n      }\r\n    ]\r\n  };\r\n}\r\n","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IFleetCompleteData\r\n{\r\n  device_id: string;\r\n  asset_tag: string\r\n  unitcode: string;\r\n  vin: string;\r\n  make: string;\r\n  model: string;\r\n  vehicle_year: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  updated_on: Date;\r\n  velocity: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_asset_tag_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class FleetCompleteData implements IFleetCompleteData\r\n{\r\n  public device_id: string = \"\";\r\n  public asset_tag: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public vin: string = \"\";\r\n  public make: string = \"\";\r\n  public model: string = \"\";\r\n  public vehicle_year: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public updated_on: Date = new Date();\r\n  public velocity: number = 0;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;  \r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_asset_tag_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<FleetCompleteData>>\r\n  {\r\n    const data = await Get<Array<FleetCompleteData>>('API/FC/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(device_id: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/FC/Delete?device_id=\" + device_id, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(asset_tag: string, unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/FC/Update?asset_tag=${asset_tag}&unitcode=${unitcode}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default FleetCompleteData;","import React from 'react';\r\nimport FleetCompleteData from './FleetCompleteData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { IFCDataWithIndex } from '../interfaces';\r\n\r\nconst FC = (props: IFCDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const updateFCData = async (asset_tag: string, current_unit: string) =>\r\n  {\r\n    const response = await FleetCompleteData.Update(asset_tag, current_unit);\r\n    if (response.ok)\r\n    {\r\n      fetchFCData();\r\n    }\r\n    else\r\n    {\r\n      alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n    }\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  const fetchFCData = async () =>\r\n  {\r\n    const data = await FleetCompleteData.Get();\r\n    return dispatch({ type: 'get_fc_data', payload: data });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          {props.device_id.replace(/^0+/, '')}\r\n          {props.latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon cursor_pointer\"\r\n              style={{ color: \"rgb(0,225,0)\" }}\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.longitude, props.latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.asset_tag === props.device_id ? '' : props.asset_tag}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Device's unit\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: 'fc_data_toggle_show_unit_options', payload: props.device_id });\r\n            }}>\r\n            {props.unitcode.length === 0 ? 'Add' : props.unitcode}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td\r\n          className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'fc_data_toggle_show_errors', payload: props.device_id });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByDeviceId(props.asset_tag);\r\n                dispatch({\r\n                  type: 'fc_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'fc_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await FleetCompleteData.Delete(props.device_id);\r\n              if (response.ok)\r\n              {\r\n                fetchFCData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>\r\n\r\n      <UnitOptions\r\n        colspan={7}\r\n        new_unitcode=\"\"\r\n        update_data={updateFCData}\r\n        {...props} />\r\n\r\n      <ErrorInformation\r\n        colspan={7}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={7}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default FC;","import React, { useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport FleetCompleteData from './FleetCompleteData';\r\nimport FC from './FC';\r\nimport { useFetchData } from '../useFetchData';\r\nimport { ListHeaderView } from '../ListHeaderView';\r\nimport { FCHeader } from '../ListHeaders';\r\n\r\nconst FCList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(FleetCompleteData.Get, \"get_fc_data\", false);\r\n\r\n  const Header = FCHeader(isLoading, fetchData, state.fc_data_filter);\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_fc_data,\r\n    state.fc_data_filter,\r\n    state.fc_data_sort_field,\r\n    state.fc_data_sort_ascending,\r\n    state.fc_data_special_filter]);\r\n\r\n\r\n  return (\r\n    <section>\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: \"5%\"}}>\r\n              #\r\n            </th>\r\n            <th style={{ width: \"15%\" }}>\r\n              <a\r\n                href=\"#SortByDeviceId\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'device_id' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'device_id' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Device Id\r\n              </a>\r\n            </th>\r\n            <th style={{width: \"10%\"}}>\r\n              <a\r\n                href=\"#SortByAssetTag\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'asset_tag' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'asset_tag' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Asset Tag\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"8%\" }}>\r\n              <a\r\n                href=\"#SortByUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'unitcode' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"24%\" }}>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'updated_on' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"24%\" }}>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'location_timestamp' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"14%\" }}\r\n              className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_fc_data.map((fc, index) =>\r\n          {\r\n            return (<FC key={fc.device_id} index={index} {...fc} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FCList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface ICADData\r\n{\r\n  unitcode: string;\r\n  location_timestamp: Date;\r\n  inci_id: string;\r\n  status: string;\r\n  avstatus: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  speed: number;\r\n  heading: number; \r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class CADData implements ICADData\r\n{\r\n  public unitcode: string = \"\";\r\n  public location_timestamp: Date = new Date();\r\n  public inci_id: string = \"\";\r\n  public status: string = \"\";\r\n  public avstatus: string = \"\";\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public speed: number = 0;\r\n  public heading: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<CADData>>\r\n  {\r\n    const data = await Get<Array<CADData>>('API/CAD/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/CAD/Delete?unitcode=\" + unitcode, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default CADData;","import React from 'react';\r\nimport CADData from './CADData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { ICADDataWithIndex } from '../interfaces';\r\n\r\nconst CAD = (props:ICADDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const fetchCADData = async () =>\r\n  {\r\n    const data = await CADData.Get();\r\n    return dispatch({ type: 'get_cad_data', payload: data });\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          {props.unitcode}\r\n          {props.latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(0,0,225)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.longitude, props.latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.inci_id.trim().length > 0 ? 'On A Call' : ''}\r\n        </td>\r\n        <td>\r\n          {props.status}\r\n        </td>\r\n        <td>\r\n          {props.avstatus}\r\n        </td>\r\n\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td className=\"has-text-right icon-options\">\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'cad_data_toggle_show_errors', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByDeviceId(props.unitcode);\r\n                dispatch({\r\n                  type: 'cad_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'cad_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await CADData.Delete(props.unitcode);\r\n              if (response.ok)\r\n              {\r\n                fetchCADData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>      \r\n      <ErrorInformation\r\n        colspan={8}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={8}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default CAD;","import React, { useState, useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport CADData from './CADData';\r\nimport CAD from './CAD';\r\nimport { useFetchData } from '../useFetchData';\r\nimport { ListHeaderView } from '../ListHeaderView';\r\nimport { CADHeader } from '../ListHeaders';\r\n\r\nconst CADList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(CADData.Get, \"get_cad_data\", false);\r\n\r\n  const Header = CADHeader(isLoading, fetchData, state.cad_data_filter);\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_cad_data,\r\n    state.cad_data_filter,\r\n    state.cad_data_sort_field,\r\n    state.cad_data_sort_ascending,\r\n    state.cad_data_special_filter]);\r\n\r\n  return (\r\n    <section>\r\n\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitCode\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'unitcode' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit Code\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByCallStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'inci_id' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'inci_id' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Call Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'status' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'status' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitAVStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'avstatus' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'avstatus' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                AV Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'updated_on' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'location_timestamp' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_cad_data.map((cad, index) =>\r\n          {\r\n            return (<CAD key={cad.unitcode} index={index} {...cad} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CADList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IUnitData\r\n{\r\n  unitcode: string;\r\n  using_unit: string;\r\n  group_label: string;\r\n  show_in_minicad: boolean;\r\n\r\n  avl_longitude: number;\r\n  avl_latitude: number;\r\n  avl_location_timestamp: Date;\r\n  has_avl_device: boolean;\r\n  has_avl_error: boolean;\r\n\r\n  fc_longitude: number;\r\n  fc_latitude: number;\r\n  fc_location_timestamp: Date;\r\n  has_fc_device: boolean;\r\n  has_fc_error: boolean;\r\n\r\n  cad_longitude: number;\r\n  cad_latitude: number;\r\n  cad_location_timestamp: Date;\r\n  should_have_cad_location: boolean;\r\n  has_cad_error: boolean;\r\n\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  device_history: Array<any>;\r\n\r\n}\r\n\r\nexport class UnitData implements IUnitData\r\n{\r\n  public unitcode: string = \"\";\r\n  public using_unit: string = \"\";\r\n  public group_label: string = \"\";\r\n  public show_in_minicad: boolean = false;\r\n  \r\n  public avl_longitude: number = 0;\r\n  public avl_latitude: number = 0;\r\n  public avl_location_timestamp: Date = new Date();\r\n  public has_avl_device: boolean = false;\r\n  public has_avl_error: boolean = false;\r\n  \r\n  public fc_longitude: number = 0;\r\n  public fc_latitude: number =0;\r\n  public fc_location_timestamp: Date = new Date();\r\n  public has_fc_device: boolean = false;\r\n  public has_fc_error: boolean = false;\r\n  \r\n  public cad_longitude: number = 0;\r\n  public cad_latitude: number = 0;\r\n  public cad_location_timestamp: Date = new Date();\r\n  public should_have_cad_location: boolean = false;\r\n  public has_cad_error: boolean = false;\r\n  \r\n  public error_information: Array<string> = [];\r\n  public show_errors: boolean = false;\r\n  public show_unit_options: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<UnitData>>\r\n  {\r\n    const data = await Get<Array<UnitData>>('API/Unit/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/Unit/Delete?unitcode=\" + unitcode, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(unitcode: string, group: string, has_avl: boolean, has_fc: boolean, should_have_cad: boolean): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/Unit/Update?unitcode=${unitcode}&group=${group}&has_avl=${has_avl}&has_fc=${has_fc}&should_have_cad=${should_have_cad}`, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Add(unitcode: string, group: string, has_avl: boolean, has_fc: boolean, should_have_cad: boolean): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/Unit/Add?unitcode=${unitcode}&group=${group}&has_avl=${has_avl}&has_fc=${has_fc}&should_have_cad=${should_have_cad}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default UnitData;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IUnitControls } from '../interfaces';\r\nimport UnitData from './UnitData';\r\n\r\nconst UnitControls = (props: IUnitControls) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const getGroupValue = (label: string) =>\r\n  {\r\n    if (label.length === 0) return label;\r\n    let v = state.unit_groups.filter(g => g.label === label);\r\n    if (v.length > 0) return v[0].value;\r\n    return '';\r\n  }\r\n\r\n  const [currentUnit, setCurrentUnit] = useState(props.unitcode);\r\n  const [group, setGroup] = useState(getGroupValue(props.group_label));\r\n  const [hasAVL, setHasAVL] = useState(props.has_avl_device);\r\n  const [hasFC, setHasFC] = useState(props.has_fc_device);\r\n  const [hasCAD, setHasCAD] = useState(props.should_have_cad_location);\r\n\r\n\r\n  if (!props.show_unit_options) return null;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Group:\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <div className=\"select is-small\">\r\n                <select value={group}\r\n                  onChange={event =>\r\n                  {\r\n                    setGroup(event.target.value)\r\n                  }}>\r\n                  <option value=\"\">No Group</option>\r\n                  {\r\n                    state.unit_groups.map(group =>\r\n                  {\r\n                    return (\r\n                      <option key={group.value} value={group.value}>{group.label}</option>\r\n                    )\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has AVL Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasAVL}\r\n                  onChange={event => setHasAVL(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has Fleet Complete Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasFC}\r\n                  onChange={event => setHasFC(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Should Have CAD Location\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasCAD}\r\n                  onChange={event => setHasCAD(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan={3}>\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <button\r\n                onClick={async (event) => \r\n                {\r\n                  event.preventDefault();\r\n                  const response = await UnitData.Update(props.unitcode, group, hasAVL, hasFC, hasCAD);\r\n                  if (response.ok)\r\n                  {\r\n                    props.refresh_data();\r\n                  }\r\n                  else\r\n                  {\r\n                    alert(\"There was a problem updating this record. Please contact MIS Development for more information.\");\r\n                  }\r\n                }}\r\n                title=\"This will save all of the selections above\"\r\n                className=\"is-success button is-small\">\r\n                Save\r\n              </button>\r\n              <button\r\n                title=\"Close the Unit Options menu without saving any changes\"\r\n                style={{ marginLeft: \"1em\" }}\r\n                className=\"is-warning button is-small\"\r\n                onClick={event =>\r\n                {\r\n                  dispatch({ type: 'unit_data_toggle_show_unit_options', payload: props.unitcode });\r\n                }}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnitControls;\r\n\r\n","import React from 'react';\r\nimport UnitData from './UnitData';\r\nimport { Store } from '../Store';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport UnitControls from './UnitControls';\r\nimport { IUnitDataWithIndex } from '../interfaces';\r\n\r\nconst Unit = (props: IUnitDataWithIndex) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const fetchUnitData = async () =>\r\n  {\r\n    const data = await UnitData.Get();\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\r\n\r\n  const viewOnMap = (longitude, latitude) =>\r\n  {\r\n    console.log('lat/long', latitude, longitude);\r\n    if (!state.map_view) return;\r\n    let point = {\r\n      type: \"point\"\r\n      , longitude: longitude\r\n      , latitude: latitude\r\n    };\r\n    state.map_view.center = point;\r\n    if (state.map_view.zoom < 18) state.map_view.zoom = 18;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Unit's Information\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: 'unit_data_toggle_show_unit_options', payload: props.unitcode });\r\n            }}>\r\n            {props.unitcode}\r\n          </span>\r\n          \r\n        </td>\r\n        <td>\r\n          {props.using_unit}\r\n        </td>\r\n        <td>\r\n          {props.group_label}\r\n        </td>\r\n        <td>\r\n          {props.avl_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(225,0,0)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.avl_longitude, props.avl_latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ): ''}\r\n          {new Date(props.avl_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\", color: \"rgb(225, 0, 0)\" }}\r\n              title=\"View this on the AVL Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'view_avl_by_unit', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.fc_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon cursor_pointer\"\r\n              style={{ color: \"rgb(0,225,0)\" }}\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.fc_longitude, props.fc_latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n          {new Date(props.fc_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\", color: \"rgb(0, 225, 0)\" }}\r\n              title=\"View this on the Fleet Complete Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'view_fc_by_unit', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.cad_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              style={{ color: \"rgb(0,0,225)\" }}\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                viewOnMap(props.cad_longitude, props.cad_latitude);\r\n              }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}          \r\n          {new Date(props.cad_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\", color: \"rgb(0,0,225)\"}}\r\n              title=\"View this on the CAD Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'view_cad_by_unit', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n            ) : ''}\r\n        </td>\r\n        <td\r\n          className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'unit_data_toggle_show_errors', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByUnit(props.unitcode);\r\n                dispatch({\r\n                  type: 'unit_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'unit_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          {new Date(props.avl_location_timestamp).getFullYear() === 1995 && \r\n            new Date(props.fc_location_timestamp).getFullYear() === 1995 && \r\n            new Date(props.cad_location_timestamp).getFullYear() === 1995? (\r\n            <span\r\n              style={{ marginLeft: \".5em\" }}\r\n              title=\"Delete This Device\"\r\n              className=\"icon cursor_pointer has-text-danger\"\r\n              onClick={async event =>\r\n              {\r\n                event.preventDefault();\r\n                const response = await UnitData.Delete(props.unitcode);\r\n                if (response.ok)\r\n                {\r\n                  fetchUnitData();\r\n                }\r\n                else\r\n                {\r\n                  alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n                }\r\n              }\r\n              }>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <UnitControls \r\n        colspan={8}\r\n        refresh_data={fetchUnitData}\r\n        {...props}\r\n        />\r\n      <ErrorInformation\r\n        colspan={8}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={8}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Unit;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IAddUnit } from '../interfaces';\r\nimport UnitData from './UnitData';\r\n\r\nconst AddUnit = (props: IAddUnit) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const getGroupValue = (label: string) =>\r\n  {\r\n    if (label.length === 0) return label;\r\n    let v = state.unit_groups.filter(g => g.label === label);\r\n    if (v.length > 0) return v[0].value;\r\n    return '';\r\n  }\r\n\r\n  const fetchUnitData = async () =>\r\n  {\r\n    const data = await UnitData.Get();\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\r\n\r\n  const [currentUnit, setCurrentUnit] = useState(props.unitcode);\r\n  const [group, setGroup] = useState(getGroupValue(props.group_label));\r\n  const [hasAVL, setHasAVL] = useState(props.has_avl_device);\r\n  const [hasFC, setHasFC] = useState(props.has_fc_device);\r\n  const [hasCAD, setHasCAD] = useState(props.should_have_cad_location);\r\n\r\n  if (!props.show_add_unit) return null;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Unit Code\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <input\r\n                  value={currentUnit}\r\n                  onChange={event => setCurrentUnit(event.target.value)}\r\n                  type=\"text\" />\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Group:\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <div className=\"select is-small\">\r\n                <select value={group}\r\n                  onChange={event =>\r\n                  {\r\n                    console.log('event', event, event.target.value);\r\n                    setGroup(event.target.value)\r\n                  }}>\r\n                  <option value=\"\">No Group</option>\r\n                  {\r\n                    state.unit_groups.map(group =>\r\n                    {\r\n                      return (\r\n                        <option key={group.value} value={group.value}>{group.label}</option>\r\n                      )\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has AVL Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasAVL}\r\n                  onChange={event => setHasAVL(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has Fleet Complete Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasFC}\r\n                  onChange={event => setHasFC(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Should Have CAD Location\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasCAD}\r\n                  onChange={event => setHasCAD(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan={3}>\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <button\r\n                onClick={async (event) => \r\n                {\r\n                  event.preventDefault();\r\n                  const response = await UnitData.Add(currentUnit, group, hasAVL, hasFC, hasCAD);\r\n                  if (response.ok)\r\n                  {\r\n                    fetchUnitData();\r\n                    setCurrentUnit(\"\");\r\n                    setHasAVL(false);\r\n                    setHasFC(false);\r\n                    setHasCAD(false);\r\n                    setGroup(\"\");\r\n                    props.cancel();\r\n                  }\r\n                  else\r\n                  {\r\n                    alert(\"There was a problem updating this record. Please contact MIS Development for more information.\");\r\n                  }\r\n                }}\r\n                title=\"This will save all of the selections above\"\r\n                className=\"is-success button is-small\">\r\n                Save\r\n              </button>\r\n              <button\r\n                title=\"Close the Unit Options menu without saving any changes\"\r\n                style={{ marginLeft: \"1em\" }}\r\n                className=\"is-warning button is-small\"\r\n                onClick={event =>\r\n                {\r\n                  props.cancel();\r\n                }}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddUnit;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport UnitData from './UnitData';\r\nimport Unit from './Unit';\r\nimport AddUnit from './AddUnit';\r\nimport { useFetchData } from '../useFetchData';\r\nimport { ListHeaderView } from '../ListHeaderView';\r\nimport { UnitHeader } from '../ListHeaders';\r\n\r\n\r\nconst UnitList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n  const [showAddUnit, setShowAddUnit] = useState(false);\r\n  const [currentSearch, setCurrentSearch] = useState(state.unit_data_filter || \"\");\r\n  \r\n  const hideAddUnit = () =>\r\n  {\r\n    setShowAddUnit(false);\r\n  }\r\n\r\n  const { isLoading, isError, fetchData } = useFetchData(UnitData.Get, \"get_unit_data\", false);\r\n\r\n  const Header = UnitHeader(isLoading, fetchData, state.unit_data_filter);\r\n\r\n  useEffect(() =>\r\n  {\r\n\r\n  }, [\r\n    isLoading,\r\n    isError,\r\n    state.filtered_unit_data,\r\n    state.unit_data_filter,\r\n    state.unit_data_sort_field,\r\n    state.unit_data_sort_ascending,\r\n    state.unit_data_special_filter]);\r\n\r\n  return (\r\n    <section>\r\n      <ListHeaderView loading={isLoading} {...Header} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitCode\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'unit_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.unit_data_sort_field !== 'unitcode' ? '' : state.unit_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n              <span\r\n                style={{ marginLeft: \"1em\" }}\r\n                title=\"Add A Unit\"\r\n                className=\"icon cursor_pointer has-text-danger\"\r\n                onClick={event =>\r\n                {\r\n                  setShowAddUnit(!showAddUnit);\r\n                }}>\r\n                <i className=\"fas fa-plus-circle\"></i>\r\n              </span>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUsingUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'unit_data_sort', payload: 'using_unit' });\r\n                }}\r\n                className={`${state.unit_data_sort_field !== 'using_unit' ? '' : state.unit_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Using Unit\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByGroup\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'unit_data_sort', payload: 'group_label' });\r\n                }}\r\n                className={`${state.unit_data_sort_field !== 'group_label' ? '' : state.unit_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                <span\r\n                  title=\"View this on the Map\"\r\n                  className=\"icon\">\r\n                  <i className=\"fas fa-sort\"></i>\r\n                </span>\r\n\r\n              </a>\r\n              <div\r\n                style={{ display: \"inline-block\" }}\r\n                className=\"control\">\r\n                <div className=\"select is-small\">\r\n                  <select\r\n                    onChange={event =>\r\n                    {\r\n                      let currentOption = event.target.options[event.target.selectedIndex].innerText;\r\n                      if (currentOption === \"All Groups\") currentOption = \"\";\r\n                      setCurrentSearch(currentOption);\r\n                      dispatch({\r\n                        type: \"search_unit_data\",\r\n                        payload: currentOption\r\n                      })\r\n\r\n                    }}>\r\n                    <option value=\"\">All Groups</option>\r\n                    {\r\n                      state.unit_groups.map(group =>\r\n                      {\r\n                        return (\r\n                          <option key={group.value} value={group.value}>{group.label}</option>\r\n                        )\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th>\r\n              AVL\r\n            </th>\r\n            <th>\r\n              FC\r\n            </th>\r\n            <th>\r\n              CAD\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <AddUnit\r\n            unitcode=\"\"\r\n            has_avl_device={false}\r\n            has_fc_device={false}\r\n            should_have_cad_location={false}\r\n            group_label={\"\"}\r\n            show_add_unit={showAddUnit}\r\n            cancel={hideAddUnit}\r\n\r\n          />\r\n          {state.filtered_unit_data.map((u, index) =>\r\n          {\r\n            return (<Unit key={u.unitcode} index={index} {...u} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UnitList;","import React, { useEffect, useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nconst LocationLayer = ({ state_array, title, r, g, b }) =>\r\n{\r\n  const { state } = React.useContext(Store);\r\n\r\n  const [graphicsLayer, setGraphicsLayer] = useState(null);\r\n\r\n  const CalculateTimeDifference = (timestamp: Date, now: Date): number =>\r\n  {\r\n    let diff = (now.valueOf() - new Date(timestamp).valueOf()) / 1000;\r\n    if (diff < 60) return 1;     // 1 minute\r\n    if (diff < 120) return .9;   // 2 minutes\r\n    if (diff < 300) return .8;   // 5 minutes\r\n    if (diff < 600) return .7;   // 10 minutes\r\n    if (diff < 1200) return .6;  // 20 minutes\r\n    if (diff < 1800) return .5;  // 30 minutes\r\n    if (diff < 3600) return .4;  // 1 hour\r\n    if (diff < 14400) return .3;   // 4 hours\r\n    if (diff < 28800) return .2;   // 8 hours\r\n    return .1;   // 24 hours or more\r\n  }\r\n\r\n  const UpdateLayer = () =>\r\n  {\r\n    loadModules([\r\n      'esri/layers/GraphicsLayer'\r\n      , 'esri/Graphic'\r\n    ]).then(([\r\n      GraphicsLayer\r\n      , Graphic\r\n    ]) =>\r\n    {\r\n      let layer = graphicsLayer === null ? new GraphicsLayer() : graphicsLayer;\r\n      if (layer.graphics.length > 0) layer.removeAll();\r\n      layer.title = title;\r\n\r\n      let now = new Date();\r\n\r\n      for (let d of state[state_array])\r\n      {\r\n        let point = {\r\n          type: \"point\"\r\n          , longitude: d.longitude\r\n          , latitude: d.latitude\r\n        };\r\n\r\n        let symbol = {\r\n          type: 'simple-marker'\r\n          , color: [r, g, b, CalculateTimeDifference(d.location_timestamp, now)]\r\n        };\r\n\r\n        let symbolGraphic = new Graphic({\r\n          geometry: point\r\n          , symbol: symbol\r\n        });\r\n\r\n        var text = {\r\n          type: \"text\"\r\n          , color: \"black\"\r\n          , haloColor: \"white\"\r\n          , haloSize: \"2px\"\r\n          , xoffset: 9\r\n          , yoffset: -2\r\n          , text: (d.unitcode.length > 0 ? d.unitcode : d.device_id)\r\n          , horizontalAlignment: \"left\"\r\n          , font: {\r\n            size: 10\r\n          }\r\n        };\r\n\r\n        var textGraphic = new Graphic({\r\n          geometry: point\r\n          , symbol: text\r\n        });\r\n\r\n        layer.add(symbolGraphic);\r\n        layer.add(textGraphic);\r\n\r\n      }\r\n\r\n      setGraphicsLayer(layer);\r\n      state.map.add(layer);\r\n\r\n    }).catch(err => console.error(err));\r\n  }\r\n\r\n  useEffect(() =>\r\n  {\r\n    if (state.map && state[state_array].length > 0)\r\n    {\r\n      UpdateLayer();\r\n    }\r\n    return function cleanup()\r\n    {\r\n      if (state.map) state.map.remove(graphicsLayer);\r\n    }\r\n  }, [state.map, state[state_array]]);\r\n\r\n\r\n  return null;\r\n}\r\n\r\nexport default LocationLayer;","import React, { useEffect, useRef } from 'react';\r\nimport { loadModules } from 'esri-loader';\r\nimport { Store } from '../Store';\r\nimport LocationLayer from './LocationLayer';\r\n\r\nexport const WebMapView = () =>\r\n{\r\n  const mapRef = useRef(null);\r\n\r\n  const { dispatch } = React.useContext(Store);\r\n\r\n  useEffect(\r\n    () =>\r\n    {\r\n      // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n      loadModules([\r\n        'esri/Map',\r\n        'esri/views/MapView',\r\n        'esri/widgets/BasemapGallery',\r\n        'esri/widgets/LayerList',\r\n        'esri/widgets/Home',\r\n        'esri/layers/MapImageLayer'\r\n      ], { css: true })\r\n        .then(([ArcGISMap, MapView, BasemapGallery, LayerList, Home, MapImageLayer]) =>\r\n        {\r\n          const map = new ArcGISMap({\r\n            basemap: 'streets-navigation-vector'\r\n          });\r\n\r\n          // load the map view at the ref's DOM node\r\n          const view = new MapView({\r\n            container: mapRef.current,\r\n            map: map,\r\n            center: [-81.80, 29.950],\r\n            zoom: 10\r\n          });\r\n\r\n          new BasemapGallery({\r\n            view: view,\r\n            container: document.getElementById(\"basemap_selector_container\"),\r\n            source: {\r\n              portal: {\r\n                url: \"http://www.arcgis.com\",\r\n                useVectorBasemaps: true, // Load vector tile basemap group\r\n              },\r\n            }\r\n          });\r\n\r\n          let fireServiceLayer = new MapImageLayer({\r\n            url: 'https://maps.claycountygov.com:6443/arcgis/rest/services/Fire_Response/MapServer'\r\n            , title: 'Fire Services'\r\n          });\r\n          map.add(fireServiceLayer);\r\n\r\n          let siteAddressLayer = new MapImageLayer({\r\n            url: 'https://maps.claycountygov.com:6443/arcgis/rest/services/SiteAddresses/MapServer'\r\n            , title: 'Site Addresses'\r\n          });\r\n          map.add(siteAddressLayer);\r\n\r\n\r\n          new LayerList({\r\n            view: view,\r\n            container: document.getElementById(\"layerlist_selector_container\")\r\n          });\r\n\r\n          var homeWidget = new Home({ view: view });\r\n          view.ui.add(homeWidget, { position: \"top-left\" });\r\n\r\n          //view.ui.add(layerlist, { position: \"top-right\" });\r\n\r\n          view.when(() =>\r\n          {\r\n            console.log('view.then running');\r\n            dispatch({ type: 'save_map', payload: map });\r\n            dispatch({ type: 'save_map_view', payload: view });\r\n\r\n          });\r\n\r\n          return () =>\r\n          {\r\n            if (view)\r\n            {\r\n              // destroy the map view\r\n              view.container = null;\r\n            }\r\n          };\r\n        });\r\n    }, []\r\n  );\r\n\r\n  return (\r\n    <div className=\"webmap\" ref={mapRef}>\r\n      <LocationLayer state_array=\"filtered_avl_data\" title=\"AVL Units\" r=\"255\" g=\"0\" b=\"0\" />\r\n      <LocationLayer state_array=\"filtered_fc_data\" title=\"Fleet Complete Units\" r=\"0\" g=\"255\" b=\"0\" />\r\n      <LocationLayer state_array=\"filtered_cad_data\" title=\"CAD Units\" r=\"0\" g=\"0\" b=\"255\" />\r\n      \r\n    </div>);\r\n};","import { Get } from './Utilities';\r\n\r\ninterface ISimpleValue\r\n{\r\n  label: string\r\n  value: string\r\n}\r\n\r\nclass SimpleValue implements ISimpleValue\r\n{\r\n  public label: string = \"\";\r\n  public value: string = \"\";\r\n\r\n  public static async GetUnitGroups(): Promise<Array<SimpleValue>>\r\n  {\r\n    const data = await Get<Array<SimpleValue>>('API/Group/GetUnitGroups');\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default SimpleValue;","import React, { useState } from 'react';\nimport Nav from './nav';\nimport { Store } from './Store';\nimport AVLData from './AVL/AVLData';\nimport AVLList from './AVL/AVLList';\nimport FleetCompleteData from './FleetComplete/FleetCompleteData';\nimport FCList from './FleetComplete/FCList';\nimport CADData from './Cad/CADData';\nimport CADList from './Cad/CADList';\nimport UnitData from './Unit/UnitData';\nimport UnitList from './Unit/UnitList';\nimport { WebMapView } from './Map/WebMapView';\nimport SimpleValue from './SimpleValue';\nimport { useFetchData } from './useFetchData';\nimport { useInterval } from './useInterval';\n\nconst App: React.FC = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  const { isLoading: isAVLLoading, isError: isAVLError, fetchData: fetchAVLData } = useFetchData(AVLData.Get, \"get_avl_data\", false);\n  const { isLoading: isFCLoading, isError: isFCError, fetchData: fetchFCData } = useFetchData(FleetCompleteData.Get, \"get_fc_data\", false);\n  const { isLoading: isCADLoading, isError: isCADError, fetchData: fetchCADData } = useFetchData(CADData.Get, \"get_cad_data\", false);\n  const { isLoading: isUnitLoading, isError: isUnitError, fetchData: fetchUnitData } = useFetchData(UnitData.Get, \"get_unit_data\", false);\n\n  React.useEffect(() =>\n  {\n    fetchUnitData();\n    fetchAVLData();\r\n    fetchFCData();\r\n    fetchCADData();\r\n    fetchUnitGroups();\r\n  }, []);\n\n  useInterval(() =>\r\n  {\r\n    console.log(\"automatically refreshing all\");\r\n    fetchUnitData();\n    fetchAVLData();\r\n    fetchFCData();\r\n    fetchCADData();\r\n    fetchUnitGroups();\r\n  }, 60000);\n\n  const fetchUnitGroups = async () =>\r\n  {\n    const data = await SimpleValue.GetUnitGroups();\r\n    return dispatch({ type: 'get_unit_groups_data', payload: data });\r\n  }\n\n  return (\n    <>\n      <Nav />\n\n      <div className=\"columns main-container is-mobile\">\n        <div\n          style={{ paddingRight: 0 }}\n          className={`column left-side ${state.current_view !== 'map' ? 'is-full-mobile is-full-tablet is-full-desktop is-half-widescreen is-half-fullhd' : 'hide'}`}>\n          {state.current_view === \"avl\" ? <AVLList /> : null}\n          {state.current_view === \"unit\" ? <UnitList /> : null}\n          {state.current_view === \"fc\" ? <FCList /> : null}\n          {state.current_view === \"cad\" ? <CADList /> : null}\n        </div>\n\n        <div\n          style={{ paddingLeft: 0 }}\n          className={`column right-side ${state.current_view !== 'map' ? 'is-half-widescreen is-half-fullhd' : ''}`}>\n          <WebMapView />\n        </div>\n\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay)\r\n{\r\n  const savedCallback = useRef(null);\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() =>\r\n  {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() =>\r\n  {\r\n    function tick()\r\n    {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null)\r\n    {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport { StoreProvider } from './Store';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}