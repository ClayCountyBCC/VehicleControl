{"version":3,"sources":["Store.tsx","nav.tsx","Utilities.ts","AVLData.ts","App.tsx","index.tsx"],"names":["initialState","avl_data","fleetcomplete_data","cad_data","unit_data","Store","React","createContext","reducer","state","action","type","payload","Nav","className","role","aria-label","app_path","Get_Path","app_name","length","console","log","path","window","location","pathname","toLowerCase","indexOf","Get","url","a","async","fetch","method","headers","cache","credentials","response","ok","Error","statusText","json","AVLData","device_id","device_type","unitcode","direction","location_timestamp","Date","satellite_count","velocity","ip_address","latitude","longitude","updated_on","error_information","data","App","useContext","dispatch","useEffect","fetchAVLData","ReactDOM","render","props","useReducer","Provider","value","children","document","getElementById"],"mappings":"0KAMMA,EACN,CACEC,SAAU,GACVC,mBAAoB,GACpBC,SAAU,GACVC,UAAW,IAGAC,EAAQC,IAAMC,cAA4BP,GAEvD,SAASQ,EAAQC,EAAeC,GAE9B,OAAQA,EAAOC,MAEb,IAAK,eACH,OAAO,eAAKF,EAAZ,CAAmBR,SAAUS,EAAOE,UAEtC,QACE,OAAOH,G,oBCUEI,EAhCO,WAEpB,OACE,yBAAKC,UAAU,oBAAoBC,KAAK,aAAaC,aAAW,mBAC9D,yBAAKF,UAAU,aACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,yBAAd,oBAEF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAGf,yBAAKA,UAAU,cACb,uBAAGA,UAAU,eAAb,SAGA,uBAAGA,UAAU,eAAb,OAGA,uBAAGA,UAAU,eAAb,kBAGA,uBAAGA,UAAU,eAAb,Y,cCtBJG,EAAW,kBA6RV,SAASC,IACf,IADwBC,EACzB,uDAD4C,GAElB,IAApBA,EAASC,SAAcD,EAAWF,GACtCI,QAAQC,IAAI,kBAAoBL,GAChC,IAAIM,EAAO,IAMX,OAJS,GADDC,OAAOC,SAASC,SAASC,cAAcC,QAAQT,KAGrDI,EAAOJ,EAAW,KAEbI,EAsBF,SAAeM,EAAOC,GAAtB,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEkBE,MAAMf,IAAaY,EACxC,CACEI,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,MAAO,WACPC,YAAa,aATZ,WAECC,EAFD,QAYSC,GAZT,sBAcG,IAAIC,MAAMF,EAASG,YAdtB,yBAAAV,EAAA,MAgBQO,EAASI,QAhBjB,6EC7SF,IAyBQC,EAzBf,WAeE,aAAe,yBAbRC,UAAoB,GAab,KAZPC,YAAsB,GAYf,KAXPC,SAAmB,GAWZ,KAVPC,UAAoB,EAUb,KATPC,mBAA2B,IAAIC,KASxB,KARPC,gBAA0B,EAQnB,KAPPC,SAAmB,EAOZ,KANPC,WAAqB,GAMd,KALPC,SAAmB,EAKZ,KAJPC,UAAoB,EAIb,KAHPC,WAAmB,IAAIN,KAGhB,KAFPO,kBAAmC,GAb5C,yJAmBuB3B,EAAoB,gBAnB3C,cAmBU4B,EAnBV,yBAoBWA,GApBX,8CCaeC,EAzBO,WACrB,IAAD,EAC8BpD,IAAMqD,WAAWtD,GAArCI,EADV,EACUA,MAAOmD,EADjB,EACiBA,SAEftD,IAAMuD,WAAU,WAEY,IAA1BpD,EAAMR,SAASmB,QAAgB0C,OAGjC,IAAMA,EAAe,0BAAA/B,EAAAC,OAAA,kEAAAD,EAAA,MAEAY,EAAQd,OAFR,cAEb4B,EAFa,yBAGZG,EAAS,CAAEjD,KAAM,eAAgBC,QAAS6C,KAH9B,sCAOrB,OAFApC,QAAQC,IAAI,UAAWb,GAGrB,oCACE,kBAAC,EAAD,MACA,yBAAKK,UAAU,UClBrBiD,IAASC,OACP,mBLuBK,SAAuBC,GAC7B,IAAD,EAC4BC,qBAAW1D,EAASR,GADhD,mBACSS,EADT,KACgBmD,EADhB,KAEE,OAAQ,kBAACvD,EAAM8D,SAAP,CAAgBC,MAAO,CAAE3D,QAAOmD,aAAaK,EAAMI,YK1B3D,KACE,kBAAC,EAAD,OACgBC,SAASC,eAAe,U","file":"static/js/main.a188c303.chunk.js","sourcesContent":["import React, { useContext, useReducer } from 'react';\r\nimport { IState, IAction } from './interfaces';\r\nimport AVLData from './AVLData';\r\n\r\n\r\n\r\nconst initialState: IState =\r\n{\r\n  avl_data: [],\r\n  fleetcomplete_data: [],\r\n  cad_data: [],\r\n  unit_data: []\r\n}\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nfunction reducer(state: IState, action: IAction): IState\r\n{\r\n  switch (action.type)\r\n  {\r\n    case \"get_avl_data\":\r\n      return { ...state, avl_data: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport function StoreProvider(props: any): JSX.Element\r\n{\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (<Store.Provider value={{ state, dispatch }}>{props.children}</Store.Provider>);\r\n}","import React from 'react';\n\nconst Nav: React.FC = () =>\r\n{\n  return (\n    <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <h1 className=\"navbar-item is-size-3\">Vehicle Control</h1>\r\n        </div>\r\n        <div className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n\r\n          </div>\r\n          <div className=\"navbar-end\">\r\n            <p className=\"navbar-item\">\r\n              Units\r\n            </p>\r\n            <p className=\"navbar-item\">\r\n              AVL\r\n            </p>\r\n            <p className=\"navbar-item\">\r\n              Fleet Complete\r\n            </p>\r\n            <p className=\"navbar-item\">\r\n              CAD\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\n  );\n}\n\nexport default Nav;\n","//namespace Utilities\r\n//{\r\n  const app_path = \"/vehiclecontrol\";\r\n\r\n  export function Hide(e: string): void\r\n  export function Hide(e: HTMLElement): void\r\n  export function Hide(e: Element): void\r\n  export function Hide(e: any):void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show(e: string): void\r\n  export function Show(e: HTMLElement): void\r\n  export function Show(e: Element): void\r\n  export function Show(e: any): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline(e: string): void\r\n  export function Show_Inline(e: HTMLElement): void\r\n  export function Show_Inline(e: Element): void\r\n  export function Show_Inline(e: any): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline_Flex(e: string): void\r\n  export function Show_Inline_Flex(e: HTMLElement): void\r\n  export function Show_Inline_Flex(e: Element): void\r\n  export function Show_Inline_Flex(e: any): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Flex(e: string): void\r\n  export function Show_Flex(e: HTMLElement): void\r\n  export function Show_Flex(e: Element): void\r\n  export function Show_Flex(e: any): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show\");\r\n  }\r\n\r\n  export function Error_Show(e: string, errorText?: Array<string>, timeout?: boolean): void\r\n  export function Error_Show(e: string, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: HTMLElement, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: Element, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: any, errorText?: any, timeout?: boolean): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    if (errorText)\r\n    {\r\n      //Set_Text(e, errorText);\r\n      Clear_Element(e);\r\n      let notification = document.createElement(\"div\");\r\n      notification.classList.add(\"notification\");\r\n      notification.classList.add(\"is-danger\");\r\n      let deleteButton = document.createElement(\"button\");\r\n      deleteButton.classList.add(\"delete\");\r\n      deleteButton.onclick = () =>\r\n      {\r\n        Hide(e);\r\n      }\r\n      notification.appendChild(deleteButton);\r\n      if (Array.isArray(errorText))\r\n      {\r\n        // we're assuming that errorText is an array if we get here.\r\n        let ul = document.createElement(\"ul\");\r\n        errorText.forEach((et) =>\r\n        {\r\n          let li = document.createElement(\"li\");\r\n          li.appendChild(document.createTextNode(<string>et));\r\n          ul.appendChild(li);\r\n        });\r\n        notification.appendChild(ul);\r\n      } else\r\n      {\r\n        notification.appendChild(document.createTextNode(errorText));\r\n\r\n      }\r\n\r\n      (<HTMLElement>e).appendChild(notification);\r\n\r\n    }\r\n    Show(e);\r\n    if (timeout == undefined || timeout === true)\r\n    {\r\n      window.setTimeout(function (j)\r\n      {\r\n        Hide(e);\r\n      }, 30000)\r\n    }\r\n  }\r\n\r\n  export function Simple_Error_Show(e: Element, errorText: string): void\r\n  {\r\n    Clear_Element(<HTMLElement>e);\r\n    e.appendChild(document.createTextNode(errorText));\r\n  }\r\n\r\n  export function Clear_Element(node: HTMLElement): void\r\n  { // this function just emptys an element of all its child nodes.\r\n    if (node === null || node === undefined) return;\r\n    while (node.firstChild)\r\n    {\r\n      node.removeChild(node.firstChild);\r\n    }\r\n  }\r\n\r\n  export function Create_Option(value: string, label: string, selected: boolean = false): HTMLOptionElement\r\n  {\r\n    let o = document.createElement(\"option\");\r\n    o.value = value;\r\n    o.text = label;\r\n    o.selected = selected;\r\n    return o;\r\n  }\r\n\r\n  export function Get_Value(e: string): string\r\n  export function Get_Value(e: HTMLSelectElement): string\r\n  export function Get_Value(e: HTMLInputElement): string\r\n  export function Get_Value(e: any): string\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    return (<HTMLInputElement>e).value;\r\n  }\r\n\r\n  export function Set_Value(e: string, value: string): void\r\n  export function Set_Value(e: HTMLSelectElement, value: string): void\r\n  export function Set_Value(e: HTMLInputElement, value: string): void\r\n  export function Set_Value(e: any, value: string): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    (<HTMLInputElement>e).value = value;\r\n  }\r\n\r\n  export function Set_Text(e: string, value: string): void\r\n  export function Set_Text(e: HTMLElement, value: string): void\r\n  export function Set_Text(e: any, value: string): void\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    Clear_Element(e);\r\n    (<HTMLElement>e).appendChild(document.createTextNode(value));\r\n  }\r\n\r\n  //export function Show_Menu(elementId: string)\r\n  //{\r\n  //  //let element = e.srcElement;\r\n  //  // we expect the element's id to be in a \"nav-XXX\" name format, where \r\n  //  // XXX is the element we want to show \r\n  //  let id = elementId.replace(\"nav-\", \"\");\r\n  //  let menuItems = <NodeListOf<HTMLElement>>document.querySelectorAll(\"#menuTabs > li > a\");\r\n  //  if (menuItems.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < menuItems.length; i++)\r\n  //    {\r\n  //      let item = menuItems.item(i);\r\n  //      if (item.id === elementId)\r\n  //      {\r\n  //        item.parentElement.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.parentElement.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //  Show_Hide_Selector(\"#views > section\", id);\r\n  //}\r\n\r\n  //export function Handle_Tabs(tabSelector: string, containerSelector: string, id: string)\r\n  //{\r\n  //  Activate_Inactivate_Selector(tabSelector, \"nav-\" + id);\r\n  //  Show_Hide_Selector(containerSelector, id);\r\n  //}\r\n\r\n  //export function Activate_Inactivate_Selector(selector: string, id: string)\r\n  //{\r\n  //  let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n  //  if (sections.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < sections.length; i++)\r\n  //    {\r\n  //      let item = sections.item(i);\r\n  //      if (item.id === id)\r\n  //      {\r\n  //        item.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //}\r\n\r\n  export function Show_Hide_Selector(selector: string, id: string)\r\n  {\r\n    let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n    if (sections.length > 0)\r\n    {\r\n      for (let i = 0; i < sections.length; i++)\r\n      {\r\n        let item = sections.item(i);\r\n        if (item.id === id)\r\n        {\r\n          Show(item);\r\n        }\r\n        else\r\n        {\r\n          Hide(item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // original Get Function\r\n  //export function Get<T>(url: string): Promise<T>\r\n  //{\r\n  //  return fetch(url,\r\n  //    {\r\n  //      method: \"GET\",\r\n  //      headers: {\r\n  //        \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n  //      },\r\n  //      cache: \"no-cache\",\r\n  //      credentials: \"include\"\r\n  //    }\r\n  //  )\r\n  //    .then(response =>\r\n  //    {\r\n  //      if (!response.ok)\r\n  //      {\r\n  //        throw new Error(response.statusText)\r\n  //      }\r\n  //      return response.json();\r\n  //    });\r\n  //}\r\n\r\n  export function Get_Path(app_name: string = \"\"): string\r\n  {\r\n    if (app_name.length === 0) app_name = app_path;\r\n    console.log('using app path ' + app_path);\r\n    let path = \"/\";\r\n    let i = window.location.pathname.toLowerCase().indexOf(app_name);\r\n    if (i == 0)\r\n    {\r\n      path = app_name + \"/\";\r\n    }\r\n    return path;\r\n  }\r\n\r\n  export async function Get_Empty(url: string): Promise<string>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.text();\r\n  }\r\n\r\n  export async function Get<T>(url: string): Promise<T>\r\n  {\r\n    const response = await fetch(Get_Path() + url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.json();\r\n  }\r\n\r\n  export async function Post<T>(url: string, data: object): Promise<T>\r\n  {\r\n    const response = await fetch(Get_Path() + url,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText)\r\n    }\r\n    return response.json();\r\n\r\n  }\r\n\r\n  export async function Post_Empty(url: string, data: object): Promise<Response>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"POST\",\r\n        body: data !== null ? JSON.stringify(data) : \"\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    return response;\r\n  }\r\n\r\n  export function Format_Amount(amount: number): string\r\n  {\r\n    return amount.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n  }\r\n\r\n  export function Format_Date(date: Date): string\r\n  export function Format_Date(date: string): string\r\n  export function Format_Date(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleDateString('en-us');\r\n    }\r\n    var d = new Date(date);\r\n    return d.toLocaleDateString('en-US');\r\n  }\r\n\r\n  export function Format_DateTime(date: Date): string\r\n  export function Format_DateTime(date: string): string\r\n  export function Format_DateTime(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleString('en-us');\r\n    }\r\n    return new Date(date).toLocaleString('en-US');\r\n  }\r\n\r\n  export function Validate_Text(e: string, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLInputElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLSelectElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: any, errorElementId: string, errorText: string): string\r\n  {\r\n    // this should only be used for required elements.\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let ele = (<HTMLInputElement>e);\r\n    ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.remove(\"is-danger\") : ele.classList.remove(\"is-danger\");\r\n    let v = Get_Value(ele).trim();\r\n    if (v.length == 0)\r\n    {\r\n      ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.add(\"is-danger\") : ele.classList.add(\"is-danger\");\r\n      Error_Show(errorElementId, errorText);\r\n      ele.focus();\r\n      ele.scrollTo();\r\n      return \"\";\r\n    }\r\n    return v;\r\n\r\n  }\r\n\r\n  export function Toggle_Loading_Button(e: string, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: HTMLButtonElement, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: any, disabled: boolean)\r\n  {\r\n    if (typeof e == \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let b = <HTMLButtonElement>e;\r\n    b.disabled = disabled;\r\n    b.classList.toggle(\"is-loading\", disabled);\r\n  }\r\n\r\n  //export function Create_Menu_Element(menuItem: MenuItem): HTMLLIElement\r\n  //{\r\n  //  let li = document.createElement(\"li\");\r\n  //  if (menuItem.selected) li.classList.add(\"is-active\");\r\n\r\n\r\n  //  let a = document.createElement(\"a\");\r\n  //  a.id = menuItem.id;\r\n  //  a.onclick = function ()\r\n  //  {\r\n  //    Update_Menu(menuItem);\r\n  //  }\r\n  //  if (menuItem.icon.length > 0)\r\n  //  {\r\n  //    let span = document.createElement(\"span\");\r\n  //    span.classList.add(\"icon\");\r\n  //    span.classList.add(Transaction.app_input_size);\r\n  //    let i = document.createElement(\"i\");\r\n  //    let icons = menuItem.icon.split(\" \");\r\n  //    for (let icon of icons)\r\n  //    {\r\n  //      i.classList.add(icon);\r\n  //    }\r\n  //    span.appendChild(i);\r\n  //    a.appendChild(span);\r\n  //  }\r\n  //  a.appendChild(document.createTextNode(menuItem.label))\r\n  //  li.appendChild(a);\r\n  //  return li;\r\n  //}\r\n\r\n  //export function Update_Menu(menuItem: MenuItem): void\r\n  //{\r\n  //  Set_Text(\"menuTitle\", menuItem.title);\r\n  //  Set_Text(\"menuSubTitle\", menuItem.subTitle);\r\n  //  Show_Menu(menuItem.id);\r\n  //  document.getElementById(menuItem.autofocusId).focus();\r\n  //}\r\n\r\n  //export function Build_Menu_Elements(target: string, Menus: Array<MenuItem>): void\r\n  //{\r\n  //  let menu = document.getElementById(target);\r\n  //  for (let menuItem of Menus)\r\n  //  {\r\n  //    menu.appendChild(Utilities.Create_Menu_Element(menuItem));\r\n  //  }\r\n  //}\r\n\r\n\r\n  //export function CheckBrowser()\r\n  //{\r\n  //  let browser: string = \"\";\r\n  //  if ((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1) \r\n  //  {\r\n  //    browser = 'Opera';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Chrome\") != -1)\r\n  //  {\r\n  //    browser = 'Chrome';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Safari\") != -1)\r\n  //  {\r\n  //    browser = 'Safari';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Firefox\") != -1) \r\n  //  {\r\n  //    browser = 'Firefox';\r\n  //  }\r\n  //  else if ((navigator.userAgent.indexOf(\"MSIE\") != -1) || (!!document.DOCUMENT_NODE == true)) //IF IE > 10\r\n  //  {\r\n  //    browser = 'IE';\r\n  //  }\r\n  //  else \r\n  //  {\r\n  //    browser = 'unknown';\r\n  //  }\r\n  //  return browser;\r\n  //}\r\n\r\n  \r\n\r\n  //export function Create_Centered_Level(level_items: Array<LevelItem>, left: Array<LevelItem> = [], right: Array<LevelItem> = []): HTMLElement\r\n  //{\r\n  //  let level = document.createElement(\"div\");\r\n  //  level.classList.add(\"level\");\r\n\r\n  //  for (let li of level_items)\r\n  //  {\r\n  //    level.appendChild(Create_Level_Item(li));\r\n  //  }\r\n  //  if (left.length > 0)\r\n  //  {\r\n  //    let leftcontainer = document.createElement(\"div\");\r\n  //    leftcontainer.classList.add(\"level-left\");\r\n  //    level.appendChild(leftcontainer);\r\n\r\n  //    for (let li of left)\r\n  //    {\r\n  //      leftcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n  //  if (right.length > 0)\r\n  //  {\r\n  //    let rightcontainer = document.createElement(\"div\");\r\n  //    rightcontainer.classList.add(\"level-right\");\r\n  //    level.appendChild(rightcontainer);\r\n\r\n  //    for (let li of right)\r\n  //    {\r\n  //      rightcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n\r\n  //  return level;\r\n  //}\r\n\r\n  //function Create_Level_Item(level_item: LevelItem): HTMLElement\r\n  //{\r\n  //  let levelitem = document.createElement(\"div\");\r\n  //  levelitem.classList.add(\"level-item\", ...level_item.classes);\r\n  //  let container = document.createElement(\"div\");\r\n  //  levelitem.appendChild(container);\r\n  //  if (level_item.heading.length > 0)\r\n  //  {\r\n  //    let heading = document.createElement(\"p\");\r\n  //    heading.classList.add(\"heading\");\r\n  //    heading.appendChild(document.createTextNode(level_item.heading));\r\n  //    container.appendChild(heading);\r\n  //  }\r\n  //  if (level_item.title_text.length > 0)\r\n  //  {\r\n  //    let title = document.createElement(\"p\");\r\n  //    title.classList.add(\"title\");\r\n  //    title.appendChild(document.createTextNode(level_item.title_text));\r\n  //    container.appendChild(title);\r\n  //  }\r\n  //  else\r\n  //  {\r\n  //    if (level_item.title !== null)\r\n  //    {\r\n  //      container.appendChild(level_item.title);\r\n  //    }\r\n  //  }\r\n  //  return levelitem;\r\n  //}\r\n\r\n  export function CreateTableCell(celltype: string, value: string, class_to_add: string, width: string = \"\", col_span: number = -1): HTMLTableCellElement\r\n  {\r\n    if (celltype !== \"td\" && celltype !== \"th\") celltype = \"td\";\r\n    let cell = <HTMLTableCellElement>document.createElement(celltype);\r\n    if (width.length > 0) cell.style.width = width;\r\n    if (value.length > 0) cell.appendChild(document.createTextNode(value));\r\n    if (class_to_add.length > 0) cell.classList.add(class_to_add);\r\n    if (col_span > -1) cell.colSpan = col_span;\r\n    return cell;\r\n  }\r\n\r\n//}\r\n\r\n//export default Utilities;","import { Get } from './Utilities';\r\n\r\ninterface IAVL_Data\r\n{\r\n  device_id: string;\r\n  device_type: string;\r\n  unitcode: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  satellite_count: number;\r\n  velocity: number;\r\n  ip_address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n}\r\n\r\nexport class AVLData implements IAVL_Data\r\n{\r\n  public device_id: string = \"\";\r\n  public device_type: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public satellite_count: number = 0;\r\n  public velocity: number = 0;\r\n  public ip_address: string = \"\";\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n\r\n  constructor() { }\r\n\r\n  public static async Get(): Promise<Array<AVLData>>\r\n  {\r\n    const data = await Get<Array<AVLData>>('API/AVL/Get');\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default AVLData;","import React from 'react';\nimport Nav from './nav';\nimport { Store } from './Store';\nimport AVLData from './AVLData';\n//import './App.css';\n\nconst App: React.FC = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  React.useEffect(() =>\r\n  {\n    state.avl_data.length === 0 && fetchAVLData()\r\n  })\n\n  const fetchAVLData = async () =>\r\n  {\n    const data = await AVLData.Get();\r\n    return dispatch({ type: 'get_avl_data', payload: data });\r\n  }\n  console.log('state: ', state);\n\n  return (\n    <>\n      <Nav />\n      <div className=\"App\">\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport { StoreProvider } from './Store';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}