{"version":3,"sources":["Store.tsx","nav.tsx","Utilities.ts","AVL/AVLData.ts","ErrorInformation.tsx","UnitOptions.tsx","UnitHistory.ts","UnitHistoryList.tsx","AVL/AVL.tsx","AVL/AVLList.tsx","FleetComplete/FleetCompleteData.ts","FleetComplete/FC.tsx","FleetComplete/FCList.tsx","Cad/CADData.ts","Cad/CAD.tsx","Cad/CADList.tsx","Unit/UnitData.ts","Unit/UnitControls.tsx","Unit/Unit.tsx","Unit/AddUnit.tsx","Unit/UnitList.tsx","WebMapView.tsx","SimpleValue.ts","App.tsx","index.tsx"],"names":["initialState","unit_groups","current_view","avl_data","fc_data","cad_data","unit_data","filtered_avl_data","filtered_fc_data","filtered_cad_data","filtered_unit_data","avl_data_filter","fc_data_filter","cad_data_filter","unit_data_filter","avl_data_sort_field","fc_data_sort_field","cad_data_sort_field","unit_data_sort_field","avl_data_sort_ascending","fc_data_sort_ascending","cad_data_sort_ascending","unit_data_sort_ascending","avl_data_special_filter","fc_data_special_filter","cad_data_special_filter","unit_data_special_filter","Store","React","createContext","reducer","state","action","type","payload","process_avl","process_fc","process_cad","process_unit","showAVLHistory","map","a","device_id","device_history","showFCHistory","showCADHistory","unitcode","showUnitHistory","filtered","sort","filterFC","filterCAD","filterUnit","showAVLError","show_errors","showFCError","showCADError","showUnitError","showAVLUO","show_unit_options","showFCUO","showUnitControls","special_filter","array","specialFilter","length","filter","d","error_information","has_asset_tag_error","has_date_error","has_location_error","has_unit_error","has_cad_error","has_avl_error","has_fc_error","field","ascending","indexOf","b","Date","sort_dates","arrayToFilter","filterUsing","f","toLowerCase","j","filter_avl","asset_tag","filter_fc","filter_cad","group_label","using_unit","filter_unit","Nav","useContext","dispatch","className","role","aria-label","onClick","event","Get","url","async","fetch","method","headers","cache","credentials","response","ok","Error","statusText","json","Post_Empty","data","body","JSON","stringify","Format_DateTime","date","toLocaleString","AVLData","device_type","direction","location_timestamp","satellite_count","velocity","latitude","longitude","updated_on","ErrorInformation","props","colSpan","colspan","errorText","index","key","UnitOptions","useState","currentUnit","setCurrentUnit","onChange","target","value","placeholder","preventDefault","console","log","update_data","trim","UnitHistory","id","changed_from","changed_to","changed_on","changed_by","error_message","UnitHistoryList","history","title","h","AVL","fetchAVLData","GetByDeviceId","deviceHistory","Delete","alert","new_unitcode","current_unit","Update","AVLList","currentSearch","setCurrentSearch","style","padding","marginBottom","onKeyDown","stopPropagation","marginLeft","href","avl","FleetCompleteData","vin","make","model","vehicle_year","FC","fetchFCData","replace","FCList","width","fc","CADData","inci_id","status","avstatus","speed","heading","CAD","fetchCADData","CADList","cad","UnitData","show_in_minicad","avl_longitude","avl_latitude","avl_location_timestamp","has_avl_device","fc_longitude","fc_latitude","fc_location_timestamp","has_fc_device","cad_longitude","cad_latitude","cad_location_timestamp","should_have_cad_location","group","has_avl","has_fc","should_have_cad","UnitControls","label","v","g","getGroupValue","setGroup","hasAVL","setHasAVL","hasFC","setHasFC","hasCAD","setHasCAD","checked","refresh_data","Unit","fetchUnitData","getFullYear","GetByUnit","AddUnit","show_add_unit","Add","cancel","UnitList","showAddUnit","setShowAddUnit","display","currentOption","options","selectedIndex","innerText","u","WebMapView","mapRef","useRef","useEffect","loadModules","css","then","ArcGISMap","MapView","basemap","view","container","current","center","zoom","ref","SimpleValue","App","fetchUnitGroups","GetUnitGroups","paddingRight","paddingLeft","ReactDOM","render","useReducer","Provider","children","document","getElementById"],"mappings":"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","file":"static/js/main.12bebd79.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { IState, IAction } from './interfaces';\r\nimport AVLData from './AVL/AVLData';\r\nimport FleetCompleteData from './FleetComplete/FleetCompleteData';\r\nimport UnitData from './Unit/UnitData';\r\n\r\nconst initialState: IState =\r\n{\r\n  unit_groups: [],\r\n  current_view: \"unit\",\r\n\r\n  avl_data: [],\r\n  fc_data: [],\r\n  cad_data: [],\r\n  unit_data: [],\r\n\r\n  filtered_avl_data: [],\r\n  filtered_fc_data: [],\r\n  filtered_cad_data: [],\r\n  filtered_unit_data: [],\r\n\r\n  avl_data_filter: \"\",\r\n  fc_data_filter: \"\",\r\n  cad_data_filter: \"\",\r\n  unit_data_filter: \"\",\r\n\r\n  avl_data_sort_field: \"device_id\",\r\n  fc_data_sort_field: \"device_id\",\r\n  cad_data_sort_field: \"unitcode\",\r\n  unit_data_sort_field: \"unitcode\",\r\n\r\n  avl_data_sort_ascending: true,\r\n  fc_data_sort_ascending: true,\r\n  cad_data_sort_ascending: true,\r\n  unit_data_sort_ascending: true,\r\n\r\n  avl_data_special_filter: \"\",\r\n  fc_data_special_filter: \"\",\r\n  cad_data_special_filter: \"\",\r\n  unit_data_special_filter: \"\"\r\n}\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nfunction reducer(state: IState, action: IAction): IState\r\n{\r\n  switch (action.type)\r\n  {\r\n    case \"get_unit_groups_data\":\r\n      return {\r\n        ...state,\r\n        unit_groups: action.payload\r\n      }\r\n\r\n    case \"set_current_view\":\r\n      return {\r\n        ...state,\r\n        current_view: action.payload\r\n      }\r\n\r\n    case \"view_avl_by_unit\":\r\n      return {\r\n        ...state,\r\n        current_view: 'avl',        \r\n        filtered_avl_data:\r\n          process_avl(\r\n            state.avl_data,\r\n            action.payload,\r\n            state.avl_data_sort_field,\r\n            state.avl_data_sort_ascending,\r\n            state.avl_data_special_filter),\r\n        avl_data_special_filter: '',\r\n        avl_data_filter: action.payload\r\n      }\r\n\r\n    case \"view_fc_by_unit\":\r\n      return {\r\n        ...state,\r\n        current_view: 'fc',\r\n        filtered_fc_data:\r\n          process_fc(\r\n            state.fc_data,\r\n            action.payload,\r\n            state.fc_data_sort_field,\r\n            state.fc_data_sort_ascending,\r\n            state.fc_data_special_filter),\r\n        fc_data_special_filter: '',\r\n        fc_data_filter: action.payload\r\n      }\r\n\r\n    case \"view_cad_by_unit\":\r\n      return {\r\n        ...state,\r\n        current_view: 'cad',\r\n        filtered_cad_data:\r\n          process_cad(\r\n            state.cad_data,\r\n            action.payload,\r\n            state.cad_data_sort_field,\r\n            state.cad_data_sort_ascending,\r\n            state.cad_data_special_filter),\r\n        cad_data_special_filter: '',\r\n        cad_data_filter: action.payload\r\n      }\r\n\r\n    case \"get_avl_data\":\r\n      return {\r\n        ...state,\r\n        avl_data: action.payload,\r\n        filtered_avl_data:\r\n          process_avl(\r\n            action.payload,\r\n            state.avl_data_filter,\r\n            state.avl_data_sort_field,\r\n            state.avl_data_sort_ascending,\r\n            state.avl_data_special_filter)\r\n      };\r\n\r\n    case \"get_fc_data\":\r\n      return {\r\n        ...state,\r\n        fc_data: action.payload,\r\n        filtered_fc_data:\r\n          process_fc(\r\n            action.payload,\r\n            state.fc_data_filter,\r\n            state.fc_data_sort_field,\r\n            state.fc_data_sort_ascending,\r\n            state.fc_data_special_filter)\r\n      };\r\n\r\n    case \"get_cad_data\":\r\n      return {\r\n        ...state,\r\n        cad_data: action.payload,\r\n        filtered_cad_data:\r\n          process_fc(\r\n            action.payload,\r\n            state.cad_data_filter,\r\n            state.cad_data_sort_field,\r\n            state.cad_data_sort_ascending,\r\n            state.cad_data_special_filter)\r\n      };\r\n\r\n    case \"get_unit_data\":\r\n      return {\r\n        ...state,\r\n        unit_data: action.payload,\r\n        filtered_unit_data:\r\n          process_unit(\r\n            action.payload,\r\n            state.unit_data_filter,\r\n            state.unit_data_sort_field,\r\n            state.unit_data_sort_ascending,\r\n            state.unit_data_special_filter)\r\n      };\r\n\r\n    case \"search_avl_data\":\r\n      return {\r\n        ...state,\r\n        filtered_avl_data:\r\n          process_avl(\r\n            state.avl_data,\r\n            action.payload,\r\n            state.avl_data_sort_field,\r\n            state.avl_data_sort_ascending,\r\n            state.avl_data_special_filter),\r\n        avl_data_filter: action.payload\r\n      };\r\n\r\n    case \"search_fc_data\":\r\n      return {\r\n        ...state,\r\n        filtered_fc_data:\r\n          process_fc(\r\n            state.fc_data,\r\n            action.payload,\r\n            state.fc_data_sort_field,\r\n            state.fc_data_sort_ascending,\r\n            state.fc_data_special_filter),\r\n        fc_data_filter: action.payload\r\n      };\r\n\r\n    case \"search_cad_data\":\r\n      return {\r\n        ...state,\r\n        filtered_cad_data:\r\n          process_cad(\r\n            state.cad_data,\r\n            action.payload,\r\n            state.cad_data_sort_field,\r\n            state.cad_data_sort_ascending,\r\n            state.cad_data_special_filter),\r\n        cad_data_filter: action.payload\r\n      };\r\n\r\n    case \"search_unit_data\":\r\n      return {\r\n        ...state,\r\n        filtered_unit_data:\r\n          process_unit(\r\n            state.unit_data,\r\n            action.payload,\r\n            state.unit_data_sort_field,\r\n            state.unit_data_sort_ascending,\r\n            state.unit_data_special_filter),\r\n        unit_data_filter: action.payload\r\n      };\r\n\r\n    case \"avl_device_history\":\r\n      let showAVLHistory = state.filtered_avl_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload.device_id)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: showAVLHistory\r\n      };\r\n\r\n    case \"fc_device_history\":\r\n      let showFCHistory = state.filtered_fc_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload.device_id)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: showFCHistory\r\n      };\r\n\r\n    case \"cad_device_history\":\r\n      let showCADHistory = state.filtered_cad_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload.unitcode)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: showCADHistory\r\n      };\r\n\r\n    case \"unit_device_history\":\r\n      let showUnitHistory = state.filtered_unit_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload.unitcode)\r\n        {\r\n          a.device_history = action.payload.device_history;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: showUnitHistory\r\n      };\r\n\r\n\r\n    case \"avl_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: process_avl(state.avl_data, state.avl_data_filter, state.avl_data_sort_field, state.avl_data_sort_ascending, action.payload),\r\n        avl_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"fc_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: process_fc(state.fc_data, state.fc_data_filter, state.fc_data_sort_field, state.fc_data_sort_ascending, action.payload),\r\n        fc_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"cad_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: process_cad(state.cad_data, state.cad_data_filter, state.cad_data_sort_field, state.cad_data_sort_ascending, action.payload),\r\n        cad_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"unit_data_special_filter\":\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: process_cad(state.unit_data, state.unit_data_filter, state.unit_data_sort_field, state.unit_data_sort_ascending, action.payload),\r\n        unit_data_special_filter: action.payload\r\n      };\r\n\r\n    case \"avl_data_sort\":\r\n      let filtered = sort(state.filtered_avl_data, action.payload, !state.avl_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: filtered,\r\n        avl_data_sort_field: action.payload,\r\n        avl_data_sort_ascending: !state.avl_data_sort_ascending\r\n      };\r\n\r\n    case \"fc_data_sort\":\r\n      let filterFC = sort(state.filtered_fc_data, action.payload, !state.fc_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: filterFC,\r\n        fc_data_sort_field: action.payload,\r\n        fc_data_sort_ascending: !state.fc_data_sort_ascending\r\n      };\r\n\r\n    case \"cad_data_sort\":\r\n      let filterCAD = sort(state.filtered_cad_data, action.payload, !state.cad_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: filterCAD,\r\n        cad_data_sort_field: action.payload,\r\n        cad_data_sort_ascending: !state.cad_data_sort_ascending\r\n      };\r\n\r\n    case \"unit_data_sort\":\r\n      let filterUnit = sort(state.filtered_unit_data, action.payload, !state.unit_data_sort_ascending);\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: filterUnit,\r\n        unit_data_sort_field: action.payload,\r\n        unit_data_sort_ascending: !state.unit_data_sort_ascending\r\n      };\r\n\r\n    case \"avl_data_toggle_show_errors\":\r\n      let showAVLError = state.filtered_avl_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: showAVLError\r\n      };\r\n\r\n    case \"fc_data_toggle_show_errors\":\r\n      let showFCError = state.filtered_fc_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: showFCError\r\n      };\r\n\r\n    case \"cad_data_toggle_show_errors\":\r\n      let showCADError = state.filtered_cad_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_cad_data: showCADError\r\n      };\r\n\r\n    case \"unit_data_toggle_show_errors\":\r\n      let showUnitError = state.filtered_unit_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload)\r\n        {\r\n          a.show_errors = !a.show_errors;\r\n        }\r\n        return a;\r\n      });\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: showUnitError\r\n      };\r\n\r\n    case \"avl_data_toggle_show_unit_options\":\r\n      let showAVLUO = state.filtered_avl_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_unit_options = !a.show_unit_options;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_avl_data: showAVLUO\r\n      };\r\n\r\n    case \"fc_data_toggle_show_unit_options\":\r\n      let showFCUO = state.filtered_fc_data.map(a =>\r\n      {\r\n        if (a.device_id === action.payload)\r\n        {\r\n          a.show_unit_options = !a.show_unit_options;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_fc_data: showFCUO\r\n      };\r\n\r\n    case \"unit_data_toggle_show_unit_options\":\r\n      let showUnitControls = state.filtered_unit_data.map(a =>\r\n      {\r\n        if (a.unitcode === action.payload)\r\n        {\r\n          a.show_unit_options = !a.show_unit_options;\r\n        }\r\n        return a;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        filtered_unit_data: showUnitControls\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction filter_avl(arrayToFilter:Array<AVLData>, filterUsing:string): Array<AVLData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    return j.device_id.toLowerCase().indexOf(f) > -1 ||\r\n      j.unitcode.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_fc(arrayToFilter: Array<FleetCompleteData>, filterUsing: string): Array<FleetCompleteData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    return j.device_id.toLowerCase().indexOf(f) > -1 ||\r\n      j.unitcode.toLowerCase().indexOf(f) > -1 || \r\n      j.asset_tag.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_cad(arrayToFilter: Array<FleetCompleteData>, filterUsing: string): Array<FleetCompleteData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    return j.unitcode.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction filter_unit(arrayToFilter: Array<UnitData>, filterUsing: string): Array<UnitData>\r\n{\r\n  if (filterUsing.length === 0) return arrayToFilter;\r\n  let f = filterUsing.toLowerCase();\r\n  let filtered = arrayToFilter.filter(j =>\r\n  {\r\n    return j.unitcode.toLowerCase().indexOf(f) > -1 ||\r\n      j.group_label.toLowerCase().indexOf(f) > -1 ||\r\n      j.using_unit.toLowerCase().indexOf(f) > -1;\r\n  });\r\n  return filtered;\r\n}\r\n\r\nfunction special_filter(array: Array<any>, specialFilter: string): Array<any>\r\n{\r\n  if (specialFilter.length === 0) return array;\r\n  switch (specialFilter)\r\n  {\r\n    case \"error\":\r\n      let filtered = array.filter(d => d.error_information.length > 0);\r\n      return filtered;\r\n\r\n    case \"asset_tag\":\r\n      return array.filter(d => d.has_asset_tag_error);\r\n\r\n    case \"date\":\r\n      return array.filter(d => d.has_date_error);\r\n\r\n    case \"location\":\r\n      return array.filter(d => d.has_location_error);\r\n\r\n    case \"unit\":\r\n      return array.filter(d => d.has_unit_error);\r\n\r\n    case \"cad\":\r\n      return array.filter(d => d.has_cad_error);\r\n\r\n    case \"avl\":\r\n      return array.filter(d => d.has_avl_error);\r\n\r\n    case \"fc\":\r\n      return array.filter(d => d.has_fc_error);\r\n\r\n    default:\r\n      return array;\r\n  }  \r\n}\r\n\r\nfunction sort(array: Array<any>, field: string, ascending: boolean) : Array<any>\r\n{\r\n  const date_fields = ['updated_on', 'location_timestamp'];\r\n  if (date_fields.indexOf(field) > -1) return sort_dates(array, field, ascending);\r\n  let sorted = array.sort((a, b) =>\r\n  {\r\n    if (a[field] > b[field]) return ascending ? 1 : -1;\r\n    if (b[field] > a[field]) return ascending ? -1 : 1;\r\n    return 0;\r\n  });\r\n  return sorted;\r\n}\r\n\r\nfunction sort_dates(array: Array<any>, field: string, ascending: boolean): Array<any>\r\n{\r\n  let sorted = array.sort((a, b) =>\r\n  {\r\n    if (new Date(a[field]) > new Date(b[field])) return ascending ? 1 : -1;\r\n    if (new Date(b[field]) > new Date(a[field])) return ascending ? -1 : 1;\r\n    return 0;\r\n  });\r\n  return sorted;\r\n}\r\n\r\nfunction process_avl(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_avl(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nfunction process_fc(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_fc(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nfunction process_cad(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_cad(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nfunction process_unit(array: Array<any>, filter: string, field: string, ascending: boolean, specialFilter: string)\r\n{\r\n  let filtered = filter_unit(array, filter);\r\n  let special_filtered = special_filter(filtered, specialFilter);\r\n  return sort(special_filtered, field, ascending);\r\n}\r\n\r\nexport function StoreProvider(props: any): JSX.Element\r\n{\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (<Store.Provider value={{ state, dispatch }}>{props.children}</Store.Provider>);\r\n}\r\n\r\n","import React from 'react';\nimport { Store } from './Store';\n\nconst Nav = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  return (\n    <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <h1 className=\"navbar-item is-size-3 has-text-weight-bold\">Vehicle Control</h1>\r\n      </div>\r\n      <div className=\"navbar-menu\">\r\n        <div className=\"navbar-start\">\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"unit\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"unit\" ? 'is-active' : ''} `}>\r\n            Units\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"avl\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"avl\" ? 'is-active' : ''} `}>\r\n            AVL\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"fc\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"fc\" ? 'is-active' : ''} `}>\r\n            Fleet Complete\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"cad\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"cad\" ? 'is-active' : ''} `}>\r\n            CAD\r\n          </p>\r\n          <p\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: \"set_current_view\", payload: \"map\" });\r\n            }}\r\n            className={`navbar-item is-tab cursor_pointer ${state.current_view === \"map\" ? 'is-active' : ''} `}>\r\n            Map\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"navbar-end\">\r\n          <p className=\"navbar-item\">\r\n            BaseMap\r\n          </p>\r\n          <p className=\"navbar-item\">\r\n            Layers\r\n          </p>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\n  );\n}\n\nexport default Nav;\n","//namespace Utilities\r\n//{\r\n  const app_path = \"/vehiclecontrol\";\r\n\r\n  export function Hide(e: string): void\r\n  export function Hide(e: HTMLElement): void\r\n  export function Hide(e: Element): void\r\n  export function Hide(e: any):void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show(e: string): void\r\n  export function Show(e: HTMLElement): void\r\n  export function Show(e: Element): void\r\n  export function Show(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline(e: string): void\r\n  export function Show_Inline(e: HTMLElement): void\r\n  export function Show_Inline(e: Element): void\r\n  export function Show_Inline(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Inline_Flex(e: string): void\r\n  export function Show_Inline_Flex(e: HTMLElement): void\r\n  export function Show_Inline_Flex(e: Element): void\r\n  export function Show_Inline_Flex(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-inline-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show\");\r\n    e.classList.remove(\"show-flex\");\r\n  }\r\n\r\n  export function Show_Flex(e: string): void\r\n  export function Show_Flex(e: HTMLElement): void\r\n  export function Show_Flex(e: Element): void\r\n  export function Show_Flex(e: any): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    e.classList.add(\"show-flex\");\r\n    e.classList.remove(\"hide\");\r\n    e.classList.remove(\"show-inline\");\r\n    e.classList.remove(\"show\");\r\n  }\r\n\r\n  export function Error_Show(e: string, errorText?: Array<string>, timeout?: boolean): void\r\n  export function Error_Show(e: string, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: HTMLElement, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: Element, errorText?: string, timeout?: boolean): void\r\n  export function Error_Show(e: any, errorText?: any, timeout?: boolean): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    if (errorText)\r\n    {\r\n      //Set_Text(e, errorText);\r\n      Clear_Element(e);\r\n      let notification = document.createElement(\"div\");\r\n      notification.classList.add(\"notification\");\r\n      notification.classList.add(\"is-danger\");\r\n      let deleteButton = document.createElement(\"button\");\r\n      deleteButton.classList.add(\"delete\");\r\n      deleteButton.onclick = () =>\r\n      {\r\n        Hide(e);\r\n      }\r\n      notification.appendChild(deleteButton);\r\n      if (Array.isArray(errorText))\r\n      {\r\n        // we're assuming that errorText is an array if we get here.\r\n        let ul = document.createElement(\"ul\");\r\n        errorText.forEach((et) =>\r\n        {\r\n          let li = document.createElement(\"li\");\r\n          li.appendChild(document.createTextNode(<string>et));\r\n          ul.appendChild(li);\r\n        });\r\n        notification.appendChild(ul);\r\n      } else\r\n      {\r\n        notification.appendChild(document.createTextNode(errorText));\r\n\r\n      }\r\n\r\n      (<HTMLElement>e).appendChild(notification);\r\n\r\n    }\r\n    Show(e);\r\n    if (timeout === undefined || timeout === true)\r\n    {\r\n      window.setTimeout(function (j)\r\n      {\r\n        Hide(e);\r\n      }, 30000)\r\n    }\r\n  }\r\n\r\n  export function Simple_Error_Show(e: Element, errorText: string): void\r\n  {\r\n    Clear_Element(<HTMLElement>e);\r\n    e.appendChild(document.createTextNode(errorText));\r\n  }\r\n\r\n  export function Clear_Element(node: HTMLElement): void\r\n  { // this function just emptys an element of all its child nodes.\r\n    if (node === null || node === undefined) return;\r\n    while (node.firstChild)\r\n    {\r\n      node.removeChild(node.firstChild);\r\n    }\r\n  }\r\n\r\n  export function Create_Option(value: string, label: string, selected: boolean = false): HTMLOptionElement\r\n  {\r\n    let o = document.createElement(\"option\");\r\n    o.value = value;\r\n    o.text = label;\r\n    o.selected = selected;\r\n    return o;\r\n  }\r\n\r\n  export function Get_Value(e: string): string\r\n  export function Get_Value(e: HTMLSelectElement): string\r\n  export function Get_Value(e: HTMLInputElement): string\r\n  export function Get_Value(e: any): string\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    return (<HTMLInputElement>e).value;\r\n  }\r\n\r\n  export function Set_Value(e: string, value: string): void\r\n  export function Set_Value(e: HTMLSelectElement, value: string): void\r\n  export function Set_Value(e: HTMLInputElement, value: string): void\r\n  export function Set_Value(e: any, value: string): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    (<HTMLInputElement>e).value = value;\r\n  }\r\n\r\n  export function Set_Text(e: string, value: string): void\r\n  export function Set_Text(e: HTMLElement, value: string): void\r\n  export function Set_Text(e: any, value: string): void\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    Clear_Element(e);\r\n    (<HTMLElement>e).appendChild(document.createTextNode(value));\r\n  }\r\n\r\n  //export function Show_Menu(elementId: string)\r\n  //{\r\n  //  //let element = e.srcElement;\r\n  //  // we expect the element's id to be in a \"nav-XXX\" name format, where \r\n  //  // XXX is the element we want to show \r\n  //  let id = elementId.replace(\"nav-\", \"\");\r\n  //  let menuItems = <NodeListOf<HTMLElement>>document.querySelectorAll(\"#menuTabs > li > a\");\r\n  //  if (menuItems.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < menuItems.length; i++)\r\n  //    {\r\n  //      let item = menuItems.item(i);\r\n  //      if (item.id === elementId)\r\n  //      {\r\n  //        item.parentElement.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.parentElement.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //  Show_Hide_Selector(\"#views > section\", id);\r\n  //}\r\n\r\n  //export function Handle_Tabs(tabSelector: string, containerSelector: string, id: string)\r\n  //{\r\n  //  Activate_Inactivate_Selector(tabSelector, \"nav-\" + id);\r\n  //  Show_Hide_Selector(containerSelector, id);\r\n  //}\r\n\r\n  //export function Activate_Inactivate_Selector(selector: string, id: string)\r\n  //{\r\n  //  let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n  //  if (sections.length > 0)\r\n  //  {\r\n  //    for (let i = 0; i < sections.length; i++)\r\n  //    {\r\n  //      let item = sections.item(i);\r\n  //      if (item.id === id)\r\n  //      {\r\n  //        item.classList.add(\"is-active\");\r\n  //      }\r\n  //      else\r\n  //      {\r\n  //        item.classList.remove(\"is-active\");\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //}\r\n\r\n  export function Show_Hide_Selector(selector: string, id: string)\r\n  {\r\n    let sections = <NodeListOf<HTMLElement>>document.querySelectorAll(selector);\r\n    if (sections.length > 0)\r\n    {\r\n      for (let i = 0; i < sections.length; i++)\r\n      {\r\n        let item = sections.item(i);\r\n        if (item.id === id)\r\n        {\r\n          Show(item);\r\n        }\r\n        else\r\n        {\r\n          Hide(item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // original Get Function\r\n  //export function Get<T>(url: string): Promise<T>\r\n  //{\r\n  //  return fetch(url,\r\n  //    {\r\n  //      method: \"GET\",\r\n  //      headers: {\r\n  //        \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n  //      },\r\n  //      cache: \"no-cache\",\r\n  //      credentials: \"include\"\r\n  //    }\r\n  //  )\r\n  //    .then(response =>\r\n  //    {\r\n  //      if (!response.ok)\r\n  //      {\r\n  //        throw new Error(response.statusText)\r\n  //      }\r\n  //      return response.json();\r\n  //    });\r\n  //}\r\n\r\n  export function Get_Path(app_name: string = \"\"): string\r\n  {\r\n    if (app_name.length === 0) app_name = app_path;\r\n    \r\n    let path = \"/\";\r\n    let i = window.location.pathname.toLowerCase().indexOf(app_name);\r\n    if (i === 0)\r\n    {\r\n      path = app_name + \"/\";\r\n    }\r\n    console.log('using app path ' + app_path, ' returning: ' + path);\r\n    return path;\r\n  }\r\n\r\n  export async function Get_Empty(url: string): Promise<string>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.text();\r\n  }\r\n\r\n  export async function Get<T>(url: string): Promise<T>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"//,\"Upgrade-Insecure-Requests\": \"1\"\r\n        },\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n      }\r\n    );\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return await response.json();\r\n  }\r\n\r\n  export async function Post<T>(url: string, data: object): Promise<T>\r\n  {\r\n    const response = await fetch(Get_Path() + url,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    if (!response.ok)\r\n    {\r\n      throw new Error(response.statusText)\r\n    }\r\n    return response.json();\r\n\r\n  }\r\n\r\n  export async function Post_Empty(url: string, data: object): Promise<Response>\r\n  {\r\n    const response = await fetch(url,\r\n      {\r\n        method: \"POST\",\r\n        body: data !== null ? JSON.stringify(data) : \"\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\"\r\n      });\r\n\r\n    return response;\r\n  }\r\n\r\n  export function Format_Amount(amount: number): string\r\n  {\r\n    return amount.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n  }\r\n\r\n  export function Format_Date(date: Date): string\r\n  export function Format_Date(date: string): string\r\n  export function Format_Date(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleDateString('en-us');\r\n    }\r\n    var d = new Date(date);\r\n    return d.toLocaleDateString('en-US');\r\n  }\r\n\r\n  export function Format_DateTime(date: Date): string\r\n  export function Format_DateTime(date: string): string\r\n  export function Format_DateTime(date: any): string\r\n  {\r\n    if (date instanceof Date)\r\n    {\r\n      return date.toLocaleString('en-us');\r\n    }\r\n    return new Date(date).toLocaleString('en-US');\r\n  }\r\n\r\n  export function Validate_Text(e: string, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLInputElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLSelectElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: HTMLElement, errorElementId: string, errorText: string): string\r\n  export function Validate_Text(e: any, errorElementId: string, errorText: string): string\r\n  {\r\n    // this should only be used for required elements.\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let ele = (<HTMLInputElement>e);\r\n    ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.remove(\"is-danger\") : ele.classList.remove(\"is-danger\");\r\n    let v = Get_Value(ele).trim();\r\n    if (v.length === 0)\r\n    {\r\n      ele.tagName.toLowerCase() === \"select\" && ele.parentElement !== null ? ele.parentElement.classList.add(\"is-danger\") : ele.classList.add(\"is-danger\");\r\n      Error_Show(errorElementId, errorText);\r\n      ele.focus();\r\n      ele.scrollTo();\r\n      return \"\";\r\n    }\r\n    return v;\r\n\r\n  }\r\n\r\n  export function Toggle_Loading_Button(e: string, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: HTMLButtonElement, disabled: boolean)\r\n  export function Toggle_Loading_Button(e: any, disabled: boolean)\r\n  {\r\n    if (typeof e === \"string\")\r\n    {\r\n      e = document.getElementById(e);\r\n    }\r\n    let b = <HTMLButtonElement>e;\r\n    b.disabled = disabled;\r\n    b.classList.toggle(\"is-loading\", disabled);\r\n  }\r\n\r\n  //export function Create_Menu_Element(menuItem: MenuItem): HTMLLIElement\r\n  //{\r\n  //  let li = document.createElement(\"li\");\r\n  //  if (menuItem.selected) li.classList.add(\"is-active\");\r\n\r\n\r\n  //  let a = document.createElement(\"a\");\r\n  //  a.id = menuItem.id;\r\n  //  a.onclick = function ()\r\n  //  {\r\n  //    Update_Menu(menuItem);\r\n  //  }\r\n  //  if (menuItem.icon.length > 0)\r\n  //  {\r\n  //    let span = document.createElement(\"span\");\r\n  //    span.classList.add(\"icon\");\r\n  //    span.classList.add(Transaction.app_input_size);\r\n  //    let i = document.createElement(\"i\");\r\n  //    let icons = menuItem.icon.split(\" \");\r\n  //    for (let icon of icons)\r\n  //    {\r\n  //      i.classList.add(icon);\r\n  //    }\r\n  //    span.appendChild(i);\r\n  //    a.appendChild(span);\r\n  //  }\r\n  //  a.appendChild(document.createTextNode(menuItem.label))\r\n  //  li.appendChild(a);\r\n  //  return li;\r\n  //}\r\n\r\n  //export function Update_Menu(menuItem: MenuItem): void\r\n  //{\r\n  //  Set_Text(\"menuTitle\", menuItem.title);\r\n  //  Set_Text(\"menuSubTitle\", menuItem.subTitle);\r\n  //  Show_Menu(menuItem.id);\r\n  //  document.getElementById(menuItem.autofocusId).focus();\r\n  //}\r\n\r\n  //export function Build_Menu_Elements(target: string, Menus: Array<MenuItem>): void\r\n  //{\r\n  //  let menu = document.getElementById(target);\r\n  //  for (let menuItem of Menus)\r\n  //  {\r\n  //    menu.appendChild(Utilities.Create_Menu_Element(menuItem));\r\n  //  }\r\n  //}\r\n\r\n\r\n  //export function CheckBrowser()\r\n  //{\r\n  //  let browser: string = \"\";\r\n  //  if ((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1) \r\n  //  {\r\n  //    browser = 'Opera';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Chrome\") != -1)\r\n  //  {\r\n  //    browser = 'Chrome';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Safari\") != -1)\r\n  //  {\r\n  //    browser = 'Safari';\r\n  //  }\r\n  //  else if (navigator.userAgent.indexOf(\"Firefox\") != -1) \r\n  //  {\r\n  //    browser = 'Firefox';\r\n  //  }\r\n  //  else if ((navigator.userAgent.indexOf(\"MSIE\") != -1) || (!!document.DOCUMENT_NODE == true)) //IF IE > 10\r\n  //  {\r\n  //    browser = 'IE';\r\n  //  }\r\n  //  else \r\n  //  {\r\n  //    browser = 'unknown';\r\n  //  }\r\n  //  return browser;\r\n  //}\r\n\r\n  \r\n\r\n  //export function Create_Centered_Level(level_items: Array<LevelItem>, left: Array<LevelItem> = [], right: Array<LevelItem> = []): HTMLElement\r\n  //{\r\n  //  let level = document.createElement(\"div\");\r\n  //  level.classList.add(\"level\");\r\n\r\n  //  for (let li of level_items)\r\n  //  {\r\n  //    level.appendChild(Create_Level_Item(li));\r\n  //  }\r\n  //  if (left.length > 0)\r\n  //  {\r\n  //    let leftcontainer = document.createElement(\"div\");\r\n  //    leftcontainer.classList.add(\"level-left\");\r\n  //    level.appendChild(leftcontainer);\r\n\r\n  //    for (let li of left)\r\n  //    {\r\n  //      leftcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n  //  if (right.length > 0)\r\n  //  {\r\n  //    let rightcontainer = document.createElement(\"div\");\r\n  //    rightcontainer.classList.add(\"level-right\");\r\n  //    level.appendChild(rightcontainer);\r\n\r\n  //    for (let li of right)\r\n  //    {\r\n  //      rightcontainer.appendChild(Create_Level_Item(li));\r\n  //    }\r\n  //  }\r\n\r\n  //  return level;\r\n  //}\r\n\r\n  //function Create_Level_Item(level_item: LevelItem): HTMLElement\r\n  //{\r\n  //  let levelitem = document.createElement(\"div\");\r\n  //  levelitem.classList.add(\"level-item\", ...level_item.classes);\r\n  //  let container = document.createElement(\"div\");\r\n  //  levelitem.appendChild(container);\r\n  //  if (level_item.heading.length > 0)\r\n  //  {\r\n  //    let heading = document.createElement(\"p\");\r\n  //    heading.classList.add(\"heading\");\r\n  //    heading.appendChild(document.createTextNode(level_item.heading));\r\n  //    container.appendChild(heading);\r\n  //  }\r\n  //  if (level_item.title_text.length > 0)\r\n  //  {\r\n  //    let title = document.createElement(\"p\");\r\n  //    title.classList.add(\"title\");\r\n  //    title.appendChild(document.createTextNode(level_item.title_text));\r\n  //    container.appendChild(title);\r\n  //  }\r\n  //  else\r\n  //  {\r\n  //    if (level_item.title !== null)\r\n  //    {\r\n  //      container.appendChild(level_item.title);\r\n  //    }\r\n  //  }\r\n  //  return levelitem;\r\n  //}\r\n\r\n  export function CreateTableCell(celltype: string, value: string, class_to_add: string, width: string = \"\", col_span: number = -1): HTMLTableCellElement\r\n  {\r\n    if (celltype !== \"td\" && celltype !== \"th\") celltype = \"td\";\r\n    let cell = <HTMLTableCellElement>document.createElement(celltype);\r\n    if (width.length > 0) cell.style.width = width;\r\n    if (value.length > 0) cell.appendChild(document.createTextNode(value));\r\n    if (class_to_add.length > 0) cell.classList.add(class_to_add);\r\n    if (col_span > -1) cell.colSpan = col_span;\r\n    return cell;\r\n  }\r\n\r\n//}\r\n\r\n//export default Utilities;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IAVLData\r\n{\r\n  device_id: string;\r\n  device_type: string;\r\n  unitcode: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  satellite_count: number;\r\n  velocity: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class AVLData implements IAVLData\r\n{\r\n  public device_id: string = \"\";\r\n  public device_type: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public satellite_count: number = 0;\r\n  public velocity: number = 0;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n  \r\n  public static async Get(): Promise<Array<AVLData>>\r\n  {\r\n    const data = await Get<Array<AVLData>>('API/AVL/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(device_id: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/AVL/Delete?device_id=\" + device_id, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(device_id: string, device_type: string, unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/AVL/Update?device_id=${device_id}&device_type=${device_type}&unitcode=${unitcode}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default AVLData;","import React from 'react';\r\nimport { IErrorInformation } from './interfaces';\r\n\r\nconst ErrorInformation = (props: IErrorInformation) =>\r\n{\r\n  if (!props.show_errors) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      </td>\r\n      <td colSpan={props.colspan - 1}>\r\n        <ul>\r\n          {props.error_information.map(\r\n            (errorText, index) =>\r\n            {\r\n              return (\r\n                <li key={index}>\r\n                  {errorText}\r\n                </li>\r\n              )\r\n            })}\r\n        </ul>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ErrorInformation;","import React, { useState } from 'react';\r\nimport { IUnitOptions } from './interfaces';\r\n//import AVLData from './AVLData';\r\n//import { Store } from './Store';\r\n\r\nconst UnitOptions = (props: IUnitOptions) =>\r\n{\r\n  //const { dispatch } = React.useContext(Store);\r\n  const [currentUnit, setCurrentUnit] = useState(\"\");\r\n  //const fetchAVLData = async () =>\r\n  //{\r\n  //  const data = await AVLData.Get();\r\n  //  return dispatch({ type: 'get_avl_data', payload: data });\r\n  //}\r\n\r\n  if (!props.show_unit_options) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n      </td>\r\n      <td colSpan={2}\r\n        className=\"has-text-right\">\r\n        Current Unit:\r\n      </td>\r\n      <td>\r\n        {props.unitcode.length === 0 ? 'None' : props.unitcode}\r\n      </td>\r\n      <td className=\"has-text-right\">\r\n        Change To:\r\n      </td>\r\n      <td colSpan={2}>\r\n        <div className=\"field has-addons\">\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input is-small\"\r\n              type=\"text\"\r\n              onChange={event => setCurrentUnit(event.target.value)}\r\n              value={currentUnit}\r\n              placeholder=\"New Unit\" />\r\n          </div>\r\n          <div className=\"control\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={async event =>\r\n              {\r\n                event.preventDefault();\r\n                console.log('props asset_tag', props.asset_tag);\r\n                if (props.asset_tag)\r\n                {\r\n                  props.update_data(props.asset_tag, currentUnit.trim());\r\n                }\r\n                else\r\n                {\r\n                  props.update_data(props.device_id, props.device_type, currentUnit.trim());\r\n                }\r\n              }}\r\n              className=\"button is-success is-small\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UnitOptions;","import { Get } from './Utilities';\r\n\r\ninterface IUnitHistory\r\n{\r\n  id: number;\r\n  unitcode: string;\r\n  field: string;\r\n  changed_from: string;\r\n  changed_to: string;\r\n  changed_on: Date;\r\n  changed_by: string;\r\n  error_message: string;\r\n}\r\n\r\nexport class UnitHistory implements IUnitHistory\r\n{\r\n  public id: number = -1;\r\n  public unitcode: string = \"\";\r\n  public field: string = \"\";\r\n  public changed_from: string = \"\";\r\n  public changed_to: string = \"\";\r\n  public changed_on: Date = new Date();\r\n  public changed_by: string = \"\";\r\n  public error_message: string = \"\";\r\n\r\n  public static async GetByUnit(unitcode: string): Promise<Array<UnitHistory>>\r\n  {\r\n    const data = await Get<Array<UnitHistory>>('API/History/Unit?unit=' + unitcode);\r\n    return data;\r\n  }\r\n\r\n  public static async GetByDeviceId(device_id: string): Promise<Array<UnitHistory>>\r\n  {\r\n    const data = await Get<Array<UnitHistory>>('API/History/DeviceId?deviceId=' + device_id);\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default UnitHistory;","import React from 'react';\r\nimport { IUnitHistoryList } from './interfaces';\r\n//import UnitHistory from './UnitHistory';\r\nimport { Format_DateTime } from './Utilities';\r\n\r\nconst UnitHistoryList = (props: IUnitHistoryList) =>\r\n{\r\n  if (!props.history || props.history.length === 0) return null;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        \r\n      </td>\r\n      <td colSpan={props.colspan - 1}>\r\n        <table className=\"table is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                className=\"has-text-centered\"\r\n                colSpan={props.colspan}>\r\n                {props.title}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Unitcode\r\n              </th>\r\n              <th>\r\n                Field\r\n              </th>\r\n              <th>\r\n                Changed From\r\n              </th>\r\n              <th>\r\n                Changed To\r\n              </th>\r\n              <th>\r\n                Changed On\r\n              </th>\r\n              <th>\r\n                Changed By\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.history.map(\r\n              (h) =>\r\n              {\r\n                if (h.error_message.length > 0)\r\n                {\r\n                  return (\r\n                    <tr key={h.id}>\r\n                      <td colSpan={6}>{h.error_message}</td>\r\n                    </tr>\r\n                  )\r\n                }\r\n                else\r\n                {\r\n                  return (\r\n                    <tr key={h.id}>\r\n                      <td>\r\n                        {h.unitcode}\r\n                      </td>\r\n                      <td>\r\n                        {h.field}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_from}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_to}\r\n                      </td>\r\n                      <td>\r\n                        {Format_DateTime(h.changed_on)}\r\n                      </td>\r\n                      <td>\r\n                        {h.changed_by}\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                }\r\n\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default UnitHistoryList;","import React from 'react';\r\nimport AVLData from './AVLData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { IAVLDataWithIndex } from '../interfaces';\r\n\r\nconst AVL = (props:IAVLDataWithIndex) =>\r\n{\r\n  const { dispatch } = React.useContext(Store);\r\n\r\n  const UpdateAVLData = async (device_id:string, device_type: string, current_unit: string) =>\r\n  {\r\n    const response = await AVLData.Update(device_id, device_type, current_unit);\r\n    if (response.ok)\r\n    {\r\n      fetchAVLData();\r\n    }\r\n    else\r\n    {\r\n      alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n    }\r\n  }\r\n\r\n\r\n  const fetchAVLData = async () =>\r\n  {\r\n    const data = await AVLData.Get();\r\n    return dispatch({ type: 'get_avl_data', payload: data });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          {props.device_id}\r\n        </td>\r\n        <td>\r\n          <span className=\"icon\">\r\n            <i className={`fas ${props.device_type === \"Phone Number\" ? \"fa-phone\" : \"fa-sim-card\"}`}></i>\r\n          </span>\r\n          \r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Device's unit\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: 'avl_data_toggle_show_unit_options', payload: props.device_id });\r\n            }}>\r\n            {props.unitcode.length === 0 ? 'Add' : props.unitcode}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'avl_data_toggle_show_errors', payload: props.device_id });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByDeviceId(props.device_id);\r\n                dispatch({\r\n                  type: 'avl_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'avl_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await AVLData.Delete(props.device_id);\r\n              if (response.ok)\r\n              {\r\n                fetchAVLData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <UnitOptions\r\n        colspan={7}\r\n        new_unitcode=\"\"\r\n        update_data = {UpdateAVLData}\r\n        {...props} />\r\n      <ErrorInformation\r\n        colspan={7}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={7}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default AVL;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport AVLData from './AVLData';\r\nimport AVL from './AVL';\r\n\r\nconst AVLList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const [currentSearch, setCurrentSearch] = useState(state.avl_data_filter || \"\");\r\n\r\n  const fetchAVLData = async () =>\r\n  {\r\n    const data = await AVLData.Get();\r\n    return dispatch({ type: 'get_avl_data', payload: data });\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div\r\n        style={{ padding: \"1em\", marginBottom: 0 }}\r\n        className=\"level\">\r\n        <div className=\"level-left\">\r\n          <div className=\"level-item is-size-3 has-text-weight-bold\">\r\n            AVL\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <input\r\n                  title=\"Search for text in the Device Id and Unit fields.  Hit Enter to Search.\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  onChange={event => setCurrentSearch(event.target.value)}\r\n                  value={currentSearch}\r\n                  onKeyDown={event =>\r\n                  {\r\n                    if (event.key === 'Enter')\r\n                    {\r\n                      event.preventDefault();\r\n                      event.stopPropagation();\r\n                      dispatch({\r\n                        type: \"search_avl_data\",\r\n                        payload: currentSearch\r\n                      })\r\n                    }\r\n\r\n                  }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                fetchAVLData();\r\n              }}\r\n              title=\"Refresh the AVL Data\"\r\n              type=\"button\"\r\n              className=\"button is-success is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-sync-alt\"></i>\r\n              </span>\r\n            </button>\r\n            <button\r\n              style={{marginLeft: \".5em\"}}\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setCurrentSearch(\"\");\r\n                dispatch({\r\n                  type: \"search_avl_data\",\r\n                  payload: ''\r\n                })\r\n              }}\r\n              title=\"Reset the Search\"\r\n              type=\"button\"\r\n              className=\"button is-warning is-small\">              \r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-undo-alt\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n          <p className=\"level-item has-text-weight-bold\">Error Filters</p>\r\n          <div className=\"level-item tabs\">\r\n            <ul>\r\n              <li className={`${state.avl_data_special_filter === '' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#NoFilter\"\r\n                  onClick={event => { dispatch({ type: \"avl_data_special_filter\", payload: '' }) }}>\r\n                  Show All\r\n                </a>\r\n              </li>\r\n              <li className={`${state.avl_data_special_filter === 'error' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#AllErrors\"\r\n                  onClick={event => { dispatch({ type: \"avl_data_special_filter\", payload: 'error' }) }}>\r\n                  All Errors\r\n                </a>\r\n              </li>\r\n              <li className={`${state.avl_data_special_filter === 'unit' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#UnitErrors\"\r\n                  onClick={event => { dispatch({ type: \"avl_data_special_filter\", payload: 'unit' }) }}>\r\n                  Unit\r\n                </a>\r\n              </li>\r\n              <li className={`${state.avl_data_special_filter === 'date' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#DateErrors\"\r\n                  onClick={event => { dispatch({ type: \"avl_data_special_filter\", payload: 'date' }) }}>\r\n                  Date\r\n                </a>\r\n              </li>\r\n              <li className={`${state.avl_data_special_filter === 'location' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#LocationErrors\"\r\n                  onClick={event => { dispatch({ type: \"avl_data_special_filter\", payload: 'location' }) }}>\r\n                  Location\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDeviceId\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'device_id' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'device_id' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Device Id\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDeviceType\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'device_type' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'device_type' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Type\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'unitcode' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'updated_on' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'avl_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${state.avl_data_sort_field !== 'location_timestamp' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_avl_data.map((avl, index) =>\r\n          {\r\n            return (<AVL key={avl.device_id} index={index} {...avl} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AVLList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IFleetCompleteData\r\n{\r\n  device_id: string;\r\n  asset_tag: string\r\n  unitcode: string;\r\n  vin: string;\r\n  make: string;\r\n  model: string;\r\n  vehicle_year: string;\r\n  direction: number;\r\n  location_timestamp: Date;\r\n  updated_on: Date;\r\n  velocity: number;\r\n  latitude: number;\r\n  longitude: number;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_asset_tag_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class FleetCompleteData implements IFleetCompleteData\r\n{\r\n  public device_id: string = \"\";\r\n  public asset_tag: string = \"\";\r\n  public unitcode: string = \"\";\r\n  public vin: string = \"\";\r\n  public make: string = \"\";\r\n  public model: string = \"\";\r\n  public vehicle_year: string = \"\";\r\n  public direction: number = 0;\r\n  public location_timestamp: Date = new Date();\r\n  public updated_on: Date = new Date();\r\n  public velocity: number = 0;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;  \r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_asset_tag_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<FleetCompleteData>>\r\n  {\r\n    const data = await Get<Array<FleetCompleteData>>('API/FC/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(device_id: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/FC/Delete?device_id=\" + device_id, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(asset_tag: string, unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/FC/Update?asset_tag=${asset_tag}&unitcode=${unitcode}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default FleetCompleteData;","import React from 'react';\r\nimport FleetCompleteData from './FleetCompleteData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { IFCDataWithIndex } from '../interfaces';\r\n\r\nconst FC = (props: IFCDataWithIndex) =>\r\n{\r\n  const { dispatch } = React.useContext(Store);\r\n\r\n  const updateFCData = async (asset_tag: string, current_unit: string) =>\r\n  {\r\n    const response = await FleetCompleteData.Update(asset_tag, current_unit);\r\n    if (response.ok)\r\n    {\r\n      fetchFCData();\r\n    }\r\n    else\r\n    {\r\n      alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n    }\r\n  }\r\n\r\n  const fetchFCData = async () =>\r\n  {\r\n    const data = await FleetCompleteData.Get();\r\n    return dispatch({ type: 'get_fc_data', payload: data });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          {props.device_id.replace(/^0+/, '')}\r\n        </td>\r\n        <td>\r\n          {props.asset_tag === props.device_id ? '' : props.asset_tag}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Device's unit\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: 'fc_data_toggle_show_unit_options', payload: props.device_id });\r\n            }}>\r\n            {props.unitcode.length === 0 ? 'Add' : props.unitcode}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td\r\n          className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'fc_data_toggle_show_errors', payload: props.device_id });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByDeviceId(props.asset_tag);\r\n                dispatch({\r\n                  type: 'fc_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'fc_device_history',\r\n                  payload: {\r\n                    device_id: props.device_id,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await FleetCompleteData.Delete(props.device_id);\r\n              if (response.ok)\r\n              {\r\n                fetchFCData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>\r\n\r\n      <UnitOptions\r\n        colspan={7}\r\n        new_unitcode=\"\"\r\n        update_data={updateFCData}\r\n        {...props} />\r\n\r\n      <ErrorInformation\r\n        colspan={7}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={7}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default FC;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport FleetCompleteData from './FleetCompleteData';\r\nimport FC from './FC';\r\n\r\nconst FCList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const [currentSearch, setCurrentSearch] = useState(state.fc_data_filter || \"\");\r\n\r\n  const fetchFCData = async () =>\r\n  {\r\n    const data = await FleetCompleteData.Get();\r\n    return dispatch({ type: 'get_fc_data', payload: data });\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div\r\n        style={{ padding: \"1em\", marginBottom: 0 }}\r\n        className=\"level\">\r\n        <div className=\"level-left\">\r\n          <div className=\"level-item is-size-3 has-text-weight-bold\">\r\n            FC\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <input\r\n                  title=\"Search for text in the Device Id, Unit, and Asset Tag fields.  Hit Enter to Search.\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  onChange={event => setCurrentSearch(event.target.value)}\r\n                  value={currentSearch}\r\n                  onKeyDown={event =>\r\n                  {\r\n                    if (event.key === 'Enter')\r\n                    {\r\n                      event.preventDefault();\r\n                      event.stopPropagation();\r\n                      dispatch({\r\n                        type: \"search_fc_data\",\r\n                        payload: (event.target as HTMLInputElement).value\r\n                      })\r\n                    }\r\n\r\n                  }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                fetchFCData();\r\n              }}\r\n              title=\"Refresh the Fleet Complete Data\"\r\n              type=\"button\"\r\n              className=\"button is-success is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-sync-alt\"></i>\r\n              </span>\r\n            </button>\r\n            <button\r\n              style={{ marginLeft: \".5em\" }}\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setCurrentSearch(\"\");\r\n                dispatch({\r\n                  type: \"search_fc_data\",\r\n                  payload: ''\r\n                })\r\n              }}\r\n              title=\"Reset the Search\"\r\n              type=\"button\"\r\n              className=\"button is-warning is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-undo-alt\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n          <p className=\"level-item has-text-weight-bold\">Error Filters</p>\r\n          <div className=\"level-item tabs\">\r\n            <ul>\r\n              <li className={`${state.fc_data_special_filter === '' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#NoFilter\"\r\n                  onClick={event => { dispatch({ type: \"fc_data_special_filter\", payload: '' }) }}>\r\n                  Show All\r\n                </a>\r\n              </li>\r\n              <li className={`${state.fc_data_special_filter === 'error' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#AllErrors\"\r\n                  onClick={event => { dispatch({ type: \"fc_data_special_filter\", payload: 'error' }) }}>\r\n                  Errors\r\n                </a>\r\n              </li>\r\n              <li className={`${state.fc_data_special_filter === 'unit' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#AssetTagErrors\"\r\n                  onClick={event => { dispatch({ type: \"fc_data_special_filter\", payload: 'asset_tag' }) }}>\r\n                  Asset Tag\r\n                </a>\r\n              </li>\r\n              <li className={`${state.fc_data_special_filter === 'unit' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#UnitErrors\"\r\n                  onClick={event => { dispatch({ type: \"fc_data_special_filter\", payload: 'unit' }) }}>\r\n                  Unit\r\n                </a>\r\n              </li>\r\n              <li className={`${state.fc_data_special_filter === 'date' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#DateErrors\"\r\n                  onClick={event => { dispatch({ type: \"fc_data_special_filter\", payload: 'date' }) }}>\r\n                  Date\r\n                </a>\r\n              </li>\r\n              <li className={`${state.fc_data_special_filter === 'location' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#LocationErrors\"\r\n                  onClick={event => { dispatch({ type: \"fc_data_special_filter\", payload: 'location' }) }}>\r\n                  Location\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: \"5%\"}}>\r\n              #\r\n            </th>\r\n            <th style={{ width: \"10%\" }}>\r\n              <a\r\n                href=\"#SortByDeviceId\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'device_id' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'device_id' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Device Id\r\n              </a>\r\n            </th>\r\n            <th style={{width: \"10%\"}}>\r\n              <a\r\n                href=\"#SortByAssetTag\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'asset_tag' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'asset_tag' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Asset Tag\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"10%\" }}>\r\n              <a\r\n                href=\"#SortByUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'unitcode' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"25%\" }}>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'updated_on' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"25%\" }}>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'fc_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${state.fc_data_sort_field !== 'location_timestamp' ? '' : state.fc_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th style={{ width: \"15%\" }}\r\n              className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_fc_data.map((fc, index) =>\r\n          {\r\n            return (<FC key={fc.device_id} index={index} {...fc} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FCList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface ICADData\r\n{\r\n  unitcode: string;\r\n  location_timestamp: Date;\r\n  inci_id: string;\r\n  status: string;\r\n  avstatus: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  speed: number;\r\n  heading: number; \r\n  updated_on: Date;\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  has_date_error: boolean;\r\n  has_location_error: boolean;\r\n  has_unit_error: boolean;\r\n  device_history: Array<any>;\r\n}\r\n\r\nexport class CADData implements ICADData\r\n{\r\n  public unitcode: string = \"\";\r\n  public location_timestamp: Date = new Date();\r\n  public inci_id: string = \"\";\r\n  public status: string = \"\";\r\n  public avstatus: string = \"\";\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public speed: number = 0;\r\n  public heading: number = 0;\r\n  public updated_on: Date = new Date();\r\n  public error_information: Array<string> = [];\r\n  public show_unit_options: boolean = false;\r\n  public show_errors: boolean = false;\r\n  public has_date_error: boolean = false;\r\n  public has_location_error: boolean = false;\r\n  public has_unit_error: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<CADData>>\r\n  {\r\n    const data = await Get<Array<CADData>>('API/CAD/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/CAD/Delete?unitcode=\" + unitcode, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default CADData;","import React from 'react';\r\nimport CADData from './CADData';\r\nimport { Store } from '../Store';\r\nimport { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport { ICADDataWithIndex } from '../interfaces';\r\n\r\nconst CAD = (props:ICADDataWithIndex) =>\r\n{\r\n  const { dispatch } = React.useContext(Store);\r\n\r\n  const fetchCADData = async () =>\r\n  {\r\n    const data = await CADData.Get();\r\n    return dispatch({ type: 'get_cad_data', payload: data });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          {props.unitcode}\r\n        </td>\r\n        <td>\r\n          {props.inci_id.trim().length > 0 ? 'On A Call' : ''}\r\n        </td>\r\n        <td>\r\n          {props.status}\r\n        </td>\r\n        <td>\r\n          {props.avstatus}\r\n        </td>\r\n\r\n        <td>\r\n          {Format_DateTime(props.updated_on)}\r\n        </td>\r\n        <td>\r\n          {Format_DateTime(props.location_timestamp)}\r\n        </td>\r\n        <td className=\"has-text-right icon-options\">\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'cad_data_toggle_show_errors', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByDeviceId(props.unitcode);\r\n                dispatch({\r\n                  type: 'cad_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'cad_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          <span\r\n            title=\"Delete This Device\"\r\n            className=\"icon cursor_pointer has-text-danger\"            \r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n              const response = await CADData.Delete(props.unitcode);\r\n              if (response.ok)\r\n              {\r\n                fetchCADData();\r\n              }\r\n              else\r\n              {\r\n                alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n              }\r\n            }\r\n            }>\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </span>\r\n\r\n\r\n        </td>\r\n      </tr>      \r\n      <ErrorInformation\r\n        colspan={8}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={8}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default CAD;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport CADData from './CADData';\r\nimport CAD from './CAD';\r\n\r\nconst CADList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const [currentSearch, setCurrentSearch] = useState(state.cad_data_filter || \"\");\r\n\r\n  const fetchCADData = async () =>\r\n  {\r\n    const data = await CADData.Get();\r\n    return dispatch({ type: 'get_cad_data', payload: data });\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div\r\n        style={{ padding: \"1em\", marginBottom: 0 }}\r\n        className=\"level\">\r\n        <div className=\"level-left\">\r\n          <div className=\"level-item is-size-3 has-text-weight-bold\">\r\n            CAD\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <input\r\n                  title=\"Search for text in the UnitCode field.  Hit Enter to Search.\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  onChange={event => setCurrentSearch(event.target.value)}\r\n                  value={currentSearch}\r\n                  onKeyDown={event =>\r\n                  {\r\n                    if (event.key === 'Enter')\r\n                    {\r\n                      event.preventDefault();\r\n                      event.stopPropagation();\r\n                      dispatch({\r\n                        type: \"search_cad_data\",\r\n                        payload: (event.target as HTMLInputElement).value\r\n                      })\r\n                    }\r\n\r\n                  }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                fetchCADData();\r\n              }}\r\n              title=\"Refresh the CAD Data\"\r\n              type=\"button\"\r\n              className=\"button is-success is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-sync-alt\"></i>\r\n              </span>\r\n            </button>\r\n            <button\r\n              style={{ marginLeft: \".5em\" }}\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setCurrentSearch(\"\");\r\n                dispatch({\r\n                  type: \"search_cad_data\",\r\n                  payload: ''\r\n                })\r\n              }}\r\n              title=\"Reset the Search\"\r\n              type=\"button\"\r\n              className=\"button is-warning is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-undo-alt\"></i>\r\n              </span>\r\n            </button>\r\n            </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n          <p className=\"level-item has-text-weight-bold\">Error Filters</p>\r\n          <div className=\"level-item tabs\">\r\n            <ul>\r\n              <li className={`${state.cad_data_special_filter === '' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#NoFilter\"\r\n                  onClick={event => { dispatch({ type: \"cad_data_special_filter\", payload: '' }) }}>\r\n                  Show All\r\n                </a>\r\n              </li>\r\n              <li className={`${state.cad_data_special_filter === 'error' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#AllErrors\"\r\n                  onClick={event => { dispatch({ type: \"cad_data_special_filter\", payload: 'error' }) }}>\r\n                  Errors\r\n                </a>\r\n              </li>\r\n              <li className={`${state.cad_data_special_filter === 'date' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#DateErrors\"\r\n                  onClick={event => { dispatch({ type: \"cad_data_special_filter\", payload: 'date' }) }}>\r\n                  Date\r\n                </a>\r\n              </li>\r\n              <li className={`${state.cad_data_special_filter === 'location' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#LocationErrors\"\r\n                  onClick={event => { dispatch({ type: \"cad_data_special_filter\", payload: 'location' }) }}>\r\n                  Location\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitCode\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'unitcode' ? '' : state.avl_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit Code\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByCallStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'inci_id' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'inci_id' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Call Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'status' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'status' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitAVStatus\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'avstatus' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'avstatus' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                AV Status\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByDateSavedOn\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'updated_on' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'updated_on' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Data Saved On\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByLocationDate\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'cad_data_sort', payload: 'location_timestamp' });\r\n                }}\r\n                className={`${state.cad_data_sort_field !== 'location_timestamp' ? '' : state.cad_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Location On\r\n              </a>\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.filtered_cad_data.map((cad, index) =>\r\n          {\r\n            return (<CAD key={cad.unitcode} index={index} {...cad} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CADList;","import { Get, Post_Empty } from '../Utilities';\r\n\r\ninterface IUnitData\r\n{\r\n  unitcode: string;\r\n  using_unit: string;\r\n  group_label: string;\r\n  show_in_minicad: boolean;\r\n\r\n  avl_longitude: number;\r\n  avl_latitude: number;\r\n  avl_location_timestamp: Date;\r\n  has_avl_device: boolean;\r\n  has_avl_error: boolean;\r\n\r\n  fc_longitude: number;\r\n  fc_latitude: number;\r\n  fc_location_timestamp: Date;\r\n  has_fc_device: boolean;\r\n  has_fc_error: boolean;\r\n\r\n  cad_longitude: number;\r\n  cad_latitude: number;\r\n  cad_location_timestamp: Date;\r\n  should_have_cad_location: boolean;\r\n  has_cad_error: boolean;\r\n\r\n  error_information: Array<string>;\r\n  show_errors: boolean;\r\n  show_unit_options: boolean;\r\n  device_history: Array<any>;\r\n\r\n}\r\n\r\nexport class UnitData implements IUnitData\r\n{\r\n  public unitcode: string = \"\";\r\n  public using_unit: string = \"\";\r\n  public group_label: string = \"\";\r\n  public show_in_minicad: boolean = false;\r\n  \r\n  public avl_longitude: number = 0;\r\n  public avl_latitude: number = 0;\r\n  public avl_location_timestamp: Date = new Date();\r\n  public has_avl_device: boolean = false;\r\n  public has_avl_error: boolean = false;\r\n  \r\n  public fc_longitude: number = 0;\r\n  public fc_latitude: number =0;\r\n  public fc_location_timestamp: Date = new Date();\r\n  public has_fc_device: boolean = false;\r\n  public has_fc_error: boolean = false;\r\n  \r\n  public cad_longitude: number = 0;\r\n  public cad_latitude: number = 0;\r\n  public cad_location_timestamp: Date = new Date();\r\n  public should_have_cad_location: boolean = false;\r\n  public has_cad_error: boolean = false;\r\n  \r\n  public error_information: Array<string> = [];\r\n  public show_errors: boolean = false;\r\n  public show_unit_options: boolean = false;\r\n  public device_history: Array<any> = [];\r\n\r\n  public static async Get(): Promise<Array<UnitData>>\r\n  {\r\n    const data = await Get<Array<UnitData>>('API/Unit/Get');\r\n    return data;\r\n  }\r\n\r\n  public static async Delete(unitcode: string): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(\"API/Unit/Delete?unitcode=\" + unitcode, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Update(unitcode: string, group: string, has_avl: boolean, has_fc: boolean, should_have_cad: boolean): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/Unit/Update?unitcode=${unitcode}&group=${group}&has_avl=${has_avl}&has_fc=${has_fc}&should_have_cad=${should_have_cad}`, {});\r\n    return response;\r\n  }\r\n\r\n  public static async Add(unitcode: string, group: string, has_avl: boolean, has_fc: boolean, should_have_cad: boolean): Promise<Response>\r\n  {\r\n    const response = await Post_Empty(`API/Unit/Add?unitcode=${unitcode}&group=${group}&has_avl=${has_avl}&has_fc=${has_fc}&should_have_cad=${should_have_cad}`, {});\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default UnitData;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IUnitControls } from '../interfaces';\r\nimport UnitData from './UnitData';\r\n\r\nconst UnitControls = (props: IUnitControls) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const getGroupValue = (label: string) =>\r\n  {\r\n    if (label.length === 0) return label;\r\n    let v = state.unit_groups.filter(g => g.label === label);\r\n    if (v.length > 0) return v[0].value;\r\n    return '';\r\n  }\r\n\r\n  const [currentUnit, setCurrentUnit] = useState(props.unitcode);\r\n  const [group, setGroup] = useState(getGroupValue(props.group_label));\r\n  const [hasAVL, setHasAVL] = useState(props.has_avl_device);\r\n  const [hasFC, setHasFC] = useState(props.has_fc_device);\r\n  const [hasCAD, setHasCAD] = useState(props.should_have_cad_location);\r\n\r\n\r\n  if (!props.show_unit_options) return null;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Group:\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <div className=\"select is-small\">\r\n                <select value={group}\r\n                  onChange={event =>\r\n                  {\r\n                    setGroup(event.target.value)\r\n                  }}>\r\n                  <option value=\"\">No Group</option>\r\n                  {\r\n                    state.unit_groups.map(group =>\r\n                  {\r\n                    return (\r\n                      <option key={group.value} value={group.value}>{group.label}</option>\r\n                    )\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has AVL Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasAVL}\r\n                  onChange={event => setHasAVL(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has Fleet Complete Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasFC}\r\n                  onChange={event => setHasFC(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Should Have CAD Location\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasCAD}\r\n                  onChange={event => setHasCAD(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan={3}>\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <button\r\n                onClick={async (event) => \r\n                {\r\n                  event.preventDefault();\r\n                  const response = await UnitData.Update(props.unitcode, group, hasAVL, hasFC, hasCAD);\r\n                  if (response.ok)\r\n                  {\r\n                    props.refresh_data();\r\n                  }\r\n                  else\r\n                  {\r\n                    alert(\"There was a problem updating this record. Please contact MIS Development for more information.\");\r\n                  }\r\n                }}\r\n                title=\"This will save all of the selections above\"\r\n                className=\"is-success button is-small\">\r\n                Save\r\n              </button>\r\n              <button\r\n                title=\"Close the Unit Options menu without saving any changes\"\r\n                style={{ marginLeft: \"1em\" }}\r\n                className=\"is-warning button is-small\"\r\n                onClick={event =>\r\n                {\r\n                  dispatch({ type: 'unit_data_toggle_show_unit_options', payload: props.unitcode });\r\n                }}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UnitControls;\r\n\r\n","import React from 'react';\r\nimport UnitData from './UnitData';\r\nimport { Store } from '../Store';\r\n//import { Format_DateTime } from '../Utilities';\r\nimport ErrorInformation from '../ErrorInformation';\r\n//import UnitOptions from '../UnitOptions';\r\nimport UnitHistory from '../UnitHistory';\r\nimport UnitHistoryList from '../UnitHistoryList';\r\nimport UnitControls from './UnitControls';\r\nimport { IUnitDataWithIndex, IUnitControls } from '../interfaces';\r\n\r\n\r\nconst Unit = (props: IUnitDataWithIndex) =>\r\n{\r\n  const { dispatch } = React.useContext(Store);\r\n\r\n  //const updateUnitData = async (asset_tag: string, current_unit: string) =>\r\n  //{\r\n  //  const response = await UnitData.Update(asset_tag, current_unit);\r\n  //  if (response.ok)\r\n  //  {\r\n  //    fetchFCData();\r\n  //  }\r\n  //  else\r\n  //  {\r\n  //    alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n  //  }\r\n  //}\r\n\r\n  const fetchUnitData = async () =>\r\n  {\r\n    const data = await UnitData.Get();\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          {props.index + 1}\r\n        </td>\r\n        <td>\r\n          <span\r\n            title=\"Change this Unit's Information\"\r\n            className=\"cursor_pointer has-text-link\"\r\n            onClick={event =>\r\n            {\r\n              dispatch({ type: 'unit_data_toggle_show_unit_options', payload: props.unitcode });\r\n            }}>\r\n            {props.unitcode}\r\n          </span>\r\n          \r\n        </td>\r\n        <td>\r\n          {props.using_unit}\r\n        </td>\r\n        <td>\r\n          {props.group_label}\r\n        </td>\r\n        <td>\r\n          {props.avl_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon\">\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ): ''}\r\n          {new Date(props.avl_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\" }}\r\n              title=\"View this on the AVL Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'view_avl_by_unit', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.fc_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon\">\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}\r\n          {new Date(props.fc_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{ marginLeft: \".5em\" }}\r\n              title=\"View this on the Fleet Complete Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'view_fc_by_unit', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n          ) : ''}\r\n        </td>\r\n        <td>\r\n          {props.cad_latitude !== 0 ? (\r\n            <span\r\n              title=\"View this on the Map\"\r\n              className=\"icon\">\r\n              <i className=\"fas fa-eye\"></i>\r\n            </span>\r\n          ) : ''}          \r\n          {new Date(props.cad_location_timestamp).getFullYear() > 1995 ? (\r\n            <span\r\n              style={{marginLeft: \".5em\"}}\r\n              title=\"View this on the CAD Menu\"\r\n              className=\"icon cursor_pointer\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'view_cad_by_unit', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-edit\"></i>\r\n            </span>\r\n            ) : ''}\r\n        </td>\r\n        <td\r\n          className=\"has-text-right icon-options\">\r\n          {\r\n            // show errors, history, delete\r\n          }\r\n          {props.error_information.length > 0 ? (\r\n            <span\r\n              title=\"View Errors\"\r\n              className=\"icon cursor_pointer has-text-warning\"\r\n              onClick={event =>\r\n              {\r\n                dispatch({ type: 'unit_data_toggle_show_errors', payload: props.unitcode });\r\n              }\r\n              }>\r\n              <i className=\"fas fa-exclamation-circle\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n          <span\r\n            title=\"View History\"\r\n            className=\"icon cursor_pointer has-text-link\"\r\n            onClick={async event =>\r\n            {\r\n              event.preventDefault();\r\n\r\n              if (!props.device_history || props.device_history.length === 0)\r\n              {\r\n                let deviceHistory = await UnitHistory.GetByUnit(props.unitcode);\r\n                dispatch({\r\n                  type: 'unit_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: deviceHistory\r\n                  }\r\n                });\r\n              }\r\n              else\r\n              {\r\n                dispatch({\r\n                  type: 'unit_device_history',\r\n                  payload: {\r\n                    unitcode: props.unitcode,\r\n                    device_history: []\r\n                  }\r\n                });\r\n              }\r\n            }}>\r\n            <i className=\"fas fa-history\"></i>\r\n          </span>\r\n\r\n          {new Date(props.avl_location_timestamp).getFullYear() === 1995 && \r\n            new Date(props.fc_location_timestamp).getFullYear() === 1995 && \r\n            new Date(props.cad_location_timestamp).getFullYear() === 1995? (\r\n            <span\r\n              style={{ marginLeft: \".5em\" }}\r\n              title=\"Delete This Device\"\r\n              className=\"icon cursor_pointer has-text-danger\"\r\n              onClick={async event =>\r\n              {\r\n                event.preventDefault();\r\n                const response = await UnitData.Delete(props.unitcode);\r\n                if (response.ok)\r\n                {\r\n                  fetchUnitData();\r\n                }\r\n                else\r\n                {\r\n                  alert(\"There was a problem with deleting this record. Please contact MIS Development for more information.\");\r\n                }\r\n              }\r\n              }>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </span>\r\n          ) : ''}\r\n\r\n\r\n        </td>\r\n      </tr>\r\n      <UnitControls \r\n        colspan={8}\r\n        refresh_data={fetchUnitData}\r\n        {...props}\r\n        />\r\n      <ErrorInformation\r\n        colspan={8}\r\n        error_information={props.error_information}\r\n        show_errors={props.show_errors} />\r\n      <UnitHistoryList\r\n        colspan={8}\r\n        title=\"History By Device Id\"\r\n        history={props.device_history}\r\n      />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Unit;","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IAddUnit } from '../interfaces';\r\nimport UnitData from './UnitData';\r\n\r\nconst AddUnit = (props: IAddUnit) =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const getGroupValue = (label: string) =>\r\n  {\r\n    if (label.length === 0) return label;\r\n    let v = state.unit_groups.filter(g => g.label === label);\r\n    if (v.length > 0) return v[0].value;\r\n    return '';\r\n  }\r\n\r\n  const fetchUnitData = async () =>\r\n  {\r\n    const data = await UnitData.Get();\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\r\n\r\n  const [currentUnit, setCurrentUnit] = useState(props.unitcode);\r\n  const [group, setGroup] = useState(getGroupValue(props.group_label));\r\n  const [hasAVL, setHasAVL] = useState(props.has_avl_device);\r\n  const [hasFC, setHasFC] = useState(props.has_fc_device);\r\n  const [hasCAD, setHasCAD] = useState(props.should_have_cad_location);\r\n\r\n  if (!props.show_add_unit) return null;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Unit Code\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <input\r\n                  value={currentUnit}\r\n                  onChange={event => setCurrentUnit(event.target.value)}\r\n                  type=\"text\" />\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Group:\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <div className=\"select is-small\">\r\n                <select value={group}\r\n                  onChange={event =>\r\n                  {\r\n                    console.log('event', event, event.target.value);\r\n                    setGroup(event.target.value)\r\n                  }}>\r\n                  <option value=\"\">No Group</option>\r\n                  {\r\n                    state.unit_groups.map(group =>\r\n                    {\r\n                      return (\r\n                        <option key={group.value} value={group.value}>{group.label}</option>\r\n                      )\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has AVL Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasAVL}\r\n                  onChange={event => setHasAVL(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Has Fleet Complete Device\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasFC}\r\n                  onChange={event => setHasFC(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n        </td>\r\n        <td colSpan={2}\r\n          className=\"has-text-right\">\r\n          Should Have CAD Location\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <label className=\"checkbox\">\r\n                <input\r\n                  checked={hasCAD}\r\n                  onChange={event => setHasCAD(event.target.checked)}\r\n                  type=\"checkbox\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan={3}>\r\n        </td>\r\n        <td>\r\n          <div className=\"field\">\r\n            <div className=\"control\">\r\n              <button\r\n                onClick={async (event) => \r\n                {\r\n                  event.preventDefault();\r\n                  const response = await UnitData.Add(currentUnit, group, hasAVL, hasFC, hasCAD);\r\n                  if (response.ok)\r\n                  {\r\n                    fetchUnitData();\r\n                    setCurrentUnit(\"\");\r\n                    setHasAVL(false);\r\n                    setHasFC(false);\r\n                    setHasCAD(false);\r\n                    setGroup(\"\");\r\n                    props.cancel();\r\n                  }\r\n                  else\r\n                  {\r\n                    alert(\"There was a problem updating this record. Please contact MIS Development for more information.\");\r\n                  }\r\n                }}\r\n                title=\"This will save all of the selections above\"\r\n                className=\"is-success button is-small\">\r\n                Save\r\n              </button>\r\n              <button\r\n                title=\"Close the Unit Options menu without saving any changes\"\r\n                style={{ marginLeft: \"1em\" }}\r\n                className=\"is-warning button is-small\"\r\n                onClick={event =>\r\n                {\r\n                  props.cancel();\r\n                }}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td colSpan={4}></td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddUnit;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Store } from '../Store';\r\nimport UnitData from './UnitData';\r\nimport Unit from './Unit';\r\nimport AddUnit from './AddUnit';\r\n\r\nconst UnitList: React.FC = () =>\r\n{\r\n  const { state, dispatch } = React.useContext(Store);\r\n\r\n  const [currentSearch, setCurrentSearch] = useState(state.avl_data_filter || \"\");\r\n  const [showAddUnit, setShowAddUnit] = useState(false);\r\n\r\n  const fetchUnitData = async () =>\r\n  {\r\n    const data = await UnitData.Get();\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\r\n\r\n  const hideAddUnit = () =>\r\n  {\r\n    setShowAddUnit(false);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div\r\n        style={{ padding: \"1em\", marginBottom: 0 }}\r\n        className=\"level\">\r\n        <div className=\"level-left\">\r\n          <div className=\"level-item is-size-3 has-text-weight-bold\">\r\n            Unit\r\n          </div>\r\n          <div className=\"level-item\">\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <input\r\n                  title=\"Search for text in the Device Id, Unit, and Asset Tag fields.  Hit Enter to Search.\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  onChange={event => setCurrentSearch(event.target.value)}\r\n                  value={currentSearch}\r\n                  onKeyDown={event =>\r\n                  {\r\n                    if (event.key === 'Enter')\r\n                    {\r\n                      event.preventDefault();\r\n                      event.stopPropagation();\r\n                      dispatch({\r\n                        type: \"search_unit_data\",\r\n                        payload: (event.target as HTMLInputElement).value\r\n                      })\r\n                    }\r\n\r\n                  }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                fetchUnitData();\r\n              }}\r\n              title=\"Refresh the Unit Data\"\r\n              type=\"button\"\r\n              className=\"button is-success is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-sync-alt\"></i>\r\n              </span>\r\n            </button>\r\n            <button\r\n              style={{ marginLeft: \".5em\" }}\r\n              onClick={event =>\r\n              {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setCurrentSearch(\"\");\r\n                dispatch({\r\n                  type: \"search_unit_data\",\r\n                  payload: ''\r\n                })\r\n              }}\r\n              title=\"Reset the Search\"\r\n              type=\"button\"\r\n              className=\"button is-warning is-small\">\r\n              <span className=\"icon is-small\">\r\n                <i className=\"fas fa-undo-alt\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n          <p className=\"level-item has-text-weight-bold\">Error Filters</p>\r\n          <div className=\"level-item tabs\">\r\n            <ul>\r\n              <li className={`${state.unit_data_special_filter === '' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#NoFilter\"\r\n                  onClick={event => { dispatch({ type: \"unit_data_special_filter\", payload: '' }) }}>\r\n                  Show All\r\n                </a>\r\n              </li>\r\n              <li className={`${state.unit_data_special_filter === 'error' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#AllErrors\"\r\n                  onClick={event => { dispatch({ type: \"unit_data_special_filter\", payload: 'error' }) }}>\r\n                  Errors\r\n                </a>\r\n              </li>\r\n              <li className={`${state.unit_data_special_filter === 'unit' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#AssetTagErrors\"\r\n                  onClick={event => { dispatch({ type: \"unit_data_special_filter\", payload: 'avl' }) }}>\r\n                  AVL\r\n                </a>\r\n              </li>\r\n              <li className={`${state.unit_data_special_filter === 'unit' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#UnitErrors\"\r\n                  onClick={event => { dispatch({ type: \"unit_data_special_filter\", payload: 'fc' }) }}>\r\n                  FC\r\n                </a>\r\n              </li>\r\n              <li className={`${state.unit_data_special_filter === 'date' ? 'is-active' : ''}`}>\r\n                <a\r\n                  href=\"#DateErrors\"\r\n                  onClick={event => { dispatch({ type: \"unit_data_special_filter\", payload: 'cad' }) }}>\r\n                  CAD\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              #\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUnitCode\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'unit_data_sort', payload: 'unitcode' });\r\n                }}\r\n                className={`${state.unit_data_sort_field !== 'unitcode' ? '' : state.unit_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Unit\r\n              </a>\r\n              <span\r\n                style={{ marginLeft: \"1em\" }}\r\n                title=\"Add A Unit\"\r\n                className=\"icon cursor_pointer has-text-danger\"\r\n                onClick={event =>\r\n                {\r\n                  setShowAddUnit(!showAddUnit);\r\n                }}>\r\n                <i className=\"fas fa-plus-circle\"></i>\r\n              </span>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByUsingUnit\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'unit_data_sort', payload: 'using_unit' });\r\n                }}\r\n                className={`${state.unit_data_sort_field !== 'using_unit' ? '' : state.unit_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                Using Unit\r\n              </a>\r\n            </th>\r\n            <th>\r\n              <a\r\n                href=\"#SortByGroup\"\r\n                onClick={event =>\r\n                {\r\n                  event.preventDefault();\r\n                  dispatch({ type: 'unit_data_sort', payload: 'group_label' });\r\n                }}\r\n                className={`${state.unit_data_sort_field !== 'group_label' ? '' : state.unit_data_sort_ascending ? 'sort_ascending' : 'sort_descending'}`}>\r\n                <span\r\n                  title=\"View this on the Map\"\r\n                  className=\"icon\">\r\n                  <i className=\"fas fa-sort\"></i>\r\n                </span>\r\n\r\n              </a>\r\n              <div\r\n                style={{ display: \"inline-block\" }}\r\n                className=\"control\">\r\n                <div className=\"select is-small\">\r\n                  <select\r\n                    onChange={event =>\r\n                    {\r\n                      let currentOption = event.target.options[event.target.selectedIndex].innerText;\r\n                      if (currentOption === \"All Groups\") currentOption = \"\";\r\n                      setCurrentSearch(currentOption);\r\n                      dispatch({\r\n                        type: \"search_unit_data\",\r\n                        payload: currentOption\r\n                      })\r\n\r\n                    }}>\r\n                    <option value=\"\">All Groups</option>\r\n                    {\r\n                      state.unit_groups.map(group =>\r\n                      {\r\n                        return (\r\n                          <option key={group.value} value={group.value}>{group.label}</option>\r\n                        )\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th>\r\n              AVL\r\n            </th>\r\n            <th>\r\n              FC\r\n            </th>\r\n            <th>\r\n              CAD\r\n            </th>\r\n            <th className=\"has-text-centered\">\r\n              Options\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <AddUnit\r\n            unitcode=\"\"\r\n            has_avl_device={false}\r\n            has_fc_device={false}\r\n            should_have_cad_location={false}\r\n            group_label={\"\"}\r\n            show_add_unit={showAddUnit}\r\n            cancel={hideAddUnit}\r\n\r\n          />\r\n          {state.filtered_unit_data.map((u, index) =>\r\n          {\r\n            return (<Unit key={u.unitcode} index={index} {...u} />);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UnitList;","import React, { useEffect, useRef } from 'react';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nexport const WebMapView = () =>\r\n{\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(\r\n    () =>\r\n    {\r\n      // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n      loadModules(['esri/Map', 'esri/views/MapView'], { css: true })\r\n        .then(([ArcGISMap, MapView]) =>\r\n        {\r\n          const map = new ArcGISMap({\r\n            basemap: 'osm'\r\n          });\r\n\r\n          // load the map view at the ref's DOM node\r\n          const view = new MapView({\r\n            container: mapRef.current,\r\n            map: map,\r\n            center: [-81.80, 29.950],\r\n            zoom: 11\r\n          });\r\n\r\n          return () =>\r\n          {\r\n            if (view)\r\n            {\r\n              // destroy the map view\r\n              view.container = null;\r\n            }\r\n          };\r\n        });\r\n    }\r\n  );\r\n\r\n  return <div className=\"webmap\" ref={mapRef} />;\r\n};","import { Get, Post_Empty } from './Utilities';\r\n\r\ninterface ISimpleValue\r\n{\r\n  label: string\r\n  value: string\r\n}\r\n\r\nclass SimpleValue implements ISimpleValue\r\n{\r\n  public label: string = \"\";\r\n  public value: string = \"\";\r\n\r\n  public static async GetUnitGroups(): Promise<Array<SimpleValue>>\r\n  {\r\n    const data = await Get<Array<SimpleValue>>('API/Group/GetUnitGroups');\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport default SimpleValue;","import React from 'react';\nimport Nav from './nav';\nimport { Store } from './Store';\nimport AVLData from './AVL/AVLData';\nimport AVLList from './AVL/AVLList';\nimport FleetCompleteData from './FleetComplete/FleetCompleteData';\nimport FCList from './FleetComplete/FCList';\nimport CADData from './Cad/CADData';\nimport CADList from './Cad/CADList';\nimport UnitData from './Unit/UnitData';\nimport UnitList from './Unit/UnitList';\nimport { WebMapView } from './WebMapView';\nimport SimpleValue from './SimpleValue';\n//import './App.css';\n\nconst App: React.FC = () =>\r\n{\n  const { state, dispatch } = React.useContext(Store);\n\n  React.useEffect(() =>\n  {\n    fetchUnitData();\n    fetchAVLData();\r\n    fetchFCData();\r\n    fetchCADData();\r\n    fetchUnitGroups();\n    //state.unit_data.length === 0 && fetchUnitData();\n    //state.avl_data.length === 0 && fetchAVLData();\r\n    //state.fc_data.length === 0 && fetchFCData();\r\n    //state.cad_data.length === 0 && fetchCADData();\r\n    //state.unit_groups.length === 0 && fetchUnitGroups();\r\n  }, []);\n\n  const fetchUnitGroups = async () =>\r\n  {\n    const data = await SimpleValue.GetUnitGroups();\r\n    return dispatch({ type: 'get_unit_groups_data', payload: data });\r\n  }\n\n  const fetchAVLData = async () =>\r\n  {\n    const data = await AVLData.Get();\r\n    return dispatch({ type: 'get_avl_data', payload: data });\r\n  }\n\n  const fetchFCData = async () =>\r\n  {\n    const data = await FleetCompleteData.Get();\r\n    console.log('fleet complete data', data);\r\n    return dispatch({ type: 'get_fc_data', payload: data });\r\n  }\n\n  const fetchCADData = async () =>\r\n  {\n    const data = await CADData.Get();\r\n    console.log('CAD data', data);\r\n    return dispatch({ type: 'get_cad_data', payload: data });\r\n  }\n\n  const fetchUnitData = async () =>\r\n  {\n    const data = await UnitData.Get();\r\n    console.log('Unit data', data);\r\n    return dispatch({ type: 'get_unit_data', payload: data });\r\n  }\n\n  return (\n    <>\n      <Nav />\n      \n      <div className=\"columns main-container is-mobile\">\n        <div          \n          style={{ paddingRight: 0 }}\n          className={`column left-side ${state.current_view !== 'map' ? 'is-full-mobile is-full-tablet is-full-desktop is-half-widescreen is-half-fullhd' : 'hide'}`}>          \n          {state.current_view === \"avl\" ? <AVLList /> : null}\n          {state.current_view === \"unit\" ? <UnitList /> : null}\n          {state.current_view === \"fc\" ? <FCList /> : null}\n          {state.current_view === \"cad\" ? <CADList /> : null}\n        </div>\n\n        <div\n          style={{paddingLeft: 0}}\n          className={`column right-side ${state.current_view !== 'map' ? 'is-half-widescreen is-half-fullhd' : ''}`}>\n          {\n            <WebMapView />\r\n          }\n          \n        </div>\n\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport { StoreProvider } from './Store';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}